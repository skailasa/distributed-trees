{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0","program":"/home/sri/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ascii","/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=2d191a8035d381c7","-C","extra-filename=-2d191a8035d381c7","--out-dir","/home/sri/Github/distributed-trees/tree/target/rls/debug/deps","-L","dependency=/home/sri/Github/distributed-trees/tree/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/sri/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sri/Github/distributed-trees/tree/target/rls/debug/deps/libascii-2d191a8035d381c7.rmeta"},"prelude":{"crate_id":{"name":"ascii","disambiguator":[95391161716993232,0]},"crate_root":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src","external_crates":[{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}}],"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":0,"byte_end":2230,"line_start":1,"line_end":59,"column_start":1,"column_end":54}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1917,"byte_end":1926,"line_start":54,"line_end":54,"column_start":22,"column_end":31},"alias_span":null,"name":"AsciiChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1928,"byte_end":1939,"line_start":54,"line_end":54,"column_start":33,"column_end":44},"alias_span":null,"name":"ToAsciiChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1941,"byte_end":1957,"line_start":54,"line_end":54,"column_start":46,"column_end":62},"alias_span":null,"name":"ToAsciiCharError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1980,"byte_end":1988,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"alias_span":null,"name":"AsciiStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1990,"byte_end":2000,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"alias_span":null,"name":"AsAsciiStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2002,"byte_end":2015,"line_start":55,"line_end":55,"column_start":43,"column_end":56},"alias_span":null,"name":"AsMutAsciiStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2017,"byte_end":2032,"line_start":55,"line_end":55,"column_start":58,"column_end":73},"alias_span":null,"name":"AsAsciiStrError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1170},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2055,"byte_end":2060,"line_start":56,"line_end":56,"column_start":21,"column_end":26},"alias_span":null,"name":"Chars","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1180},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2062,"byte_end":2070,"line_start":56,"line_end":56,"column_start":28,"column_end":36},"alias_span":null,"name":"CharsMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1187},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2072,"byte_end":2080,"line_start":56,"line_end":56,"column_start":38,"column_end":46},"alias_span":null,"name":"CharsRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2130,"byte_end":2141,"line_start":58,"line_end":58,"column_start":24,"column_end":35},"alias_span":null,"name":"AsciiString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2143,"byte_end":2158,"line_start":58,"line_end":58,"column_start":37,"column_end":52},"alias_span":null,"name":"IntoAsciiString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2160,"byte_end":2174,"line_start":58,"line_end":58,"column_start":54,"column_end":68},"alias_span":null,"name":"FromAsciiError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2202,"byte_end":2214,"line_start":59,"line_end":59,"column_start":26,"column_end":38},"alias_span":null,"name":"caret_encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":2216,"byte_end":2228,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"alias_span":null,"name":"caret_decode","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":0,"byte_end":2230,"line_start":1,"line_end":59,"column_start":1,"column_end":54},"name":"","qualname":"::","value":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":91},{"krate":0,"index":395},{"krate":0,"index":610},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":669}],"decl_id":null,"docs":" A library that provides ASCII-only string and character types, equivalent to the `char`, `str`\n and `String` types in the standard library.","sig":null,"attributes":[{"value":"/ A library that provides ASCII-only string and character types, equivalent to the `char`, `str`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":509,"byte_end":607,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ and `String` types in the standard library.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":608,"byte_end":655,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":656,"byte_end":659,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Please refer to the readme file to learn about the different feature modes of this crate.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":660,"byte_end":753,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":754,"byte_end":757,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Minimum supported Rust version","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":758,"byte_end":794,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":795,"byte_end":798,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The minimum Rust version for 1.0.\\* releases is 1.33.0.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":799,"byte_end":858,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/ Later 1.y.0 releases might require newer Rust versions, but the three most","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":859,"byte_end":937,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ recent stable releases at the time of publishing will always be supported.  ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":938,"byte_end":1018,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ For example this means that if the current stable Rust version is 1.38 when","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1019,"byte_end":1098,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ ascii 1.1.0 is released, then ascii 1.1.* will not require a newer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1099,"byte_end":1169,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ Rust version than 1.36.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1170,"byte_end":1197,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1198,"byte_end":1201,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # History","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1202,"byte_end":1215,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1216,"byte_end":1219,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This package included the Ascii types that were removed from the Rust standard library by the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1220,"byte_end":1317,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ 2014-12 [reform of the `std::ascii` module](https://github.com/rust-lang/rfcs/pull/486). The","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1318,"byte_end":1414,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/ API changed significantly since then.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1415,"byte_end":1456,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/lib.rs","byte_start":1502,"byte_end":1547,"line_start":35,"line_end":35,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2599,"byte_end":2603,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Null","qualname":"::ascii_char::AsciiChar::Null","value":"AsciiChar::Null","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'\\0'`\n","sig":null,"attributes":[{"value":"/ `'\\0'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2584,"byte_end":2594,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":676},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2687,"byte_end":2690,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"SOH","qualname":"::ascii_char::AsciiChar::SOH","value":"AsciiChar::SOH","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Start Of Heading](http://en.wikipedia.org/wiki/Start_of_Heading)\n","sig":null,"attributes":[{"value":"/ [Start Of Heading](http://en.wikipedia.org/wiki/Start_of_Heading)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2613,"byte_end":2682,"line_start":16,"line_end":16,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2768,"byte_end":2771,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"SOX","qualname":"::ascii_char::AsciiChar::SOX","value":"AsciiChar::SOX","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Start Of teXt](http://en.wikipedia.org/wiki/Start_of_Text)\n","sig":null,"attributes":[{"value":"/ [Start Of teXt](http://en.wikipedia.org/wiki/Start_of_Text)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2700,"byte_end":2763,"line_start":18,"line_end":18,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":682},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2855,"byte_end":2858,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"ETX","qualname":"::ascii_char::AsciiChar::ETX","value":"AsciiChar::ETX","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [End of TeXt](http://en.wikipedia.org/wiki/End-of-Text_character)\n","sig":null,"attributes":[{"value":"/ [End of TeXt](http://en.wikipedia.org/wiki/End-of-Text_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2781,"byte_end":2850,"line_start":20,"line_end":20,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":685},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2958,"byte_end":2961,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"EOT","qualname":"::ascii_char::AsciiChar::EOT","value":"AsciiChar::EOT","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [End Of Transmission](http://en.wikipedia.org/wiki/End-of-Transmission_character)\n","sig":null,"attributes":[{"value":"/ [End Of Transmission](http://en.wikipedia.org/wiki/End-of-Transmission_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2868,"byte_end":2953,"line_start":22,"line_end":22,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":688},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3037,"byte_end":3040,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"ENQ","qualname":"::ascii_char::AsciiChar::ENQ","value":"AsciiChar::ENQ","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Enquiry](http://en.wikipedia.org/wiki/Enquiry_character)\n","sig":null,"attributes":[{"value":"/ [Enquiry](http://en.wikipedia.org/wiki/Enquiry_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2971,"byte_end":3032,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":691},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3128,"byte_end":3131,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"ACK","qualname":"::ascii_char::AsciiChar::ACK","value":"AsciiChar::ACK","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Acknowledgement](http://en.wikipedia.org/wiki/Acknowledge_character)\n","sig":null,"attributes":[{"value":"/ [Acknowledgement](http://en.wikipedia.org/wiki/Acknowledge_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3050,"byte_end":3123,"line_start":26,"line_end":26,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3269,"byte_end":3273,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Bell","qualname":"::ascii_char::AsciiChar::Bell","value":"AsciiChar::Bell","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [bell / alarm / audible](http://en.wikipedia.org/wiki/Bell_character)","sig":null,"attributes":[{"value":"/ [bell / alarm / audible](http://en.wikipedia.org/wiki/Bell_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3141,"byte_end":3214,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3219,"byte_end":3222,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ `'\\a'` is not recognized by Rust.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3227,"byte_end":3264,"line_start":30,"line_end":30,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3393,"byte_end":3402,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"BackSpace","qualname":"::ascii_char::AsciiChar::BackSpace","value":"AsciiChar::BackSpace","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Backspace](http://en.wikipedia.org/wiki/Backspace)","sig":null,"attributes":[{"value":"/ [Backspace](http://en.wikipedia.org/wiki/Backspace)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3283,"byte_end":3338,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3343,"byte_end":3346,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ `'\\b'` is not recognized by Rust.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3351,"byte_end":3388,"line_start":34,"line_end":34,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3427,"byte_end":3430,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Tab","qualname":"::ascii_char::AsciiChar::Tab","value":"AsciiChar::Tab","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'\\t'`\n","sig":null,"attributes":[{"value":"/ `'\\t'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3412,"byte_end":3422,"line_start":36,"line_end":36,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":703},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3455,"byte_end":3463,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"LineFeed","qualname":"::ascii_char::AsciiChar::LineFeed","value":"AsciiChar::LineFeed","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'\\n'`\n","sig":null,"attributes":[{"value":"/ `'\\n'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3440,"byte_end":3450,"line_start":38,"line_end":38,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":706},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3590,"byte_end":3592,"line_start":43,"line_end":43,"column_start":5,"column_end":7},"name":"VT","qualname":"::ascii_char::AsciiChar::VT","value":"AsciiChar::VT","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Vertical tab](http://en.wikipedia.org/wiki/Vertical_Tab)","sig":null,"attributes":[{"value":"/ [Vertical tab](http://en.wikipedia.org/wiki/Vertical_Tab)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3474,"byte_end":3535,"line_start":40,"line_end":40,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3540,"byte_end":3543,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ `'\\v'` is not recognized by Rust.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3548,"byte_end":3585,"line_start":42,"line_end":42,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3713,"byte_end":3715,"line_start":47,"line_end":47,"column_start":5,"column_end":7},"name":"FF","qualname":"::ascii_char::AsciiChar::FF","value":"AsciiChar::FF","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Form Feed](http://en.wikipedia.org/wiki/Form_Feed)","sig":null,"attributes":[{"value":"/ [Form Feed](http://en.wikipedia.org/wiki/Form_Feed)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3603,"byte_end":3658,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3663,"byte_end":3666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ `'\\f'` is not recognized by Rust.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3671,"byte_end":3708,"line_start":46,"line_end":46,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3741,"byte_end":3755,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"CarriageReturn","qualname":"::ascii_char::AsciiChar::CarriageReturn","value":"AsciiChar::CarriageReturn","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'\\r'`\n","sig":null,"attributes":[{"value":"/ `'\\r'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3726,"byte_end":3736,"line_start":48,"line_end":48,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":715},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3849,"byte_end":3851,"line_start":51,"line_end":51,"column_start":5,"column_end":7},"name":"SI","qualname":"::ascii_char::AsciiChar::SI","value":"AsciiChar::SI","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Shift In](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)\n","sig":null,"attributes":[{"value":"/ [Shift In](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3766,"byte_end":3844,"line_start":50,"line_end":50,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":718},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3946,"byte_end":3948,"line_start":53,"line_end":53,"column_start":5,"column_end":7},"name":"SO","qualname":"::ascii_char::AsciiChar::SO","value":"AsciiChar::SO","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Shift Out](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)\n","sig":null,"attributes":[{"value":"/ [Shift Out](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3862,"byte_end":3941,"line_start":52,"line_end":52,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4033,"byte_end":4036,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"DLE","qualname":"::ascii_char::AsciiChar::DLE","value":"AsciiChar::DLE","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Data Link Escape](http://en.wikipedia.org/wiki/Data_Link_Escape)\n","sig":null,"attributes":[{"value":"/ [Data Link Escape](http://en.wikipedia.org/wiki/Data_Link_Escape)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":3959,"byte_end":4028,"line_start":54,"line_end":54,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":724},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4132,"byte_end":4135,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"DC1","qualname":"::ascii_char::AsciiChar::DC1","value":"AsciiChar::DC1","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Device control 1, often XON](http://en.wikipedia.org/wiki/Device_Control_1)\n","sig":null,"attributes":[{"value":"/ [Device control 1, often XON](http://en.wikipedia.org/wiki/Device_Control_1)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4047,"byte_end":4127,"line_start":56,"line_end":56,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":727},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4171,"byte_end":4174,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"DC2","qualname":"::ascii_char::AsciiChar::DC2","value":"AsciiChar::DC2","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Device control 2\n","sig":null,"attributes":[{"value":"/ Device control 2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4146,"byte_end":4166,"line_start":58,"line_end":58,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":730},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4222,"byte_end":4225,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"DC3","qualname":"::ascii_char::AsciiChar::DC3","value":"AsciiChar::DC3","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Device control 3, Often XOFF\n","sig":null,"attributes":[{"value":"/ Device control 3, Often XOFF","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4185,"byte_end":4217,"line_start":60,"line_end":60,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4261,"byte_end":4264,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"DC4","qualname":"::ascii_char::AsciiChar::DC4","value":"AsciiChar::DC4","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Device control 4\n","sig":null,"attributes":[{"value":"/ Device control 4","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4236,"byte_end":4256,"line_start":62,"line_end":62,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":736},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4371,"byte_end":4374,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"NAK","qualname":"::ascii_char::AsciiChar::NAK","value":"AsciiChar::NAK","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Negative AcKnowledgement](http://en.wikipedia.org/wiki/Negative-acknowledge_character)\n","sig":null,"attributes":[{"value":"/ [Negative AcKnowledgement](http://en.wikipedia.org/wiki/Negative-acknowledge_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4275,"byte_end":4366,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4459,"byte_end":4462,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"SYN","qualname":"::ascii_char::AsciiChar::SYN","value":"AsciiChar::SYN","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Synchronous idle](http://en.wikipedia.org/wiki/Synchronous_Idle)\n","sig":null,"attributes":[{"value":"/ [Synchronous idle](http://en.wikipedia.org/wiki/Synchronous_Idle)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4385,"byte_end":4454,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4575,"byte_end":4578,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"ETB","qualname":"::ascii_char::AsciiChar::ETB","value":"AsciiChar::ETB","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [End of Transmission Block](http://en.wikipedia.org/wiki/End-of-Transmission-Block_character)\n","sig":null,"attributes":[{"value":"/ [End of Transmission Block](http://en.wikipedia.org/wiki/End-of-Transmission-Block_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4473,"byte_end":4570,"line_start":68,"line_end":68,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4653,"byte_end":4656,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"CAN","qualname":"::ascii_char::AsciiChar::CAN","value":"AsciiChar::CAN","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Cancel](http://en.wikipedia.org/wiki/Cancel_character)\n","sig":null,"attributes":[{"value":"/ [Cancel](http://en.wikipedia.org/wiki/Cancel_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4589,"byte_end":4648,"line_start":70,"line_end":70,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4735,"byte_end":4737,"line_start":73,"line_end":73,"column_start":5,"column_end":7},"name":"EM","qualname":"::ascii_char::AsciiChar::EM","value":"AsciiChar::EM","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [End of Medium](http://en.wikipedia.org/wiki/End_of_Medium)\n","sig":null,"attributes":[{"value":"/ [End of Medium](http://en.wikipedia.org/wiki/End_of_Medium)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4667,"byte_end":4730,"line_start":72,"line_end":72,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":751},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4820,"byte_end":4823,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"SUB","qualname":"::ascii_char::AsciiChar::SUB","value":"AsciiChar::SUB","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Substitute](http://en.wikipedia.org/wiki/Substitute_character)\n","sig":null,"attributes":[{"value":"/ [Substitute](http://en.wikipedia.org/wiki/Substitute_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4748,"byte_end":4815,"line_start":74,"line_end":74,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4948,"byte_end":4951,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"ESC","qualname":"::ascii_char::AsciiChar::ESC","value":"AsciiChar::ESC","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Escape](http://en.wikipedia.org/wiki/Escape_character)","sig":null,"attributes":[{"value":"/ [Escape](http://en.wikipedia.org/wiki/Escape_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4834,"byte_end":4893,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4898,"byte_end":4901,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `'\\e'` is not recognized by Rust.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4906,"byte_end":4943,"line_start":78,"line_end":78,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5032,"byte_end":5034,"line_start":81,"line_end":81,"column_start":5,"column_end":7},"name":"FS","qualname":"::ascii_char::AsciiChar::FS","value":"AsciiChar::FS","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [File Separator](http://en.wikipedia.org/wiki/File_separator)\n","sig":null,"attributes":[{"value":"/ [File Separator](http://en.wikipedia.org/wiki/File_separator)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":4962,"byte_end":5027,"line_start":80,"line_end":80,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5117,"byte_end":5119,"line_start":83,"line_end":83,"column_start":5,"column_end":7},"name":"GS","qualname":"::ascii_char::AsciiChar::GS","value":"AsciiChar::GS","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Group Separator](http://en.wikipedia.org/wiki/Group_separator)\n","sig":null,"attributes":[{"value":"/ [Group Separator](http://en.wikipedia.org/wiki/Group_separator)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5045,"byte_end":5112,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5204,"byte_end":5206,"line_start":85,"line_end":85,"column_start":5,"column_end":7},"name":"RS","qualname":"::ascii_char::AsciiChar::RS","value":"AsciiChar::RS","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Record Separator](http://en.wikipedia.org/wiki/Record_separator)\n","sig":null,"attributes":[{"value":"/ [Record Separator](http://en.wikipedia.org/wiki/Record_separator)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5130,"byte_end":5199,"line_start":84,"line_end":84,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":766},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5287,"byte_end":5289,"line_start":87,"line_end":87,"column_start":5,"column_end":7},"name":"US","qualname":"::ascii_char::AsciiChar::US","value":"AsciiChar::US","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Unit Separator](http://en.wikipedia.org/wiki/Unit_separator)\n","sig":null,"attributes":[{"value":"/ [Unit Separator](http://en.wikipedia.org/wiki/Unit_separator)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5217,"byte_end":5282,"line_start":86,"line_end":86,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5314,"byte_end":5319,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Space","qualname":"::ascii_char::AsciiChar::Space","value":"AsciiChar::Space","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `' '`\n","sig":null,"attributes":[{"value":"/ `' '`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5300,"byte_end":5309,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":772},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5344,"byte_end":5355,"line_start":91,"line_end":91,"column_start":5,"column_end":16},"name":"Exclamation","qualname":"::ascii_char::AsciiChar::Exclamation","value":"AsciiChar::Exclamation","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'!'`\n","sig":null,"attributes":[{"value":"/ `'!'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5330,"byte_end":5339,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":775},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5380,"byte_end":5389,"line_start":93,"line_end":93,"column_start":5,"column_end":14},"name":"Quotation","qualname":"::ascii_char::AsciiChar::Quotation","value":"AsciiChar::Quotation","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'\"'`\n","sig":null,"attributes":[{"value":"/ `'\"'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5366,"byte_end":5375,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":778},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5414,"byte_end":5418,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Hash","qualname":"::ascii_char::AsciiChar::Hash","value":"AsciiChar::Hash","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'#'`\n","sig":null,"attributes":[{"value":"/ `'#'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5400,"byte_end":5409,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":781},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5443,"byte_end":5449,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"Dollar","qualname":"::ascii_char::AsciiChar::Dollar","value":"AsciiChar::Dollar","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'$'`\n","sig":null,"attributes":[{"value":"/ `'$'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5429,"byte_end":5438,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":784},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5474,"byte_end":5481,"line_start":99,"line_end":99,"column_start":5,"column_end":12},"name":"Percent","qualname":"::ascii_char::AsciiChar::Percent","value":"AsciiChar::Percent","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'%'`\n","sig":null,"attributes":[{"value":"/ `'%'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5460,"byte_end":5469,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":787},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5506,"byte_end":5515,"line_start":101,"line_end":101,"column_start":5,"column_end":14},"name":"Ampersand","qualname":"::ascii_char::AsciiChar::Ampersand","value":"AsciiChar::Ampersand","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'&'`\n","sig":null,"attributes":[{"value":"/ `'&'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5492,"byte_end":5501,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":790},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5541,"byte_end":5551,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"Apostrophe","qualname":"::ascii_char::AsciiChar::Apostrophe","value":"AsciiChar::Apostrophe","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'\\''`\n","sig":null,"attributes":[{"value":"/ `'\\''`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5526,"byte_end":5536,"line_start":102,"line_end":102,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":793},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5576,"byte_end":5585,"line_start":105,"line_end":105,"column_start":5,"column_end":14},"name":"ParenOpen","qualname":"::ascii_char::AsciiChar::ParenOpen","value":"AsciiChar::ParenOpen","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'('`\n","sig":null,"attributes":[{"value":"/ `'('`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5562,"byte_end":5571,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":796},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5610,"byte_end":5620,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"ParenClose","qualname":"::ascii_char::AsciiChar::ParenClose","value":"AsciiChar::ParenClose","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `')'`\n","sig":null,"attributes":[{"value":"/ `')'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5596,"byte_end":5605,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":799},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5645,"byte_end":5653,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Asterisk","qualname":"::ascii_char::AsciiChar::Asterisk","value":"AsciiChar::Asterisk","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'*'`\n","sig":null,"attributes":[{"value":"/ `'*'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5631,"byte_end":5640,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":802},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5678,"byte_end":5682,"line_start":111,"line_end":111,"column_start":5,"column_end":9},"name":"Plus","qualname":"::ascii_char::AsciiChar::Plus","value":"AsciiChar::Plus","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'+'`\n","sig":null,"attributes":[{"value":"/ `'+'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5664,"byte_end":5673,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":805},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5707,"byte_end":5712,"line_start":113,"line_end":113,"column_start":5,"column_end":10},"name":"Comma","qualname":"::ascii_char::AsciiChar::Comma","value":"AsciiChar::Comma","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `','`\n","sig":null,"attributes":[{"value":"/ `','`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5693,"byte_end":5702,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":808},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5737,"byte_end":5742,"line_start":115,"line_end":115,"column_start":5,"column_end":10},"name":"Minus","qualname":"::ascii_char::AsciiChar::Minus","value":"AsciiChar::Minus","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'-'`\n","sig":null,"attributes":[{"value":"/ `'-'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5723,"byte_end":5732,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":811},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5767,"byte_end":5770,"line_start":117,"line_end":117,"column_start":5,"column_end":8},"name":"Dot","qualname":"::ascii_char::AsciiChar::Dot","value":"AsciiChar::Dot","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'.'`\n","sig":null,"attributes":[{"value":"/ `'.'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5753,"byte_end":5762,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5795,"byte_end":5800,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Slash","qualname":"::ascii_char::AsciiChar::Slash","value":"AsciiChar::Slash","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'/'`\n","sig":null,"attributes":[{"value":"/ `'/'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5781,"byte_end":5790,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5825,"byte_end":5827,"line_start":121,"line_end":121,"column_start":5,"column_end":7},"name":"_0","qualname":"::ascii_char::AsciiChar::_0","value":"AsciiChar::_0","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'0'`\n","sig":null,"attributes":[{"value":"/ `'0'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5811,"byte_end":5820,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5852,"byte_end":5854,"line_start":123,"line_end":123,"column_start":5,"column_end":7},"name":"_1","qualname":"::ascii_char::AsciiChar::_1","value":"AsciiChar::_1","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'1'`\n","sig":null,"attributes":[{"value":"/ `'1'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5838,"byte_end":5847,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5879,"byte_end":5881,"line_start":125,"line_end":125,"column_start":5,"column_end":7},"name":"_2","qualname":"::ascii_char::AsciiChar::_2","value":"AsciiChar::_2","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'2'`\n","sig":null,"attributes":[{"value":"/ `'2'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5865,"byte_end":5874,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":826},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5906,"byte_end":5908,"line_start":127,"line_end":127,"column_start":5,"column_end":7},"name":"_3","qualname":"::ascii_char::AsciiChar::_3","value":"AsciiChar::_3","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'3'`\n","sig":null,"attributes":[{"value":"/ `'3'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5892,"byte_end":5901,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":829},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5933,"byte_end":5935,"line_start":129,"line_end":129,"column_start":5,"column_end":7},"name":"_4","qualname":"::ascii_char::AsciiChar::_4","value":"AsciiChar::_4","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'4'`\n","sig":null,"attributes":[{"value":"/ `'4'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5919,"byte_end":5928,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":832},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5960,"byte_end":5962,"line_start":131,"line_end":131,"column_start":5,"column_end":7},"name":"_5","qualname":"::ascii_char::AsciiChar::_5","value":"AsciiChar::_5","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'5'`\n","sig":null,"attributes":[{"value":"/ `'5'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5946,"byte_end":5955,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":835},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5987,"byte_end":5989,"line_start":133,"line_end":133,"column_start":5,"column_end":7},"name":"_6","qualname":"::ascii_char::AsciiChar::_6","value":"AsciiChar::_6","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'6'`\n","sig":null,"attributes":[{"value":"/ `'6'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":5973,"byte_end":5982,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":838},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6014,"byte_end":6016,"line_start":135,"line_end":135,"column_start":5,"column_end":7},"name":"_7","qualname":"::ascii_char::AsciiChar::_7","value":"AsciiChar::_7","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'7'`\n","sig":null,"attributes":[{"value":"/ `'7'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6000,"byte_end":6009,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":841},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6041,"byte_end":6043,"line_start":137,"line_end":137,"column_start":5,"column_end":7},"name":"_8","qualname":"::ascii_char::AsciiChar::_8","value":"AsciiChar::_8","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'8'`\n","sig":null,"attributes":[{"value":"/ `'8'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6027,"byte_end":6036,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":844},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6068,"byte_end":6070,"line_start":139,"line_end":139,"column_start":5,"column_end":7},"name":"_9","qualname":"::ascii_char::AsciiChar::_9","value":"AsciiChar::_9","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'9'`\n","sig":null,"attributes":[{"value":"/ `'9'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6054,"byte_end":6063,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":847},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6095,"byte_end":6100,"line_start":141,"line_end":141,"column_start":5,"column_end":10},"name":"Colon","qualname":"::ascii_char::AsciiChar::Colon","value":"AsciiChar::Colon","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `':'`\n","sig":null,"attributes":[{"value":"/ `':'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6081,"byte_end":6090,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6125,"byte_end":6134,"line_start":143,"line_end":143,"column_start":5,"column_end":14},"name":"Semicolon","qualname":"::ascii_char::AsciiChar::Semicolon","value":"AsciiChar::Semicolon","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `';'`\n","sig":null,"attributes":[{"value":"/ `';'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6111,"byte_end":6120,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":853},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6159,"byte_end":6167,"line_start":145,"line_end":145,"column_start":5,"column_end":13},"name":"LessThan","qualname":"::ascii_char::AsciiChar::LessThan","value":"AsciiChar::LessThan","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'<'`\n","sig":null,"attributes":[{"value":"/ `'<'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6145,"byte_end":6154,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6192,"byte_end":6197,"line_start":147,"line_end":147,"column_start":5,"column_end":10},"name":"Equal","qualname":"::ascii_char::AsciiChar::Equal","value":"AsciiChar::Equal","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'='`\n","sig":null,"attributes":[{"value":"/ `'='`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6178,"byte_end":6187,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6222,"byte_end":6233,"line_start":149,"line_end":149,"column_start":5,"column_end":16},"name":"GreaterThan","qualname":"::ascii_char::AsciiChar::GreaterThan","value":"AsciiChar::GreaterThan","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'>'`\n","sig":null,"attributes":[{"value":"/ `'>'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6208,"byte_end":6217,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":862},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6258,"byte_end":6266,"line_start":151,"line_end":151,"column_start":5,"column_end":13},"name":"Question","qualname":"::ascii_char::AsciiChar::Question","value":"AsciiChar::Question","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'?'`\n","sig":null,"attributes":[{"value":"/ `'?'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6244,"byte_end":6253,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6291,"byte_end":6293,"line_start":153,"line_end":153,"column_start":5,"column_end":7},"name":"At","qualname":"::ascii_char::AsciiChar::At","value":"AsciiChar::At","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'@'`\n","sig":null,"attributes":[{"value":"/ `'@'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6277,"byte_end":6286,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":868},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6318,"byte_end":6319,"line_start":155,"line_end":155,"column_start":5,"column_end":6},"name":"A","qualname":"::ascii_char::AsciiChar::A","value":"AsciiChar::A","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'A'`\n","sig":null,"attributes":[{"value":"/ `'A'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6304,"byte_end":6313,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":871},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6344,"byte_end":6345,"line_start":157,"line_end":157,"column_start":5,"column_end":6},"name":"B","qualname":"::ascii_char::AsciiChar::B","value":"AsciiChar::B","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'B'`\n","sig":null,"attributes":[{"value":"/ `'B'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6330,"byte_end":6339,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6370,"byte_end":6371,"line_start":159,"line_end":159,"column_start":5,"column_end":6},"name":"C","qualname":"::ascii_char::AsciiChar::C","value":"AsciiChar::C","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'C'`\n","sig":null,"attributes":[{"value":"/ `'C'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6356,"byte_end":6365,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6396,"byte_end":6397,"line_start":161,"line_end":161,"column_start":5,"column_end":6},"name":"D","qualname":"::ascii_char::AsciiChar::D","value":"AsciiChar::D","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'D'`\n","sig":null,"attributes":[{"value":"/ `'D'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6382,"byte_end":6391,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6422,"byte_end":6423,"line_start":163,"line_end":163,"column_start":5,"column_end":6},"name":"E","qualname":"::ascii_char::AsciiChar::E","value":"AsciiChar::E","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'E'`\n","sig":null,"attributes":[{"value":"/ `'E'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6408,"byte_end":6417,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6448,"byte_end":6449,"line_start":165,"line_end":165,"column_start":5,"column_end":6},"name":"F","qualname":"::ascii_char::AsciiChar::F","value":"AsciiChar::F","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'F'`\n","sig":null,"attributes":[{"value":"/ `'F'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6434,"byte_end":6443,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6474,"byte_end":6475,"line_start":167,"line_end":167,"column_start":5,"column_end":6},"name":"G","qualname":"::ascii_char::AsciiChar::G","value":"AsciiChar::G","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'G'`\n","sig":null,"attributes":[{"value":"/ `'G'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6460,"byte_end":6469,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6500,"byte_end":6501,"line_start":169,"line_end":169,"column_start":5,"column_end":6},"name":"H","qualname":"::ascii_char::AsciiChar::H","value":"AsciiChar::H","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'H'`\n","sig":null,"attributes":[{"value":"/ `'H'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6486,"byte_end":6495,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":892},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6526,"byte_end":6527,"line_start":171,"line_end":171,"column_start":5,"column_end":6},"name":"I","qualname":"::ascii_char::AsciiChar::I","value":"AsciiChar::I","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'I'`\n","sig":null,"attributes":[{"value":"/ `'I'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6512,"byte_end":6521,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6552,"byte_end":6553,"line_start":173,"line_end":173,"column_start":5,"column_end":6},"name":"J","qualname":"::ascii_char::AsciiChar::J","value":"AsciiChar::J","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'J'`\n","sig":null,"attributes":[{"value":"/ `'J'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6538,"byte_end":6547,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":898},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6578,"byte_end":6579,"line_start":175,"line_end":175,"column_start":5,"column_end":6},"name":"K","qualname":"::ascii_char::AsciiChar::K","value":"AsciiChar::K","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'K'`\n","sig":null,"attributes":[{"value":"/ `'K'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6564,"byte_end":6573,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6604,"byte_end":6605,"line_start":177,"line_end":177,"column_start":5,"column_end":6},"name":"L","qualname":"::ascii_char::AsciiChar::L","value":"AsciiChar::L","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'L'`\n","sig":null,"attributes":[{"value":"/ `'L'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6590,"byte_end":6599,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":904},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6630,"byte_end":6631,"line_start":179,"line_end":179,"column_start":5,"column_end":6},"name":"M","qualname":"::ascii_char::AsciiChar::M","value":"AsciiChar::M","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'M'`\n","sig":null,"attributes":[{"value":"/ `'M'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6616,"byte_end":6625,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6656,"byte_end":6657,"line_start":181,"line_end":181,"column_start":5,"column_end":6},"name":"N","qualname":"::ascii_char::AsciiChar::N","value":"AsciiChar::N","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'N'`\n","sig":null,"attributes":[{"value":"/ `'N'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6642,"byte_end":6651,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":910},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6682,"byte_end":6683,"line_start":183,"line_end":183,"column_start":5,"column_end":6},"name":"O","qualname":"::ascii_char::AsciiChar::O","value":"AsciiChar::O","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'O'`\n","sig":null,"attributes":[{"value":"/ `'O'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6668,"byte_end":6677,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6708,"byte_end":6709,"line_start":185,"line_end":185,"column_start":5,"column_end":6},"name":"P","qualname":"::ascii_char::AsciiChar::P","value":"AsciiChar::P","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'P'`\n","sig":null,"attributes":[{"value":"/ `'P'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6694,"byte_end":6703,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6734,"byte_end":6735,"line_start":187,"line_end":187,"column_start":5,"column_end":6},"name":"Q","qualname":"::ascii_char::AsciiChar::Q","value":"AsciiChar::Q","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'Q'`\n","sig":null,"attributes":[{"value":"/ `'Q'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6720,"byte_end":6729,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6760,"byte_end":6761,"line_start":189,"line_end":189,"column_start":5,"column_end":6},"name":"R","qualname":"::ascii_char::AsciiChar::R","value":"AsciiChar::R","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'R'`\n","sig":null,"attributes":[{"value":"/ `'R'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6746,"byte_end":6755,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":922},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6786,"byte_end":6787,"line_start":191,"line_end":191,"column_start":5,"column_end":6},"name":"S","qualname":"::ascii_char::AsciiChar::S","value":"AsciiChar::S","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'S'`\n","sig":null,"attributes":[{"value":"/ `'S'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6772,"byte_end":6781,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6812,"byte_end":6813,"line_start":193,"line_end":193,"column_start":5,"column_end":6},"name":"T","qualname":"::ascii_char::AsciiChar::T","value":"AsciiChar::T","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'T'`\n","sig":null,"attributes":[{"value":"/ `'T'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6798,"byte_end":6807,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6838,"byte_end":6839,"line_start":195,"line_end":195,"column_start":5,"column_end":6},"name":"U","qualname":"::ascii_char::AsciiChar::U","value":"AsciiChar::U","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'U'`\n","sig":null,"attributes":[{"value":"/ `'U'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6824,"byte_end":6833,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6864,"byte_end":6865,"line_start":197,"line_end":197,"column_start":5,"column_end":6},"name":"V","qualname":"::ascii_char::AsciiChar::V","value":"AsciiChar::V","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'V'`\n","sig":null,"attributes":[{"value":"/ `'V'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6850,"byte_end":6859,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":934},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6890,"byte_end":6891,"line_start":199,"line_end":199,"column_start":5,"column_end":6},"name":"W","qualname":"::ascii_char::AsciiChar::W","value":"AsciiChar::W","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'W'`\n","sig":null,"attributes":[{"value":"/ `'W'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6876,"byte_end":6885,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6916,"byte_end":6917,"line_start":201,"line_end":201,"column_start":5,"column_end":6},"name":"X","qualname":"::ascii_char::AsciiChar::X","value":"AsciiChar::X","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'X'`\n","sig":null,"attributes":[{"value":"/ `'X'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6902,"byte_end":6911,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6942,"byte_end":6943,"line_start":203,"line_end":203,"column_start":5,"column_end":6},"name":"Y","qualname":"::ascii_char::AsciiChar::Y","value":"AsciiChar::Y","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'Y'`\n","sig":null,"attributes":[{"value":"/ `'Y'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6928,"byte_end":6937,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6968,"byte_end":6969,"line_start":205,"line_end":205,"column_start":5,"column_end":6},"name":"Z","qualname":"::ascii_char::AsciiChar::Z","value":"AsciiChar::Z","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'Z'`\n","sig":null,"attributes":[{"value":"/ `'Z'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6954,"byte_end":6963,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6994,"byte_end":7005,"line_start":207,"line_end":207,"column_start":5,"column_end":16},"name":"BracketOpen","qualname":"::ascii_char::AsciiChar::BracketOpen","value":"AsciiChar::BracketOpen","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'['`\n","sig":null,"attributes":[{"value":"/ `'['`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":6980,"byte_end":6989,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7030,"byte_end":7039,"line_start":209,"line_end":209,"column_start":5,"column_end":14},"name":"BackSlash","qualname":"::ascii_char::AsciiChar::BackSlash","value":"AsciiChar::BackSlash","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'\\'`\n","sig":null,"attributes":[{"value":"/ `'\\'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7016,"byte_end":7025,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7064,"byte_end":7076,"line_start":211,"line_end":211,"column_start":5,"column_end":17},"name":"BracketClose","qualname":"::ascii_char::AsciiChar::BracketClose","value":"AsciiChar::BracketClose","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `']'`\n","sig":null,"attributes":[{"value":"/ `']'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7050,"byte_end":7059,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7101,"byte_end":7106,"line_start":213,"line_end":213,"column_start":5,"column_end":10},"name":"Caret","qualname":"::ascii_char::AsciiChar::Caret","value":"AsciiChar::Caret","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'_'`\n","sig":null,"attributes":[{"value":"/ `'_'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7087,"byte_end":7096,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":958},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7131,"byte_end":7141,"line_start":215,"line_end":215,"column_start":5,"column_end":15},"name":"UnderScore","qualname":"::ascii_char::AsciiChar::UnderScore","value":"AsciiChar::UnderScore","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'_'`\n","sig":null,"attributes":[{"value":"/ `'_'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7117,"byte_end":7126,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":961},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7166,"byte_end":7171,"line_start":217,"line_end":217,"column_start":5,"column_end":10},"name":"Grave","qualname":"::ascii_char::AsciiChar::Grave","value":"AsciiChar::Grave","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'`'`\n","sig":null,"attributes":[{"value":"/ `'`'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7152,"byte_end":7161,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":964},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7196,"byte_end":7197,"line_start":219,"line_end":219,"column_start":5,"column_end":6},"name":"a","qualname":"::ascii_char::AsciiChar::a","value":"AsciiChar::a","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'a'`\n","sig":null,"attributes":[{"value":"/ `'a'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7182,"byte_end":7191,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7222,"byte_end":7223,"line_start":221,"line_end":221,"column_start":5,"column_end":6},"name":"b","qualname":"::ascii_char::AsciiChar::b","value":"AsciiChar::b","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'b'`\n","sig":null,"attributes":[{"value":"/ `'b'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7208,"byte_end":7217,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":970},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7248,"byte_end":7249,"line_start":223,"line_end":223,"column_start":5,"column_end":6},"name":"c","qualname":"::ascii_char::AsciiChar::c","value":"AsciiChar::c","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'c'`\n","sig":null,"attributes":[{"value":"/ `'c'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7234,"byte_end":7243,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7274,"byte_end":7275,"line_start":225,"line_end":225,"column_start":5,"column_end":6},"name":"d","qualname":"::ascii_char::AsciiChar::d","value":"AsciiChar::d","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'d'`\n","sig":null,"attributes":[{"value":"/ `'d'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7260,"byte_end":7269,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":976},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7301,"byte_end":7302,"line_start":227,"line_end":227,"column_start":5,"column_end":6},"name":"e","qualname":"::ascii_char::AsciiChar::e","value":"AsciiChar::e","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'e'`\n","sig":null,"attributes":[{"value":"/ `'e'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7287,"byte_end":7296,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7328,"byte_end":7329,"line_start":229,"line_end":229,"column_start":5,"column_end":6},"name":"f","qualname":"::ascii_char::AsciiChar::f","value":"AsciiChar::f","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'f'`\n","sig":null,"attributes":[{"value":"/ `'f'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7314,"byte_end":7323,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":982},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7355,"byte_end":7356,"line_start":231,"line_end":231,"column_start":5,"column_end":6},"name":"g","qualname":"::ascii_char::AsciiChar::g","value":"AsciiChar::g","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'g'`\n","sig":null,"attributes":[{"value":"/ `'g'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7341,"byte_end":7350,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7382,"byte_end":7383,"line_start":233,"line_end":233,"column_start":5,"column_end":6},"name":"h","qualname":"::ascii_char::AsciiChar::h","value":"AsciiChar::h","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'h'`\n","sig":null,"attributes":[{"value":"/ `'h'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7368,"byte_end":7377,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":988},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7409,"byte_end":7410,"line_start":235,"line_end":235,"column_start":5,"column_end":6},"name":"i","qualname":"::ascii_char::AsciiChar::i","value":"AsciiChar::i","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'i'`\n","sig":null,"attributes":[{"value":"/ `'i'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7395,"byte_end":7404,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7436,"byte_end":7437,"line_start":237,"line_end":237,"column_start":5,"column_end":6},"name":"j","qualname":"::ascii_char::AsciiChar::j","value":"AsciiChar::j","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'j'`\n","sig":null,"attributes":[{"value":"/ `'j'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7422,"byte_end":7431,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":994},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7463,"byte_end":7464,"line_start":239,"line_end":239,"column_start":5,"column_end":6},"name":"k","qualname":"::ascii_char::AsciiChar::k","value":"AsciiChar::k","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'k'`\n","sig":null,"attributes":[{"value":"/ `'k'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7449,"byte_end":7458,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":997},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7490,"byte_end":7491,"line_start":241,"line_end":241,"column_start":5,"column_end":6},"name":"l","qualname":"::ascii_char::AsciiChar::l","value":"AsciiChar::l","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'l'`\n","sig":null,"attributes":[{"value":"/ `'l'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7476,"byte_end":7485,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1000},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7517,"byte_end":7518,"line_start":243,"line_end":243,"column_start":5,"column_end":6},"name":"m","qualname":"::ascii_char::AsciiChar::m","value":"AsciiChar::m","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'m'`\n","sig":null,"attributes":[{"value":"/ `'m'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7503,"byte_end":7512,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7544,"byte_end":7545,"line_start":245,"line_end":245,"column_start":5,"column_end":6},"name":"n","qualname":"::ascii_char::AsciiChar::n","value":"AsciiChar::n","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'n'`\n","sig":null,"attributes":[{"value":"/ `'n'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7530,"byte_end":7539,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1006},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7571,"byte_end":7572,"line_start":247,"line_end":247,"column_start":5,"column_end":6},"name":"o","qualname":"::ascii_char::AsciiChar::o","value":"AsciiChar::o","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'o'`\n","sig":null,"attributes":[{"value":"/ `'o'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7557,"byte_end":7566,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1009},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7598,"byte_end":7599,"line_start":249,"line_end":249,"column_start":5,"column_end":6},"name":"p","qualname":"::ascii_char::AsciiChar::p","value":"AsciiChar::p","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'p'`\n","sig":null,"attributes":[{"value":"/ `'p'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7584,"byte_end":7593,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1012},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7625,"byte_end":7626,"line_start":251,"line_end":251,"column_start":5,"column_end":6},"name":"q","qualname":"::ascii_char::AsciiChar::q","value":"AsciiChar::q","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'q'`\n","sig":null,"attributes":[{"value":"/ `'q'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7611,"byte_end":7620,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7652,"byte_end":7653,"line_start":253,"line_end":253,"column_start":5,"column_end":6},"name":"r","qualname":"::ascii_char::AsciiChar::r","value":"AsciiChar::r","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'r'`\n","sig":null,"attributes":[{"value":"/ `'r'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7638,"byte_end":7647,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1018},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7679,"byte_end":7680,"line_start":255,"line_end":255,"column_start":5,"column_end":6},"name":"s","qualname":"::ascii_char::AsciiChar::s","value":"AsciiChar::s","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'s'`\n","sig":null,"attributes":[{"value":"/ `'s'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7665,"byte_end":7674,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1021},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7706,"byte_end":7707,"line_start":257,"line_end":257,"column_start":5,"column_end":6},"name":"t","qualname":"::ascii_char::AsciiChar::t","value":"AsciiChar::t","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'t'`\n","sig":null,"attributes":[{"value":"/ `'t'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7692,"byte_end":7701,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1024},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7733,"byte_end":7734,"line_start":259,"line_end":259,"column_start":5,"column_end":6},"name":"u","qualname":"::ascii_char::AsciiChar::u","value":"AsciiChar::u","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'u'`\n","sig":null,"attributes":[{"value":"/ `'u'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7719,"byte_end":7728,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7760,"byte_end":7761,"line_start":261,"line_end":261,"column_start":5,"column_end":6},"name":"v","qualname":"::ascii_char::AsciiChar::v","value":"AsciiChar::v","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'v'`\n","sig":null,"attributes":[{"value":"/ `'v'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7746,"byte_end":7755,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1030},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7787,"byte_end":7788,"line_start":263,"line_end":263,"column_start":5,"column_end":6},"name":"w","qualname":"::ascii_char::AsciiChar::w","value":"AsciiChar::w","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'w'`\n","sig":null,"attributes":[{"value":"/ `'w'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7773,"byte_end":7782,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7814,"byte_end":7815,"line_start":265,"line_end":265,"column_start":5,"column_end":6},"name":"x","qualname":"::ascii_char::AsciiChar::x","value":"AsciiChar::x","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'x'`\n","sig":null,"attributes":[{"value":"/ `'x'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7800,"byte_end":7809,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1036},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7841,"byte_end":7842,"line_start":267,"line_end":267,"column_start":5,"column_end":6},"name":"y","qualname":"::ascii_char::AsciiChar::y","value":"AsciiChar::y","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'y'`\n","sig":null,"attributes":[{"value":"/ `'y'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7827,"byte_end":7836,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1039},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7868,"byte_end":7869,"line_start":269,"line_end":269,"column_start":5,"column_end":6},"name":"z","qualname":"::ascii_char::AsciiChar::z","value":"AsciiChar::z","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'z'`\n","sig":null,"attributes":[{"value":"/ `'z'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7854,"byte_end":7863,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1042},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7895,"byte_end":7909,"line_start":271,"line_end":271,"column_start":5,"column_end":19},"name":"CurlyBraceOpen","qualname":"::ascii_char::AsciiChar::CurlyBraceOpen","value":"AsciiChar::CurlyBraceOpen","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'{'`\n","sig":null,"attributes":[{"value":"/ `'{'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7881,"byte_end":7890,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1045},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7935,"byte_end":7946,"line_start":273,"line_end":273,"column_start":5,"column_end":16},"name":"VerticalBar","qualname":"::ascii_char::AsciiChar::VerticalBar","value":"AsciiChar::VerticalBar","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'|'`\n","sig":null,"attributes":[{"value":"/ `'|'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7921,"byte_end":7930,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1048},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7972,"byte_end":7987,"line_start":275,"line_end":275,"column_start":5,"column_end":20},"name":"CurlyBraceClose","qualname":"::ascii_char::AsciiChar::CurlyBraceClose","value":"AsciiChar::CurlyBraceClose","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'}'`\n","sig":null,"attributes":[{"value":"/ `'}'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7958,"byte_end":7967,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1051},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8013,"byte_end":8018,"line_start":277,"line_end":277,"column_start":5,"column_end":10},"name":"Tilde","qualname":"::ascii_char::AsciiChar::Tilde","value":"AsciiChar::Tilde","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" `'~'`\n","sig":null,"attributes":[{"value":"/ `'~'`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":7999,"byte_end":8008,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8094,"byte_end":8097,"line_start":279,"line_end":279,"column_start":5,"column_end":8},"name":"DEL","qualname":"::ascii_char::AsciiChar::DEL","value":"AsciiChar::DEL","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" [Delete](http://en.wikipedia.org/wiki/Delete_character)\n","sig":null,"attributes":[{"value":"/ [Delete](http://en.wikipedia.org/wiki/Delete_character)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8030,"byte_end":8089,"line_start":278,"line_end":278,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":672},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2568,"byte_end":2577,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"AsciiChar","qualname":"::ascii_char::AsciiChar","value":"pub enum AsciiChar {\n    Null = ,\n    SOH = ,\n    SOX = ,\n    ETX = ,\n    EOT = ,\n    ENQ = ,\n    ACK = ,\n    Bell = ,\n    BackSpace = ,\n    Tab = ,\n    LineFeed = ,\n    VT = ,\n    FF = ,\n    CarriageReturn = ,\n    SI = ,\n    SO = ,\n    DLE = ,\n    DC1 = ,\n    DC2 = ,\n    DC3 = ,\n    DC4 = ,\n    NAK = ,\n    SYN = ,\n    ETB = ,\n    CAN = ,\n    EM = ,\n    SUB = ,\n    ESC = ,\n    FS = ,\n    GS = ,\n    RS = ,\n    US = ,\n    Space = ,\n    Exclamation = ,\n    Quotation = ,\n    Hash = ,\n    Dollar = ,\n    Percent = ,\n    Ampersand = ,\n    Apostrophe = ,\n    ParenOpen = ,\n    ParenClose = ,\n    Asterisk = ,\n    Plus = ,\n    Comma = ,\n    Minus = ,\n    Dot = ,\n    Slash = ,\n    _0 = ,\n    _1 = ,\n    _2 = ,\n    _3 = ,\n    _4 = ,\n    _5 = ,\n    _6 = ,\n    _7 = ,\n    _8 = ,\n    _9 = ,\n    Colon = ,\n    Semicolon = ,\n    LessThan = ,\n    Equal = ,\n    GreaterThan = ,\n    Question = ,\n    At = ,\n    A = ,\n    B = ,\n    C = ,\n    D = ,\n    E = ,\n    F = ,\n    G = ,\n    H = ,\n    I = ,\n    J = ,\n    K = ,\n    L = ,\n    M = ,\n    N = ,\n    O = ,\n    P = ,\n    Q = ,\n    R = ,\n    S = ,\n    T = ,\n    U = ,\n    V = ,\n    W = ,\n    X = ,\n    Y = ,\n    Z = ,\n    BracketOpen = ,\n    BackSlash = ,\n    BracketClose = ,\n    Caret = ,\n    UnderScore = ,\n    Grave = ,\n    a = ,\n    b = ,\n    c = ,\n    d = ,\n    e = ,\n    f = ,\n    g = ,\n    h = ,\n    i = ,\n    j = ,\n    k = ,\n    l = ,\n    m = ,\n    n = ,\n    o = ,\n    p = ,\n    q = ,\n    r = ,\n    s = ,\n    t = ,\n    u = ,\n    v = ,\n    w = ,\n    x = ,\n    y = ,\n    z = ,\n    CurlyBraceOpen = ,\n    VerticalBar = ,\n    CurlyBraceClose = ,\n    Tilde = ,\n    DEL = ,\n}","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054}],"decl_id":null,"docs":" An ASCII character. It wraps a `u8`, with the highest bit always zero.\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2380,"byte_end":2410,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ An ASCII character. It wraps a `u8`, with the highest bit always zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2411,"byte_end":2485,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"repr(u8)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":2547,"byte_end":2558,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8499,"byte_end":8509,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<AsciiChar>::from_ascii","value":"pub fn from_ascii<C: ToAsciiChar>(C) -> Result<Self, ToAsciiCharError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an ASCII character from a `u8`, `char` or other character type.","sig":null,"attributes":[{"value":"/ Constructs an ASCII character from a `u8`, `char` or other character type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8129,"byte_end":8207,"line_start":283,"line_end":283,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8212,"byte_end":8215,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8220,"byte_end":8233,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ Returns `Err(())` if the character can't be ASCII encoded.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8238,"byte_end":8300,"line_start":286,"line_end":286,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8305,"byte_end":8308,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8313,"byte_end":8326,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8331,"byte_end":8338,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8343,"byte_end":8370,"line_start":290,"line_end":290,"column_start":5,"column_end":32}},{"value":"/ let a = AsciiChar::from_ascii('g').unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8375,"byte_end":8423,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.as_char(), 'g');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8428,"byte_end":8461,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8466,"byte_end":8473,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8478,"byte_end":8487,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9735,"byte_end":9738,"line_start":333,"line_end":333,"column_start":18,"column_end":21},"name":"new","qualname":"<AsciiChar>::new","value":"pub const fn new(char) -> AsciiChar","parent":null,"children":[],"decl_id":null,"docs":" Create an `AsciiChar` from a `char`, panicking if it's not ASCII.","sig":null,"attributes":[{"value":"/ Create an `AsciiChar` from a `char`, panicking if it's not ASCII.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8607,"byte_end":8676,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8681,"byte_end":8684,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This function is intended for creating `AsciiChar` values from","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8689,"byte_end":8755,"line_start":301,"line_end":301,"column_start":5,"column_end":71}},{"value":"/ hardcoded known-good character literals such as `'K'`, `'-'` or `'\\0'`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8760,"byte_end":8835,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ and for use in `const` contexts.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8840,"byte_end":8876,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/ Use [`from_ascii()`](#method.from_ascii) instead when you're not","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8881,"byte_end":8949,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/ certain the character is ASCII.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8954,"byte_end":8989,"line_start":305,"line_end":305,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8994,"byte_end":8997,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9002,"byte_end":9016,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9021,"byte_end":9024,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9029,"byte_end":9036,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9041,"byte_end":9068,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('@'), AsciiChar::At);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9073,"byte_end":9124,"line_start":311,"line_end":311,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(AsciiChar::new('C').as_char(), 'C');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9129,"byte_end":9180,"line_start":312,"line_end":312,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9185,"byte_end":9192,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9197,"byte_end":9200,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ In a constant:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9205,"byte_end":9223,"line_start":315,"line_end":315,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9228,"byte_end":9235,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9240,"byte_end":9267,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ const SPLIT_ON: AsciiChar = AsciiChar::new(',');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9272,"byte_end":9324,"line_start":318,"line_end":318,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9329,"byte_end":9336,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9341,"byte_end":9344,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This will not compile:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9349,"byte_end":9375,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/ ```compile_fail","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9380,"byte_end":9399,"line_start":322,"line_end":322,"column_start":5,"column_end":24}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9404,"byte_end":9431,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"/ const BAD: AsciiChar = AsciiChar::new('Ø');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9436,"byte_end":9484,"line_start":324,"line_end":324,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9489,"byte_end":9496,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9501,"byte_end":9504,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9509,"byte_end":9521,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9526,"byte_end":9529,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This function will panic if passed a non-ASCII character.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9534,"byte_end":9595,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9600,"byte_end":9603,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The panic message might not be the most descriptive due to the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9608,"byte_end":9674,"line_start":331,"line_end":331,"column_start":5,"column_end":71}},{"value":"/ current limitations of `const fn`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":9679,"byte_end":9717,"line_start":332,"line_end":332,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11429,"byte_end":11449,"line_start":370,"line_end":370,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<AsciiChar>::from_ascii_unchecked","value":"pub unsafe fn from_ascii_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an ASCII character from a `u8`, `char` or other character\n type without any checks.","sig":null,"attributes":[{"value":"/ Constructs an ASCII character from a `u8`, `char` or other character","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":10766,"byte_end":10838,"line_start":356,"line_end":356,"column_start":5,"column_end":77}},{"value":"/ type without any checks.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":10843,"byte_end":10871,"line_start":357,"line_end":357,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":10876,"byte_end":10879,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":10884,"byte_end":10896,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":10901,"byte_end":10904,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function is very unsafe as it can create invalid enum","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":10909,"byte_end":10971,"line_start":361,"line_end":361,"column_start":5,"column_end":67}},{"value":"/ discriminants, which instantly creates undefined behavior.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":10976,"byte_end":11038,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/ (`let _ = AsciiChar::from_ascii_unchecked(200);` alone is UB).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11043,"byte_end":11109,"line_start":363,"line_end":363,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11114,"byte_end":11117,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The undefined behavior is not just theoretical either:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11122,"byte_end":11180,"line_start":365,"line_end":365,"column_start":5,"column_end":63}},{"value":"/ For example, `[0; 128][AsciiChar::from_ascii_unchecked(255) as u8 as usize] = 0`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11185,"byte_end":11269,"line_start":366,"line_end":366,"column_start":5,"column_end":89}},{"value":"/ might not panic, creating a buffer overflow,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11274,"byte_end":11322,"line_start":367,"line_end":367,"column_start":5,"column_end":53}},{"value":"/ and `Some(AsciiChar::from_ascii_unchecked(128))` might be `None`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11327,"byte_end":11396,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11401,"byte_end":11410,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11592,"byte_end":11599,"line_start":376,"line_end":376,"column_start":18,"column_end":25},"name":"as_byte","qualname":"<AsciiChar>::as_byte","value":"pub const fn as_byte(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts an ASCII character into a `u8`.\n","sig":null,"attributes":[{"value":"/ Converts an ASCII character into a `u8`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11516,"byte_end":11560,"line_start":374,"line_end":374,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11565,"byte_end":11574,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11722,"byte_end":11729,"line_start":382,"line_end":382,"column_start":18,"column_end":25},"name":"as_char","qualname":"<AsciiChar>::as_char","value":"pub const fn as_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Converts an ASCII character into a `char`.\n","sig":null,"attributes":[{"value":"/ Converts an ASCII character into a `char`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11644,"byte_end":11690,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":11695,"byte_end":11704,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12428,"byte_end":12441,"line_start":400,"line_end":400,"column_start":18,"column_end":31},"name":"is_alphabetic","qualname":"<AsciiChar>::is_alphabetic","value":"pub const fn is_alphabetic(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a letter (a-z, A-Z)\n","sig":null,"attributes":[{"value":"/ Check if the character is a letter (a-z, A-Z)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12347,"byte_end":12396,"line_start":398,"line_end":398,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12401,"byte_end":12410,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12708,"byte_end":12727,"line_start":408,"line_end":408,"column_start":18,"column_end":37},"name":"is_ascii_alphabetic","qualname":"<AsciiChar>::is_ascii_alphabetic","value":"pub const fn is_ascii_alphabetic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a letter (a-z, A-Z).","sig":null,"attributes":[{"value":"/ Check if the character is a letter (a-z, A-Z).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12539,"byte_end":12589,"line_start":404,"line_end":404,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12594,"byte_end":12597,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`is_alphabetic()`](#method.is_alphabetic)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12602,"byte_end":12676,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12681,"byte_end":12690,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13148,"byte_end":13156,"line_start":421,"line_end":421,"column_start":12,"column_end":20},"name":"is_digit","qualname":"<AsciiChar>::is_digit","value":"pub fn is_digit(Self, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a digit in the given radix.","sig":null,"attributes":[{"value":"/ Check if the character is a digit in the given radix.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12785,"byte_end":12842,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12847,"byte_end":12850,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ If the radix is always 10 or 16,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12855,"byte_end":12891,"line_start":414,"line_end":414,"column_start":5,"column_end":41}},{"value":"/ [`is_ascii_digit()`](#method.is_ascii_digit) and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12896,"byte_end":12948,"line_start":415,"line_end":415,"column_start":5,"column_end":57}},{"value":"/ [`is_ascii_hexdigit()`](#method.is_ascii_hexdigit()) will be faster.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":12953,"byte_end":13025,"line_start":416,"line_end":416,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13030,"byte_end":13033,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13038,"byte_end":13050,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13055,"byte_end":13058,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Radixes greater than 36 are not supported and will result in a panic.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13063,"byte_end":13136,"line_start":420,"line_end":420,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14070,"byte_end":14084,"line_start":443,"line_end":443,"column_start":18,"column_end":32},"name":"is_ascii_digit","qualname":"<AsciiChar>::is_ascii_digit","value":"pub const fn is_ascii_digit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a number (0-9)","sig":null,"attributes":[{"value":"/ Check if the character is a number (0-9)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13588,"byte_end":13632,"line_start":431,"line_end":431,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13637,"byte_end":13640,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13645,"byte_end":13659,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13664,"byte_end":13671,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13676,"byte_end":13703,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('0').is_ascii_digit(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13708,"byte_end":13767,"line_start":436,"line_end":436,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AsciiChar::new('9').is_ascii_digit(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13772,"byte_end":13831,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AsciiChar::new('a').is_ascii_digit(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13836,"byte_end":13896,"line_start":438,"line_end":438,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(AsciiChar::new('A').is_ascii_digit(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13901,"byte_end":13961,"line_start":439,"line_end":439,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(AsciiChar::new('/').is_ascii_digit(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":13966,"byte_end":14026,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14031,"byte_end":14038,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14043,"byte_end":14052,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14247,"byte_end":14262,"line_start":449,"line_end":449,"column_start":18,"column_end":33},"name":"is_alphanumeric","qualname":"<AsciiChar>::is_alphanumeric","value":"pub const fn is_alphanumeric(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a letter or number\n","sig":null,"attributes":[{"value":"/ Check if the character is a letter or number","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14167,"byte_end":14215,"line_start":447,"line_end":447,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14220,"byte_end":14229,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14514,"byte_end":14535,"line_start":457,"line_end":457,"column_start":18,"column_end":39},"name":"is_ascii_alphanumeric","qualname":"<AsciiChar>::is_ascii_alphanumeric","value":"pub const fn is_ascii_alphanumeric(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a letter or number","sig":null,"attributes":[{"value":"/ Check if the character is a letter or number","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14343,"byte_end":14391,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14396,"byte_end":14399,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`is_alphanumeric()`](#method.is_alphanumeric)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14404,"byte_end":14482,"line_start":455,"line_end":455,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14487,"byte_end":14496,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15085,"byte_end":15099,"line_start":474,"line_end":474,"column_start":18,"column_end":32},"name":"is_ascii_blank","qualname":"<AsciiChar>::is_ascii_blank","value":"pub const fn is_ascii_blank(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a space or horizontal tab","sig":null,"attributes":[{"value":"/ Check if the character is a space or horizontal tab","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14595,"byte_end":14650,"line_start":461,"line_end":461,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14655,"byte_end":14658,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14663,"byte_end":14677,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14682,"byte_end":14689,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14694,"byte_end":14721,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/ assert!(AsciiChar::Space.is_ascii_blank());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14726,"byte_end":14773,"line_start":466,"line_end":466,"column_start":5,"column_end":52}},{"value":"/ assert!(AsciiChar::Tab.is_ascii_blank());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14778,"byte_end":14823,"line_start":467,"line_end":467,"column_start":5,"column_end":50}},{"value":"/ assert!(!AsciiChar::VT.is_ascii_blank());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14828,"byte_end":14873,"line_start":468,"line_end":468,"column_start":5,"column_end":50}},{"value":"/ assert!(!AsciiChar::LineFeed.is_ascii_blank());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14878,"byte_end":14929,"line_start":469,"line_end":469,"column_start":5,"column_end":56}},{"value":"/ assert!(!AsciiChar::CarriageReturn.is_ascii_blank());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14934,"byte_end":14991,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"/ assert!(!AsciiChar::FF.is_ascii_blank());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":14996,"byte_end":15041,"line_start":471,"line_end":471,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15046,"byte_end":15053,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15058,"byte_end":15067,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15324,"byte_end":15337,"line_start":481,"line_end":481,"column_start":18,"column_end":31},"name":"is_whitespace","qualname":"<AsciiChar>::is_whitespace","value":"pub const fn is_whitespace(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character one of ' ', '\\t', '\\n', '\\r',\n '\\0xb' (vertical tab) or '\\0xc' (form feed).\n","sig":null,"attributes":[{"value":"/ Check if the character one of ' ', '\\t', '\\n', '\\r',","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15183,"byte_end":15239,"line_start":478,"line_end":478,"column_start":5,"column_end":61}},{"value":"/ '\\0xb' (vertical tab) or '\\0xc' (form feed).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15244,"byte_end":15292,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15297,"byte_end":15306,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15656,"byte_end":15675,"line_start":490,"line_end":490,"column_start":18,"column_end":37},"name":"is_ascii_whitespace","qualname":"<AsciiChar>::is_ascii_whitespace","value":"pub const fn is_ascii_whitespace(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a ' ', '\\t', '\\n', '\\r' or '\\0xc' (form feed).","sig":null,"attributes":[{"value":"/ Check if the character is a ' ', '\\t', '\\n', '\\r' or '\\0xc' (form feed).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15481,"byte_end":15557,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15562,"byte_end":15565,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This method is NOT identical to `is_whitespace()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15570,"byte_end":15624,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15629,"byte_end":15638,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16405,"byte_end":16421,"line_start":509,"line_end":509,"column_start":18,"column_end":34},"name":"is_ascii_control","qualname":"<AsciiChar>::is_ascii_control","value":"pub const fn is_ascii_control(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a control character","sig":null,"attributes":[{"value":"/ Check if the character is a control character","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15845,"byte_end":15894,"line_start":496,"line_end":496,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15899,"byte_end":15902,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15907,"byte_end":15921,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15926,"byte_end":15933,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15938,"byte_end":15965,"line_start":500,"line_end":500,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('\\0').is_ascii_control(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":15970,"byte_end":16032,"line_start":501,"line_end":501,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('n').is_ascii_control(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16037,"byte_end":16099,"line_start":502,"line_end":502,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new(' ').is_ascii_control(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16104,"byte_end":16166,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('\\n').is_ascii_control(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16171,"byte_end":16233,"line_start":504,"line_end":504,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('\\t').is_ascii_control(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16238,"byte_end":16300,"line_start":505,"line_end":505,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::EOT.is_ascii_control(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16305,"byte_end":16361,"line_start":506,"line_end":506,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16366,"byte_end":16373,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16378,"byte_end":16387,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16875,"byte_end":16891,"line_start":523,"line_end":523,"column_start":18,"column_end":34},"name":"is_ascii_graphic","qualname":"<AsciiChar>::is_ascii_graphic","value":"pub const fn is_ascii_graphic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is printable (except space)","sig":null,"attributes":[{"value":"/ Checks if the character is printable (except space)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16504,"byte_end":16559,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16564,"byte_end":16567,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16572,"byte_end":16586,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16591,"byte_end":16598,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16603,"byte_end":16630,"line_start":517,"line_end":517,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('n').is_ascii_graphic(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16635,"byte_end":16696,"line_start":518,"line_end":518,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(AsciiChar::new(' ').is_ascii_graphic(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16701,"byte_end":16763,"line_start":519,"line_end":519,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('\\n').is_ascii_graphic(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16768,"byte_end":16831,"line_start":520,"line_end":520,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16836,"byte_end":16843,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16848,"byte_end":16857,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17352,"byte_end":17370,"line_start":537,"line_end":537,"column_start":18,"column_end":36},"name":"is_ascii_printable","qualname":"<AsciiChar>::is_ascii_printable","value":"pub const fn is_ascii_printable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is printable (including space)","sig":null,"attributes":[{"value":"/ Checks if the character is printable (including space)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":16973,"byte_end":17031,"line_start":527,"line_end":527,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17036,"byte_end":17039,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17044,"byte_end":17058,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17063,"byte_end":17070,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17075,"byte_end":17102,"line_start":531,"line_end":531,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('n').is_ascii_printable(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17107,"byte_end":17170,"line_start":532,"line_end":532,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(AsciiChar::new(' ').is_ascii_printable(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17175,"byte_end":17238,"line_start":533,"line_end":533,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(AsciiChar::new('\\n').is_ascii_printable(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17243,"byte_end":17308,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17313,"byte_end":17320,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17325,"byte_end":17334,"line_start":536,"line_end":536,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17811,"byte_end":17823,"line_start":551,"line_end":551,"column_start":18,"column_end":30},"name":"is_lowercase","qualname":"<AsciiChar>::is_lowercase","value":"pub const fn is_lowercase(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is alphabetic and lowercase (a-z).","sig":null,"attributes":[{"value":"/ Checks if the character is alphabetic and lowercase (a-z).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17448,"byte_end":17510,"line_start":541,"line_end":541,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17515,"byte_end":17518,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17523,"byte_end":17537,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17542,"byte_end":17549,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17554,"byte_end":17579,"line_start":545,"line_end":545,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(AsciiChar::new('a').is_lowercase(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17584,"byte_end":17641,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(AsciiChar::new('A').is_lowercase(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17646,"byte_end":17704,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(AsciiChar::new('@').is_lowercase(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17709,"byte_end":17767,"line_start":548,"line_end":548,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17772,"byte_end":17779,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17784,"byte_end":17793,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18077,"byte_end":18095,"line_start":559,"line_end":559,"column_start":18,"column_end":36},"name":"is_ascii_lowercase","qualname":"<AsciiChar>::is_ascii_lowercase","value":"pub const fn is_ascii_lowercase(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is alphabetic and lowercase (a-z).","sig":null,"attributes":[{"value":"/ Checks if the character is alphabetic and lowercase (a-z).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17898,"byte_end":17960,"line_start":555,"line_end":555,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17965,"byte_end":17968,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`is_lowercase()`](#method.is_lowercase)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":17973,"byte_end":18045,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18050,"byte_end":18059,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18517,"byte_end":18529,"line_start":573,"line_end":573,"column_start":18,"column_end":30},"name":"is_uppercase","qualname":"<AsciiChar>::is_uppercase","value":"pub const fn is_uppercase(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is alphabetic and uppercase (A-Z).","sig":null,"attributes":[{"value":"/ Checks if the character is alphabetic and uppercase (A-Z).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18152,"byte_end":18214,"line_start":563,"line_end":563,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18219,"byte_end":18222,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18227,"byte_end":18241,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18246,"byte_end":18253,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18258,"byte_end":18285,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('A').is_uppercase(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18290,"byte_end":18347,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(AsciiChar::new('a').is_uppercase(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18352,"byte_end":18410,"line_start":569,"line_end":569,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(AsciiChar::new('@').is_uppercase(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18415,"byte_end":18473,"line_start":570,"line_end":570,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18478,"byte_end":18485,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18490,"byte_end":18499,"line_start":572,"line_end":572,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18783,"byte_end":18801,"line_start":581,"line_end":581,"column_start":18,"column_end":36},"name":"is_ascii_uppercase","qualname":"<AsciiChar>::is_ascii_uppercase","value":"pub const fn is_ascii_uppercase(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is alphabetic and uppercase (A-Z).","sig":null,"attributes":[{"value":"/ Checks if the character is alphabetic and uppercase (A-Z).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18604,"byte_end":18666,"line_start":577,"line_end":577,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18671,"byte_end":18674,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`is_uppercase()`](#method.is_uppercase)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18679,"byte_end":18751,"line_start":579,"line_end":579,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18756,"byte_end":18765,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19297,"byte_end":19317,"line_start":596,"line_end":596,"column_start":18,"column_end":38},"name":"is_ascii_punctuation","qualname":"<AsciiChar>::is_ascii_punctuation","value":"pub const fn is_ascii_punctuation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is punctuation","sig":null,"attributes":[{"value":"/ Checks if the character is punctuation","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18858,"byte_end":18900,"line_start":585,"line_end":585,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18905,"byte_end":18908,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18913,"byte_end":18927,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18932,"byte_end":18939,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18944,"byte_end":18971,"line_start":589,"line_end":589,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('n').is_ascii_punctuation(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":18976,"byte_end":19042,"line_start":590,"line_end":590,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(AsciiChar::new(' ').is_ascii_punctuation(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19047,"byte_end":19113,"line_start":591,"line_end":591,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(AsciiChar::new('_').is_ascii_punctuation(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19118,"byte_end":19183,"line_start":592,"line_end":592,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(AsciiChar::new('~').is_ascii_punctuation(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19188,"byte_end":19253,"line_start":593,"line_end":593,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19258,"byte_end":19265,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19270,"byte_end":19279,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19904,"byte_end":19921,"line_start":612,"line_end":612,"column_start":18,"column_end":35},"name":"is_ascii_hexdigit","qualname":"<AsciiChar>::is_ascii_hexdigit","value":"pub const fn is_ascii_hexdigit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is a valid hex digit","sig":null,"attributes":[{"value":"/ Checks if the character is a valid hex digit","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19404,"byte_end":19452,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19457,"byte_end":19460,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19465,"byte_end":19479,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19484,"byte_end":19491,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19496,"byte_end":19523,"line_start":604,"line_end":604,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('5').is_ascii_hexdigit(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19528,"byte_end":19590,"line_start":605,"line_end":605,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('a').is_ascii_hexdigit(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19595,"byte_end":19657,"line_start":606,"line_end":606,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('F').is_ascii_hexdigit(), true);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19662,"byte_end":19724,"line_start":607,"line_end":607,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('G').is_ascii_hexdigit(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19729,"byte_end":19792,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(AsciiChar::new(' ').is_ascii_hexdigit(), false);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19797,"byte_end":19860,"line_start":609,"line_end":609,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19865,"byte_end":19872,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":19877,"byte_end":19886,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20668,"byte_end":20685,"line_start":630,"line_end":630,"column_start":12,"column_end":29},"name":"as_printable_char","qualname":"<AsciiChar>::as_printable_char","value":"pub fn as_printable_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Unicode has printable versions of the ASCII control codes, like '␛'.","sig":null,"attributes":[{"value":"/ Unicode has printable versions of the ASCII control codes, like '␛'.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20030,"byte_end":20104,"line_start":616,"line_end":616,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20109,"byte_end":20112,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This function is identical with `.as_char()`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20117,"byte_end":20165,"line_start":618,"line_end":618,"column_start":5,"column_end":53}},{"value":"/ for all values `.is_printable()` returns true for,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20170,"byte_end":20224,"line_start":619,"line_end":619,"column_start":5,"column_end":59}},{"value":"/ but replaces the control codes with those unicodes printable versions.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20229,"byte_end":20303,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20308,"byte_end":20311,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20316,"byte_end":20330,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20335,"byte_end":20342,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20347,"byte_end":20374,"line_start":624,"line_end":624,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('\\0').as_printable_char(), '␀');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20379,"byte_end":20443,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new('\\n').as_printable_char(), '␊');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20448,"byte_end":20512,"line_start":626,"line_end":626,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(AsciiChar::new(' ').as_printable_char(), ' ');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20517,"byte_end":20578,"line_start":627,"line_end":627,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(AsciiChar::new('p').as_printable_char(), 'p');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20583,"byte_end":20644,"line_start":628,"line_end":628,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20649,"byte_end":20656,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20996,"byte_end":21016,"line_start":641,"line_end":641,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<AsciiChar>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces letters `a` to `z` with `A` to `Z`\n","sig":null,"attributes":[{"value":"/ Replaces letters `a` to `z` with `A` to `Z`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":20937,"byte_end":20984,"line_start":640,"line_end":640,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21142,"byte_end":21162,"line_start":646,"line_end":646,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<AsciiChar>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces letters `A` to `Z` with `a` to `z`\n","sig":null,"attributes":[{"value":"/ Replaces letters `A` to `Z` with `a` to `z`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21083,"byte_end":21130,"line_start":645,"line_end":645,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21799,"byte_end":21817,"line_start":662,"line_end":662,"column_start":18,"column_end":36},"name":"to_ascii_uppercase","qualname":"<AsciiChar>::to_ascii_uppercase","value":"pub const fn to_ascii_uppercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maps letters a-z to A-Z and returns any other character unchanged.","sig":null,"attributes":[{"value":"/ Maps letters a-z to A-Z and returns any other character unchanged.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21229,"byte_end":21299,"line_start":650,"line_end":650,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21304,"byte_end":21307,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21312,"byte_end":21326,"line_start":652,"line_end":652,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21331,"byte_end":21338,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21343,"byte_end":21370,"line_start":654,"line_end":654,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('u').to_ascii_uppercase().as_char(), 'U');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21375,"byte_end":21447,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('U').to_ascii_uppercase().as_char(), 'U');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21452,"byte_end":21524,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('2').to_ascii_uppercase().as_char(), '2');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21529,"byte_end":21601,"line_start":657,"line_end":657,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('=').to_ascii_uppercase().as_char(), '=');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21606,"byte_end":21678,"line_start":658,"line_end":658,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('[').to_ascii_uppercase().as_char(), '[');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21683,"byte_end":21755,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21760,"byte_end":21767,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21772,"byte_end":21781,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22520,"byte_end":22538,"line_start":678,"line_end":678,"column_start":18,"column_end":36},"name":"to_ascii_lowercase","qualname":"<AsciiChar>::to_ascii_lowercase","value":"pub const fn to_ascii_lowercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maps letters A-Z to a-z and returns any other character unchanged.","sig":null,"attributes":[{"value":"/ Maps letters A-Z to a-z and returns any other character unchanged.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":21944,"byte_end":22014,"line_start":666,"line_end":666,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22019,"byte_end":22022,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22027,"byte_end":22041,"line_start":668,"line_end":668,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22046,"byte_end":22053,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22058,"byte_end":22085,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(AsciiChar::new('U').to_ascii_lowercase().as_char(), 'u');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22090,"byte_end":22162,"line_start":671,"line_end":671,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('u').to_ascii_lowercase().as_char(), 'u');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22167,"byte_end":22239,"line_start":672,"line_end":672,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('2').to_ascii_lowercase().as_char(), '2');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22244,"byte_end":22316,"line_start":673,"line_end":673,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('^').to_ascii_lowercase().as_char(), '^');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22321,"byte_end":22393,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(AsciiChar::new('\\x7f').to_ascii_lowercase().as_char(), '\\x7f');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22398,"byte_end":22476,"line_start":675,"line_end":675,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22481,"byte_end":22488,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22493,"byte_end":22502,"line_start":677,"line_end":677,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22737,"byte_end":22757,"line_start":684,"line_end":684,"column_start":18,"column_end":38},"name":"eq_ignore_ascii_case","qualname":"<AsciiChar>::eq_ignore_ascii_case","value":"pub const fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares two characters case-insensitively.\n","sig":null,"attributes":[{"value":"/ Compares two characters case-insensitively.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22658,"byte_end":22705,"line_start":682,"line_end":682,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22710,"byte_end":22719,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":24420,"byte_end":24436,"line_start":748,"line_end":748,"column_start":12,"column_end":28},"name":"ToAsciiCharError","qualname":"::ascii_char::ToAsciiCharError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `ToAsciiChar`.\n","sig":null,"attributes":[{"value":"/ Error returned by `ToAsciiChar`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":24334,"byte_end":24370,"line_start":746,"line_end":746,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":70},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25265,"byte_end":25276,"line_start":782,"line_end":782,"column_start":11,"column_end":22},"name":"ToAsciiChar","qualname":"::ascii_char::ToAsciiChar","value":"ToAsciiChar","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" Convert `char`, `u8` and other character types to `AsciiChar`.\n","sig":null,"attributes":[{"value":"/ Convert `char`, `u8` and other character types to `AsciiChar`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25188,"byte_end":25254,"line_start":781,"line_end":781,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25372,"byte_end":25395,"line_start":784,"line_end":784,"column_start":15,"column_end":38},"name":"to_ascii_char_unchecked","qualname":"::ascii_char::ToAsciiChar::to_ascii_char_unchecked","value":"pub unsafe fn to_ascii_char_unchecked(Self) -> AsciiChar","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Convert to `AsciiChar` without checking that it is an ASCII character.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiChar` without checking that it is an ASCII character.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25283,"byte_end":25357,"line_start":783,"line_end":783,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25455,"byte_end":25468,"line_start":786,"line_end":786,"column_start":8,"column_end":21},"name":"to_ascii_char","qualname":"::ascii_char::ToAsciiChar::to_ascii_char","value":"pub fn to_ascii_char(Self) -> Result<AsciiChar, ToAsciiCharError>","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Convert to `AsciiChar`.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiChar`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25420,"byte_end":25447,"line_start":785,"line_end":785,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32425,"byte_end":32433,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"AsciiStr","qualname":"::ascii_str::AsciiStr","value":"AsciiStr {  }","parent":null,"children":[{"krate":0,"index":1107}],"decl_id":null,"docs":" AsciiStr represents a byte or string slice that only contains ASCII characters.","sig":null,"attributes":[{"value":"/ AsciiStr represents a byte or string slice that only contains ASCII characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32064,"byte_end":32147,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32148,"byte_end":32151,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It wraps an `[AsciiChar]` and implements many of `str`s methods and traits.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32152,"byte_end":32231,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32232,"byte_end":32235,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It can be created by a checked conversion from a `str` or `[u8]`, or borrowed from an","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32236,"byte_end":32325,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `AsciiString`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32326,"byte_end":32344,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"repr(transparent)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32393,"byte_end":32413,"line_start":23,"line_end":23,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32548,"byte_end":32554,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"as_str","qualname":"<AsciiStr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts `&self` to a `&str` slice.\n","sig":null,"attributes":[{"value":"/ Converts `&self` to a `&str` slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32483,"byte_end":32522,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32527,"byte_end":32536,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32709,"byte_end":32717,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<AsciiStr>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts `&self` into a byte slice.\n","sig":null,"attributes":[{"value":"/ Converts `&self` into a byte slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32644,"byte_end":32683,"line_start":35,"line_end":35,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32688,"byte_end":32697,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32895,"byte_end":32903,"line_start":43,"line_end":43,"column_start":18,"column_end":26},"name":"as_slice","qualname":"<AsciiStr>::as_slice","value":"pub const fn as_slice(&Self) -> &[AsciiChar]","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire string as slice of `AsciiChar`s.\n","sig":null,"attributes":[{"value":"/ Returns the entire string as slice of `AsciiChar`s.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32808,"byte_end":32863,"line_start":41,"line_end":41,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32868,"byte_end":32877,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33049,"byte_end":33061,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<AsciiStr>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [AsciiChar]","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire string as mutable slice of `AsciiChar`s.\n","sig":null,"attributes":[{"value":"/ Returns the entire string as mutable slice of `AsciiChar`s.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32960,"byte_end":33023,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33028,"byte_end":33037,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33489,"byte_end":33495,"line_start":59,"line_end":59,"column_start":18,"column_end":24},"name":"as_ptr","qualname":"<AsciiStr>::as_ptr","value":"pub const fn as_ptr(&Self) -> *const AsciiChar","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the `AsciiStr`'s buffer.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the `AsciiStr`'s buffer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33130,"byte_end":33183,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33188,"byte_end":33191,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the slice outlives the pointer this function returns, or else it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33196,"byte_end":33292,"line_start":55,"line_end":55,"column_start":5,"column_end":101}},{"value":"/ will end up pointing to garbage. Modifying the `AsciiStr` may cause it's buffer to be","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33297,"byte_end":33386,"line_start":56,"line_end":56,"column_start":5,"column_end":94}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33391,"byte_end":33457,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33462,"byte_end":33471,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33934,"byte_end":33944,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<AsciiStr>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut AsciiChar","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the `AsciiStr`'s buffer.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the `AsciiStr`'s buffer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33569,"byte_end":33634,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33639,"byte_end":33642,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the slice outlives the pointer this function returns, or else it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33647,"byte_end":33743,"line_start":65,"line_end":65,"column_start":5,"column_end":101}},{"value":"/ will end up pointing to garbage. Modifying the `AsciiStr` may cause it's buffer to be","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33748,"byte_end":33837,"line_start":66,"line_end":66,"column_start":5,"column_end":94}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33842,"byte_end":33908,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":33913,"byte_end":33922,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34138,"byte_end":34153,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"to_ascii_string","qualname":"<AsciiStr>::to_ascii_string","value":"pub fn to_ascii_string(&Self) -> AsciiString","parent":null,"children":[],"decl_id":null,"docs":" Copies the content of this `AsciiStr` into an owned `AsciiString`.\n","sig":null,"attributes":[{"value":"/ Copies the content of this `AsciiStr` into an owned `AsciiString`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34028,"byte_end":34098,"line_start":73,"line_end":73,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34103,"byte_end":34126,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34616,"byte_end":34626,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<AsciiStr>::from_ascii","value":"pub fn from_ascii<B: ?Sized>(&B) -> Result<&AsciiStr, AsAsciiStrError> where\nB: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Converts anything that can represent a byte slice into an `AsciiStr`.","sig":null,"attributes":[{"value":"/ Converts anything that can represent a byte slice into an `AsciiStr`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34236,"byte_end":34309,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34314,"byte_end":34317,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34322,"byte_end":34336,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34341,"byte_end":34348,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34353,"byte_end":34379,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ let foo = AsciiStr::from_ascii(b\"foo\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34384,"byte_end":34427,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ let err = AsciiStr::from_ascii(\"Ŋ\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34432,"byte_end":34473,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(foo.unwrap().as_str(), \"foo\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34478,"byte_end":34523,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(err.unwrap_err().valid_up_to(), 0);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34528,"byte_end":34578,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34583,"byte_end":34590,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34595,"byte_end":34604,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35136,"byte_end":35156,"line_start":107,"line_end":107,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<AsciiStr>::from_ascii_unchecked","value":"pub unsafe fn from_ascii_unchecked(&[u8]) -> &AsciiStr","parent":null,"children":[],"decl_id":null,"docs":" Converts anything that can be represented as a byte slice to an `AsciiStr` without checking\n for non-ASCII characters..","sig":null,"attributes":[{"value":"/ Converts anything that can be represented as a byte slice to an `AsciiStr` without checking","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34776,"byte_end":34871,"line_start":97,"line_end":97,"column_start":5,"column_end":100}},{"value":"/ for non-ASCII characters..","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34876,"byte_end":34906,"line_start":98,"line_end":98,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34911,"byte_end":34914,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34919,"byte_end":34933,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34938,"byte_end":34945,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34950,"byte_end":34976,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ let foo = unsafe { AsciiStr::from_ascii_unchecked(&b\"foo\"[..]) };","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":34981,"byte_end":35050,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(foo.as_str(), \"foo\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35055,"byte_end":35091,"line_start":104,"line_end":104,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35096,"byte_end":35103,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35108,"byte_end":35117,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35498,"byte_end":35501,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"len","qualname":"<AsciiStr>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of characters / bytes in this ASCII sequence.","sig":null,"attributes":[{"value":"/ Returns the number of characters / bytes in this ASCII sequence.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35236,"byte_end":35304,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35309,"byte_end":35312,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35317,"byte_end":35331,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35336,"byte_end":35343,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35348,"byte_end":35374,"line_start":115,"line_end":115,"column_start":5,"column_end":31}},{"value":"/ let s = AsciiStr::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35379,"byte_end":35428,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(s.len(), 3);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35433,"byte_end":35460,"line_start":117,"line_end":117,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35465,"byte_end":35472,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35477,"byte_end":35486,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35910,"byte_end":35918,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<AsciiStr>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the ASCII slice contains zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the ASCII slice contains zero bytes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35556,"byte_end":35612,"line_start":124,"line_end":124,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35617,"byte_end":35620,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35625,"byte_end":35639,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35644,"byte_end":35651,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35656,"byte_end":35682,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ let mut empty = AsciiStr::from_ascii(\"\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35687,"byte_end":35741,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"/ let mut full = AsciiStr::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35746,"byte_end":35802,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert!(empty.is_empty());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35807,"byte_end":35837,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/ assert!(!full.is_empty());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35842,"byte_end":35872,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35877,"byte_end":35884,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35889,"byte_end":35898,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36059,"byte_end":36064,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"chars","qualname":"<AsciiStr>::chars","value":"pub fn chars(&Self) -> Chars","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the characters of the `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the characters of the `AsciiStr`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":35971,"byte_end":36033,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36038,"byte_end":36047,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36280,"byte_end":36289,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"chars_mut","qualname":"<AsciiStr>::chars_mut","value":"pub fn chars_mut(&mut Self) -> CharsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the characters of the `AsciiStr` which allows you to modify the\n value of each `AsciiChar`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the characters of the `AsciiStr` which allows you to modify the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36127,"byte_end":36219,"line_start":145,"line_end":145,"column_start":5,"column_end":97}},{"value":"/ value of each `AsciiChar`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36224,"byte_end":36254,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36259,"byte_end":36268,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36784,"byte_end":36789,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"split","qualname":"<AsciiStr>::split","value":"pub fn split(&Self, AsciiChar) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over parts of the `AsciiStr` separated by a character.","sig":null,"attributes":[{"value":"/ Returns an iterator over parts of the `AsciiStr` separated by a character.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36366,"byte_end":36444,"line_start":152,"line_end":152,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36449,"byte_end":36452,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36457,"byte_end":36471,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36476,"byte_end":36483,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiStr, AsciiChar};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36488,"byte_end":36527,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/ let words = AsciiStr::from_ascii(\"apple banana lemon\").unwrap()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36532,"byte_end":36599,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/     .split(AsciiChar::Space)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36604,"byte_end":36636,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     .map(|a| a.as_str())","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36641,"byte_end":36669,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36674,"byte_end":36703,"line_start":160,"line_end":160,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(words, [\"apple\", \"banana\", \"lemon\"]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36708,"byte_end":36760,"line_start":161,"line_end":161,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36765,"byte_end":36772,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37247,"byte_end":37252,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"lines","qualname":"<AsciiStr>::lines","value":"pub fn lines(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the lines of the `AsciiStr`, which are themselves `AsciiStr`s.","sig":null,"attributes":[{"value":"/ Returns an iterator over the lines of the `AsciiStr`, which are themselves `AsciiStr`s.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":36970,"byte_end":37061,"line_start":171,"line_end":171,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37066,"byte_end":37069,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Lines are ended with either `LineFeed` (`\\n`), or `CarriageReturn` then `LineFeed` (`\\r\\n`).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37074,"byte_end":37170,"line_start":173,"line_end":173,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37175,"byte_end":37178,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The final line ending is optional.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37183,"byte_end":37221,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37226,"byte_end":37235,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37673,"byte_end":37677,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"trim","qualname":"<AsciiStr>::trim","value":"pub fn trim(&Self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an ASCII string slice with leading and trailing whitespace removed.","sig":null,"attributes":[{"value":"/ Returns an ASCII string slice with leading and trailing whitespace removed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37369,"byte_end":37448,"line_start":183,"line_end":183,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37453,"byte_end":37456,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37461,"byte_end":37475,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37480,"byte_end":37487,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37492,"byte_end":37518,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ let example = AsciiStr::from_ascii(\"  \\twhite \\tspace  \\t\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37523,"byte_end":37596,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(\"white \\tspace\", example.trim());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37601,"byte_end":37649,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37654,"byte_end":37661,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38045,"byte_end":38055,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"trim_start","qualname":"<AsciiStr>::trim_start","value":"pub fn trim_start(&Self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an ASCII string slice with leading whitespace removed.","sig":null,"attributes":[{"value":"/ Returns an ASCII string slice with leading whitespace removed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37744,"byte_end":37810,"line_start":195,"line_end":195,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37815,"byte_end":37818,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37823,"byte_end":37837,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37842,"byte_end":37849,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37854,"byte_end":37880,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/ let example = AsciiStr::from_ascii(\"  \\twhite \\tspace  \\t\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37885,"byte_end":37958,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(\"white \\tspace  \\t\", example.trim_start());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":37963,"byte_end":38021,"line_start":201,"line_end":201,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38026,"byte_end":38033,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38457,"byte_end":38465,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"trim_end","qualname":"<AsciiStr>::trim_end","value":"pub fn trim_end(&Self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an ASCII string slice with trailing whitespace removed.","sig":null,"attributes":[{"value":"/ Returns an ASCII string slice with trailing whitespace removed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38157,"byte_end":38224,"line_start":207,"line_end":207,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38229,"byte_end":38232,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38237,"byte_end":38251,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38256,"byte_end":38263,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38268,"byte_end":38294,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ let example = AsciiStr::from_ascii(\"  \\twhite \\tspace  \\t\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38299,"byte_end":38372,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(\"  \\twhite \\tspace\", example.trim_end());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38377,"byte_end":38433,"line_start":213,"line_end":213,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38438,"byte_end":38445,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38712,"byte_end":38732,"line_start":224,"line_end":224,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<AsciiStr>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares two strings case-insensitively.\n","sig":null,"attributes":[{"value":"/ Compares two strings case-insensitively.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38656,"byte_end":38700,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39004,"byte_end":39024,"line_start":232,"line_end":232,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<AsciiStr>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces lowercase letters with their uppercase equivalent.\n","sig":null,"attributes":[{"value":"/ Replaces lowercase letters with their uppercase equivalent.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":38929,"byte_end":38992,"line_start":231,"line_end":231,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39211,"byte_end":39231,"line_start":239,"line_end":239,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<AsciiStr>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces uppercase letters with their lowercase equivalent.\n","sig":null,"attributes":[{"value":"/ Replaces uppercase letters with their lowercase equivalent.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39136,"byte_end":39199,"line_start":238,"line_end":238,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39465,"byte_end":39483,"line_start":247,"line_end":247,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<AsciiStr>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> AsciiString","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this string where letters 'a' to 'z' are mapped to 'A' to 'Z'.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this string where letters 'a' to 'z' are mapped to 'A' to 'Z'.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39343,"byte_end":39427,"line_start":245,"line_end":245,"column_start":5,"column_end":89}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39432,"byte_end":39453,"line_start":246,"line_end":246,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39762,"byte_end":39780,"line_start":255,"line_end":255,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<AsciiStr>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> AsciiString","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this string where letters 'A' to 'Z' are mapped to 'a' to 'z'.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this string where letters 'A' to 'Z' are mapped to 'a' to 'z'.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39640,"byte_end":39724,"line_start":253,"line_end":253,"column_start":5,"column_end":89}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39729,"byte_end":39750,"line_start":254,"line_end":254,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":40022,"byte_end":40027,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"first","qualname":"<AsciiStr>::first","value":"pub fn first(&Self) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first character if the string is not empty.\n","sig":null,"attributes":[{"value":"/ Returns the first character if the string is not empty.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":39937,"byte_end":39996,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":40001,"byte_end":40010,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":40189,"byte_end":40193,"line_start":269,"line_end":269,"column_start":12,"column_end":16},"name":"last","qualname":"<AsciiStr>::last","value":"pub fn last(&Self) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last character if the string is not empty.\n","sig":null,"attributes":[{"value":"/ Returns the last character if the string is not empty.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":40105,"byte_end":40163,"line_start":267,"line_end":267,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":40168,"byte_end":40177,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1170},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":45911,"byte_end":45916,"line_start":512,"line_end":512,"column_start":12,"column_end":17},"name":"Chars","qualname":"::ascii_str::Chars","value":"","parent":null,"children":[],"decl_id":null,"docs":" A copying iterator over the characters of an `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ A copying iterator over the characters of an `AsciiStr`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":45815,"byte_end":45875,"line_start":510,"line_end":510,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46045,"byte_end":46051,"line_start":515,"line_end":515,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Chars>::as_str","value":"pub fn as_str(&Self) -> &'a AsciiStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the ascii string slice with the remaining characters.\n","sig":null,"attributes":[{"value":"/ Returns the ascii string slice with the remaining characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":45968,"byte_end":46033,"line_start":514,"line_end":514,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1180},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46708,"byte_end":46716,"line_start":543,"line_end":543,"column_start":12,"column_end":20},"name":"CharsMut","qualname":"::ascii_str::CharsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" A mutable iterator over the characters of an `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over the characters of an `AsciiStr`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46619,"byte_end":46679,"line_start":541,"line_end":541,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46851,"byte_end":46859,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"name":"into_str","qualname":"<CharsMut>::into_str","value":"pub fn into_str(Self) -> &'a mut AsciiStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the ascii string slice with the remaining characters.\n","sig":null,"attributes":[{"value":"/ Returns the ascii string slice with the remaining characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46774,"byte_end":46839,"line_start":545,"line_end":545,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47546,"byte_end":47554,"line_start":574,"line_end":574,"column_start":12,"column_end":20},"name":"CharsRef","qualname":"::ascii_str::CharsRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" An immutable iterator over the characters of an `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ An immutable iterator over the characters of an `AsciiStr`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47447,"byte_end":47510,"line_start":572,"line_end":572,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47686,"byte_end":47692,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"as_str","qualname":"<CharsRef>::as_str","value":"pub fn as_str(&Self) -> &'a AsciiStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the ascii string slice with the remaining characters.\n","sig":null,"attributes":[{"value":"/ Returns the ascii string slice with the remaining characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47609,"byte_end":47674,"line_start":576,"line_end":576,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51107,"byte_end":51122,"line_start":697,"line_end":697,"column_start":12,"column_end":27},"name":"AsAsciiStrError","qualname":"::ascii_str::AsAsciiStrError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error that is returned when a sequence of `u8` are not all ASCII.","sig":null,"attributes":[{"value":"/ Error that is returned when a sequence of `u8` are not all ASCII.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":50883,"byte_end":50952,"line_start":693,"line_end":693,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":50953,"byte_end":50956,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ Is used by `As[Mut]AsciiStr` and the `from_ascii` method on `AsciiStr` and `AsciiString`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":50957,"byte_end":51050,"line_start":695,"line_end":695,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51405,"byte_end":51416,"line_start":706,"line_end":706,"column_start":18,"column_end":29},"name":"valid_up_to","qualname":"<AsAsciiStrError>::valid_up_to","value":"pub const fn valid_up_to(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first non-ASCII byte.","sig":null,"attributes":[{"value":"/ Returns the index of the first non-ASCII byte.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51222,"byte_end":51272,"line_start":702,"line_end":702,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51277,"byte_end":51280,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ It is the maximum index such that `from_ascii(input[..index])` would return `Ok(_)`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51285,"byte_end":51373,"line_start":704,"line_end":704,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51378,"byte_end":51387,"line_start":705,"line_end":705,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":306},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52168,"byte_end":52178,"line_start":732,"line_end":732,"column_start":11,"column_end":21},"name":"AsAsciiStr","qualname":"::ascii_str::AsAsciiStr","value":"AsAsciiStr","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":" Convert slices of bytes or AsciiChar to `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ Convert slices of bytes or AsciiChar to `AsciiStr`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51991,"byte_end":52046,"line_start":729,"line_end":729,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":307},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52248,"byte_end":52253,"line_start":735,"line_end":735,"column_start":10,"column_end":15},"name":"Inner","qualname":"::ascii_str::AsAsciiStr::Inner","value":"type Inner;","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Used to constrain `SliceIndex`\n","sig":null,"attributes":[{"value":"/ Used to constrain `SliceIndex`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52185,"byte_end":52219,"line_start":733,"line_end":733,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52867,"byte_end":52878,"line_start":751,"line_end":751,"column_start":8,"column_end":19},"name":"slice_ascii","qualname":"::ascii_str::AsAsciiStr::slice_ascii","value":"pub fn slice_ascii<R>(&Self, R) -> Result<&AsciiStr, AsAsciiStrError> where\nR: SliceIndex<[Self::Inner], Output = [Self::Inner]>","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Convert a subslice to an ASCII slice.","sig":null,"attributes":[{"value":"/ Convert a subslice to an ASCII slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52259,"byte_end":52300,"line_start":736,"line_end":736,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52305,"byte_end":52308,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the range is out of bounds or if not all bytes in the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52313,"byte_end":52387,"line_start":738,"line_end":738,"column_start":5,"column_end":79}},{"value":"/ slice are ASCII. The value in the error will be the index of the first","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52392,"byte_end":52466,"line_start":739,"line_end":739,"column_start":5,"column_end":79}},{"value":"/ non-ASCII byte or the end of the slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52471,"byte_end":52514,"line_start":740,"line_end":740,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52519,"byte_end":52522,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52527,"byte_end":52541,"line_start":742,"line_end":742,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52546,"byte_end":52553,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ use ascii::AsAsciiStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52558,"byte_end":52584,"line_start":744,"line_end":744,"column_start":5,"column_end":31}},{"value":"/ assert!(\"'zoä'\".slice_ascii(..3).is_ok());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52589,"byte_end":52636,"line_start":745,"line_end":745,"column_start":5,"column_end":51}},{"value":"/ assert!(\"'zoä'\".slice_ascii(0..4).is_err());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52641,"byte_end":52690,"line_start":746,"line_end":746,"column_start":5,"column_end":53}},{"value":"/ assert!(\"'zoä'\".slice_ascii(5..=5).is_ok());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52695,"byte_end":52744,"line_start":747,"line_end":747,"column_start":5,"column_end":53}},{"value":"/ assert!(\"'zoä'\".slice_ascii(4..).is_err());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52749,"byte_end":52797,"line_start":748,"line_end":748,"column_start":5,"column_end":52}},{"value":"/ assert!(b\"\\r\\n\".slice_ascii(..).is_ok());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52802,"byte_end":52847,"line_start":749,"line_end":749,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":52852,"byte_end":52859,"line_start":750,"line_end":750,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53412,"byte_end":53424,"line_start":764,"line_end":764,"column_start":8,"column_end":20},"name":"as_ascii_str","qualname":"::ascii_str::AsAsciiStr::as_ascii_str","value":"pub fn as_ascii_str(&Self) -> Result<&AsciiStr, AsAsciiStrError>","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Convert to an ASCII slice.","sig":null,"attributes":[{"value":"/ Convert to an ASCII slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53007,"byte_end":53037,"line_start":753,"line_end":753,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53042,"byte_end":53045,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53050,"byte_end":53063,"line_start":755,"line_end":755,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53068,"byte_end":53075,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ use ascii::{AsAsciiStr, AsciiChar};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53080,"byte_end":53119,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ assert!(\"ASCII\".as_ascii_str().is_ok());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53124,"byte_end":53168,"line_start":758,"line_end":758,"column_start":5,"column_end":49}},{"value":"/ assert!(b\"\\r\\n\".as_ascii_str().is_ok());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53173,"byte_end":53217,"line_start":759,"line_end":759,"column_start":5,"column_end":49}},{"value":"/ assert!(\"'zoä'\".as_ascii_str().is_err());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53222,"byte_end":53268,"line_start":760,"line_end":760,"column_start":5,"column_end":50}},{"value":"/ assert!(b\"\\xff\".as_ascii_str().is_err());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53273,"byte_end":53318,"line_start":761,"line_end":761,"column_start":5,"column_end":50}},{"value":"/ assert!([AsciiChar::C][..].as_ascii_str().is_ok()); // infallible","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53323,"byte_end":53392,"line_start":762,"line_end":762,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53397,"byte_end":53404,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53919,"byte_end":53928,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"get_ascii","qualname":"::ascii_str::AsAsciiStr::get_ascii","value":"pub fn get_ascii(&Self, usize) -> Option<AsciiChar>","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Get a single ASCII character from the slice.","sig":null,"attributes":[{"value":"/ Get a single ASCII character from the slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53511,"byte_end":53559,"line_start":767,"line_end":767,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53564,"byte_end":53567,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds or the byte is not ASCII.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53572,"byte_end":53646,"line_start":769,"line_end":769,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53651,"byte_end":53654,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53659,"byte_end":53673,"line_start":771,"line_end":771,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53678,"byte_end":53685,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ use ascii::{AsAsciiStr, AsciiChar};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53690,"byte_end":53729,"line_start":773,"line_end":773,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(\"'zoä'\".get_ascii(4), None);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53734,"byte_end":53778,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(\"'zoä'\".get_ascii(5), Some(AsciiChar::Apostrophe));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53783,"byte_end":53850,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(\"'zoä'\".get_ascii(6), None);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53855,"byte_end":53899,"line_start":776,"line_end":776,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":53904,"byte_end":53911,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54179,"byte_end":54201,"line_start":785,"line_end":785,"column_start":15,"column_end":37},"name":"as_ascii_str_unchecked","qualname":"::ascii_str::AsAsciiStr::as_ascii_str_unchecked","value":"pub unsafe fn as_ascii_str_unchecked(&Self) -> &AsciiStr","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Convert to an ASCII slice without checking for non-ASCII characters.","sig":null,"attributes":[{"value":"/ Convert to an ASCII slice without checking for non-ASCII characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54056,"byte_end":54128,"line_start":781,"line_end":781,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54133,"byte_end":54136,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54141,"byte_end":54155,"line_start":783,"line_end":783,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54160,"byte_end":54164,"line_start":784,"line_end":784,"column_start":5,"column_end":9}}]},{"kind":"Trait","id":{"krate":0,"index":314},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54300,"byte_end":54313,"line_start":789,"line_end":789,"column_start":11,"column_end":24},"name":"AsMutAsciiStr","qualname":"::ascii_str::AsMutAsciiStr","value":"AsMutAsciiStr: AsAsciiStr","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" Convert mutable slices of bytes or AsciiChar to `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ Convert mutable slices of bytes or AsciiChar to `AsciiStr`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54226,"byte_end":54289,"line_start":788,"line_end":788,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54381,"byte_end":54396,"line_start":791,"line_end":791,"column_start":8,"column_end":23},"name":"slice_ascii_mut","qualname":"::ascii_str::AsMutAsciiStr::slice_ascii_mut","value":"pub fn slice_ascii_mut<R>(&mut Self, R)\n-> Result<&mut AsciiStr, AsAsciiStrError> where R: SliceIndex<[Self::Inner],\nOutput = [Self::Inner]>","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":" Convert a subslice to an ASCII slice.\n","sig":null,"attributes":[{"value":"/ Convert a subslice to an ASCII slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54332,"byte_end":54373,"line_start":790,"line_end":790,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54578,"byte_end":54594,"line_start":794,"line_end":794,"column_start":8,"column_end":24},"name":"as_mut_ascii_str","qualname":"::ascii_str::AsMutAsciiStr::as_mut_ascii_str","value":"pub fn as_mut_ascii_str(&mut Self) -> Result<&mut AsciiStr, AsAsciiStrError>","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":" Convert to a mutable ASCII slice.\n","sig":null,"attributes":[{"value":"/ Convert to a mutable ASCII slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54533,"byte_end":54570,"line_start":793,"line_end":793,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54787,"byte_end":54813,"line_start":798,"line_end":798,"column_start":15,"column_end":41},"name":"as_mut_ascii_str_unchecked","qualname":"::ascii_str::AsMutAsciiStr::as_mut_ascii_str_unchecked","value":"pub unsafe fn as_mut_ascii_str_unchecked(&mut Self) -> &mut AsciiStr","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":" Convert to a mutable ASCII slice without checking for non-ASCII characters.\n","sig":null,"attributes":[{"value":"/ Convert to a mutable ASCII slice without checking for non-ASCII characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54693,"byte_end":54772,"line_start":797,"line_end":797,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1232},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":75871,"byte_end":75882,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"AsciiString","qualname":"::ascii_string::AsciiString","value":"AsciiString {  }","parent":null,"children":[{"krate":0,"index":1233}],"decl_id":null,"docs":" A growable string stored as an ASCII encoded buffer.\n","sig":null,"attributes":[{"value":"/ A growable string stored as an ASCII encoded buffer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":75718,"byte_end":75774,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"repr(transparent)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":75839,"byte_end":75859,"line_start":17,"line_end":17,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76151,"byte_end":76154,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<AsciiString>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty ASCII string buffer without allocating.","sig":null,"attributes":[{"value":"/ Creates a new, empty ASCII string buffer without allocating.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":75936,"byte_end":76000,"line_start":23,"line_end":23,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76005,"byte_end":76008,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76013,"byte_end":76027,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76032,"byte_end":76039,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76044,"byte_end":76073,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76078,"byte_end":76113,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76118,"byte_end":76125,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76130,"byte_end":76139,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76594,"byte_end":76607,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<AsciiString>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ASCII string buffer with the given capacity.\n The string will be able to hold exactly `capacity` bytes without reallocating.\n If `capacity` is 0, the ASCII string will not allocate.","sig":null,"attributes":[{"value":"/ Creates a new ASCII string buffer with the given capacity.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76218,"byte_end":76280,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ The string will be able to hold exactly `capacity` bytes without reallocating.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76285,"byte_end":76367,"line_start":36,"line_end":36,"column_start":5,"column_end":87}},{"value":"/ If `capacity` is 0, the ASCII string will not allocate.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76372,"byte_end":76431,"line_start":37,"line_end":37,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76436,"byte_end":76439,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76444,"byte_end":76458,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76463,"byte_end":76470,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76475,"byte_end":76504,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::with_capacity(10);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76509,"byte_end":76556,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76561,"byte_end":76568,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76573,"byte_end":76582,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77817,"byte_end":77831,"line_start":84,"line_end":84,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<AsciiString>::from_raw_parts","value":"pub unsafe fn from_raw_parts(*mut AsciiChar, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AsciiString` from a length, capacity and pointer.","sig":null,"attributes":[{"value":"/ Creates a new `AsciiString` from a length, capacity and pointer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76704,"byte_end":76772,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76777,"byte_end":76780,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76785,"byte_end":76797,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76802,"byte_end":76805,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This is highly unsafe, due to the number of invariants that aren't checked:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76810,"byte_end":76889,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76894,"byte_end":76897,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ * The memory at `ptr` need to have been previously allocated by the same allocator this","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76902,"byte_end":76993,"line_start":55,"line_end":55,"column_start":5,"column_end":96}},{"value":"/   library uses.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":76998,"byte_end":77017,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/ * `length` needs to be less than or equal to `capacity`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77022,"byte_end":77082,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/ * `capacity` needs to be the correct value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77087,"byte_end":77134,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77139,"byte_end":77142,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Violating these may cause problems like corrupting the allocator's internal datastructures.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77147,"byte_end":77242,"line_start":60,"line_end":60,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77247,"byte_end":77250,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77255,"byte_end":77269,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77274,"byte_end":77277,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77282,"byte_end":77298,"line_start":64,"line_end":64,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77303,"byte_end":77306,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77311,"byte_end":77318,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77323,"byte_end":77352,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/ use std::mem;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77357,"byte_end":77374,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77379,"byte_end":77382,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77387,"byte_end":77399,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/    let s = AsciiString::from_ascii(\"hello\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77404,"byte_end":77461,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/    let ptr = s.as_ptr();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77466,"byte_end":77494,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/    let len = s.len();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77499,"byte_end":77524,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/    let capacity = s.capacity();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77529,"byte_end":77564,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77569,"byte_end":77572,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/    mem::forget(s);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77577,"byte_end":77599,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77604,"byte_end":77607,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/    let s = AsciiString::from_raw_parts(ptr as *mut _, len, capacity);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77612,"byte_end":77685,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77690,"byte_end":77693,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(AsciiString::from_ascii(\"hello\").unwrap(), s);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77698,"byte_end":77762,"line_start":80,"line_end":80,"column_start":5,"column_end":69}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77767,"byte_end":77772,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77777,"byte_end":77784,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77789,"byte_end":77798,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78444,"byte_end":78464,"line_start":96,"line_end":96,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<AsciiString>::from_ascii_unchecked","value":"pub unsafe fn from_ascii_unchecked<B>(B) -> Self where B: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes to an `AsciiString` without checking for non-ASCII characters.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes to an `AsciiString` without checking for non-ASCII characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":77978,"byte_end":78071,"line_start":88,"line_end":88,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78076,"byte_end":78079,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78084,"byte_end":78096,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/ This function is unsafe because it does not check that the bytes passed to it are valid","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78101,"byte_end":78192,"line_start":91,"line_end":91,"column_start":5,"column_end":96}},{"value":"/ ASCII characters. If this constraint is violated, it may cause memory unsafety issues with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78197,"byte_end":78291,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ future of the `AsciiString`, as the rest of this library assumes that `AsciiString`s are","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78296,"byte_end":78388,"line_start":93,"line_end":93,"column_start":5,"column_end":97}},{"value":"/ ASCII encoded.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78393,"byte_end":78411,"line_start":94,"line_end":94,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78416,"byte_end":78425,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79297,"byte_end":79307,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<AsciiString>::from_ascii","value":"pub fn from_ascii<B>(B) -> Result<AsciiString, FromAsciiError<B>> where\nB: Into<Vec<u8>> + AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Converts anything that can represent a byte buffer into an `AsciiString`.","sig":null,"attributes":[{"value":"/ Converts anything that can represent a byte buffer into an `AsciiString`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78788,"byte_end":78865,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78870,"byte_end":78873,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78878,"byte_end":78891,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/ Returns the byte buffer if not all of the bytes are ASCII characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78896,"byte_end":78969,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78974,"byte_end":78977,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":78982,"byte_end":78996,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79001,"byte_end":79008,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79013,"byte_end":79042,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/ let foo = AsciiString::from_ascii(\"foo\".to_string()).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79047,"byte_end":79113,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ let err = AsciiString::from_ascii(\"Ŋ\".to_string()).unwrap_err();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79118,"byte_end":79187,"line_start":119,"line_end":119,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(foo.as_str(), \"foo\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79192,"byte_end":79228,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(err.into_source(), \"Ŋ\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79233,"byte_end":79273,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79278,"byte_end":79285,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80110,"byte_end":80118,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"push_str","qualname":"<AsciiString>::push_str","value":"pub fn push_str(&mut Self, &AsciiStr)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given ASCII string onto this ASCII string buffer.","sig":null,"attributes":[{"value":"/ Pushes the given ASCII string onto this ASCII string buffer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79723,"byte_end":79787,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79792,"byte_end":79795,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79800,"byte_end":79814,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79819,"byte_end":79826,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiString, AsAsciiStr};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79831,"byte_end":79874,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79879,"byte_end":79905,"line_start":143,"line_end":143,"column_start":5,"column_end":31}},{"value":"/ let mut s = AsciiString::from_str(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79910,"byte_end":79964,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ s.push_str(\"bar\".as_ascii_str().unwrap());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":79969,"byte_end":80015,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(s, \"foobar\".as_ascii_str().unwrap());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80020,"byte_end":80072,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80077,"byte_end":80084,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80089,"byte_end":80098,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80485,"byte_end":80493,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AsciiString>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that this ASCII string buffer can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that this ASCII string buffer can hold without reallocating.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80202,"byte_end":80294,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80299,"byte_end":80302,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80307,"byte_end":80321,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80326,"byte_end":80333,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80338,"byte_end":80367,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/ let s = String::with_capacity(10);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80372,"byte_end":80410,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ assert!(s.capacity() >= 10);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80415,"byte_end":80447,"line_start":159,"line_end":159,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80452,"byte_end":80459,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80464,"byte_end":80473,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81021,"byte_end":81028,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"reserve","qualname":"<AsciiString>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted in the given\n `AsciiString`. The collection may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted in the given","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80551,"byte_end":80637,"line_start":166,"line_end":166,"column_start":5,"column_end":91}},{"value":"/ `AsciiString`. The collection may reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80642,"byte_end":80731,"line_start":167,"line_end":167,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80736,"byte_end":80739,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80744,"byte_end":80756,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80761,"byte_end":80810,"line_start":170,"line_end":170,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80815,"byte_end":80818,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80823,"byte_end":80837,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80842,"byte_end":80849,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80854,"byte_end":80883,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80888,"byte_end":80923,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/ s.reserve(10);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80928,"byte_end":80946,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ assert!(s.capacity() >= 10);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80951,"byte_end":80983,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":80988,"byte_end":80995,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81000,"byte_end":81009,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81805,"byte_end":81818,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<AsciiString>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more bytes to be inserted in the\n given `AsciiString`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more bytes to be inserted in the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81109,"byte_end":81200,"line_start":184,"line_end":184,"column_start":5,"column_end":96}},{"value":"/ given `AsciiString`. Does nothing if the capacity is already sufficient.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81205,"byte_end":81281,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81286,"byte_end":81289,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give the collection more space than it requests. Therefore","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81294,"byte_end":81384,"line_start":187,"line_end":187,"column_start":5,"column_end":95}},{"value":"/ capacity can not be relied upon to be precisely minimal. Prefer `reserve` if future","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81389,"byte_end":81476,"line_start":188,"line_end":188,"column_start":5,"column_end":92}},{"value":"/ insertions are expected.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81481,"byte_end":81509,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81514,"byte_end":81517,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81522,"byte_end":81534,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81539,"byte_end":81588,"line_start":192,"line_end":192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81593,"byte_end":81596,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81601,"byte_end":81615,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81620,"byte_end":81627,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81632,"byte_end":81661,"line_start":196,"line_end":196,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81666,"byte_end":81701,"line_start":197,"line_end":197,"column_start":5,"column_end":40}},{"value":"/ s.reserve_exact(10);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81706,"byte_end":81730,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/ assert!(s.capacity() >= 10);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81735,"byte_end":81767,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81772,"byte_end":81779,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81784,"byte_end":81793,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82306,"byte_end":82319,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<AsciiString>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of this ASCII string buffer to match it's length.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of this ASCII string buffer to match it's length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81905,"byte_end":81979,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81984,"byte_end":81987,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":81992,"byte_end":82006,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82011,"byte_end":82018,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82023,"byte_end":82052,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82057,"byte_end":82083,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ let mut s = AsciiString::from_str(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82088,"byte_end":82142,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ s.reserve(100);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82147,"byte_end":82166,"line_start":213,"line_end":213,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82171,"byte_end":82204,"line_start":214,"line_end":214,"column_start":5,"column_end":38}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82209,"byte_end":82231,"line_start":215,"line_end":215,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(s.capacity(), 3);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82236,"byte_end":82268,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82273,"byte_end":82280,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82285,"byte_end":82294,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82821,"byte_end":82825,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"push","qualname":"<AsciiString>::push","value":"pub fn push(&mut Self, AsciiChar)","parent":null,"children":[],"decl_id":null,"docs":" Adds the given ASCII character to the end of the ASCII string.","sig":null,"attributes":[{"value":"/ Adds the given ASCII character to the end of the ASCII string.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82377,"byte_end":82443,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82448,"byte_end":82451,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82456,"byte_end":82470,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82475,"byte_end":82482,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{ AsciiChar, AsciiString};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82487,"byte_end":82530,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/ let mut s = AsciiString::from_ascii(\"abc\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82535,"byte_end":82591,"line_start":228,"line_end":228,"column_start":5,"column_end":61}},{"value":"/ s.push(AsciiChar::from_ascii('1').unwrap());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82596,"byte_end":82644,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ s.push(AsciiChar::from_ascii('2').unwrap());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82649,"byte_end":82697,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/ s.push(AsciiChar::from_ascii('3').unwrap());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82702,"byte_end":82750,"line_start":231,"line_end":231,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(s, \"abc123\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82755,"byte_end":82783,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82788,"byte_end":82795,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82800,"byte_end":82809,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83240,"byte_end":83248,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"truncate","qualname":"<AsciiString>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens a ASCII string to the specified length.","sig":null,"attributes":[{"value":"/ Shortens a ASCII string to the specified length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82891,"byte_end":82943,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82948,"byte_end":82951,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82956,"byte_end":82968,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/ Panics if `new_len` > current length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":82973,"byte_end":83014,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83019,"byte_end":83022,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83027,"byte_end":83041,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83046,"byte_end":83053,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83058,"byte_end":83087,"line_start":246,"line_end":246,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"hello\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83092,"byte_end":83150,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/ s.truncate(2);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83155,"byte_end":83173,"line_start":248,"line_end":248,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(s, \"he\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83178,"byte_end":83202,"line_start":249,"line_end":249,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83207,"byte_end":83214,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83219,"byte_end":83228,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83844,"byte_end":83847,"line_start":269,"line_end":269,"column_start":12,"column_end":15},"name":"pop","qualname":"<AsciiString>::pop","value":"pub fn pop(&mut Self) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last character from the ASCII string buffer and returns it.\n Returns `None` if this string buffer is empty.","sig":null,"attributes":[{"value":"/ Removes the last character from the ASCII string buffer and returns it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83324,"byte_end":83399,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ Returns `None` if this string buffer is empty.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83404,"byte_end":83454,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83459,"byte_end":83462,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83467,"byte_end":83481,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83486,"byte_end":83493,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83498,"byte_end":83527,"line_start":261,"line_end":261,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83532,"byte_end":83588,"line_start":262,"line_end":262,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop().map(|c| c.as_char()), Some('o'));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83593,"byte_end":83649,"line_start":263,"line_end":263,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop().map(|c| c.as_char()), Some('o'));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83654,"byte_end":83710,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop().map(|c| c.as_char()), Some('f'));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83715,"byte_end":83771,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop(), None);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83776,"byte_end":83806,"line_start":266,"line_end":266,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83811,"byte_end":83818,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83823,"byte_end":83832,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84510,"byte_end":84516,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"remove","qualname":"<AsciiString>::remove","value":"pub fn remove(&mut Self, usize) -> AsciiChar","parent":null,"children":[],"decl_id":null,"docs":" Removes the ASCII character at position `idx` from the buffer and returns it.","sig":null,"attributes":[{"value":"/ Removes the ASCII character at position `idx` from the buffer and returns it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":83916,"byte_end":83997,"line_start":273,"line_end":273,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84002,"byte_end":84005,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84010,"byte_end":84023,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/ This is an O(n) operation as it requires copying every element in the buffer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84028,"byte_end":84109,"line_start":276,"line_end":276,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84114,"byte_end":84117,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84122,"byte_end":84134,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/ If `idx` is out of bounds this function will panic.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84139,"byte_end":84194,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84199,"byte_end":84202,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84207,"byte_end":84221,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84226,"byte_end":84233,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84238,"byte_end":84267,"line_start":283,"line_end":283,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84272,"byte_end":84328,"line_start":284,"line_end":284,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.remove(0).as_char(), 'f');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84333,"byte_end":84376,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(s.remove(1).as_char(), 'o');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84381,"byte_end":84424,"line_start":286,"line_end":286,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(s.remove(0).as_char(), 'o');","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84429,"byte_end":84472,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84477,"byte_end":84484,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84489,"byte_end":84498,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85107,"byte_end":85113,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"insert","qualname":"<AsciiString>::insert","value":"pub fn insert(&mut Self, usize, AsciiChar)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ASCII character into the buffer at position `idx`.","sig":null,"attributes":[{"value":"/ Inserts an ASCII character into the buffer at position `idx`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84595,"byte_end":84660,"line_start":294,"line_end":294,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84665,"byte_end":84668,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84673,"byte_end":84686,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/ This is an O(n) operation as it requires copying every element in the buffer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84691,"byte_end":84772,"line_start":297,"line_end":297,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84777,"byte_end":84780,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84785,"byte_end":84797,"line_start":299,"line_end":299,"column_start":5,"column_end":17}},{"value":"/ If `idx` is out of bounds this function will panic.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84802,"byte_end":84857,"line_start":300,"line_end":300,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84862,"byte_end":84865,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84870,"byte_end":84884,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84889,"byte_end":84896,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiString,AsciiChar};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84901,"byte_end":84942,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":84947,"byte_end":85003,"line_start":305,"line_end":305,"column_start":5,"column_end":61}},{"value":"/ s.insert(2, AsciiChar::b);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85008,"byte_end":85038,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(s, \"fobo\");","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85043,"byte_end":85069,"line_start":307,"line_end":307,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85074,"byte_end":85081,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85086,"byte_end":85095,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85451,"byte_end":85454,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"len","qualname":"<AsciiString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in this ASCII string.","sig":null,"attributes":[{"value":"/ Returns the number of bytes in this ASCII string.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85198,"byte_end":85251,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85256,"byte_end":85259,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85264,"byte_end":85278,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85283,"byte_end":85290,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85295,"byte_end":85324,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/ let s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85329,"byte_end":85381,"line_start":319,"line_end":319,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(s.len(), 3);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85386,"byte_end":85413,"line_start":320,"line_end":320,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85418,"byte_end":85425,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85430,"byte_end":85439,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85844,"byte_end":85852,"line_start":338,"line_end":338,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<AsciiString>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the ASCII string contains zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the ASCII string contains zero bytes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85507,"byte_end":85564,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85569,"byte_end":85572,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85577,"byte_end":85591,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85596,"byte_end":85603,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiChar, AsciiString};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85608,"byte_end":85650,"line_start":331,"line_end":331,"column_start":5,"column_end":47}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85655,"byte_end":85690,"line_start":332,"line_end":332,"column_start":5,"column_end":40}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85695,"byte_end":85721,"line_start":333,"line_end":333,"column_start":5,"column_end":31}},{"value":"/ s.push(AsciiChar::from_ascii('a').unwrap());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85726,"byte_end":85774,"line_start":334,"line_end":334,"column_start":5,"column_end":53}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85779,"byte_end":85806,"line_start":335,"line_end":335,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85811,"byte_end":85818,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85823,"byte_end":85832,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86201,"byte_end":86206,"line_start":352,"line_end":352,"column_start":12,"column_end":17},"name":"clear","qualname":"<AsciiString>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncates the ASCII string, setting length (but not capacity) to zero.","sig":null,"attributes":[{"value":"/ Truncates the ASCII string, setting length (but not capacity) to zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85905,"byte_end":85979,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85984,"byte_end":85987,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":85992,"byte_end":86006,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86011,"byte_end":86018,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86023,"byte_end":86052,"line_start":346,"line_end":346,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86057,"byte_end":86113,"line_start":347,"line_end":347,"column_start":5,"column_end":61}},{"value":"/ s.clear();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86118,"byte_end":86132,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86137,"byte_end":86163,"line_start":349,"line_end":349,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86168,"byte_end":86175,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86180,"byte_end":86189,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92951,"byte_end":92965,"line_start":644,"line_end":644,"column_start":12,"column_end":26},"name":"FromAsciiError","qualname":"::ascii_string::FromAsciiError","value":"FromAsciiError {  }","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279}],"decl_id":null,"docs":" A possible error value when converting an `AsciiString` from a byte vector or string.\n It wraps an `AsAsciiStrError` which you can get through the `ascii_error()` method.","sig":null,"attributes":[{"value":"/ A possible error value when converting an `AsciiString` from a byte vector or string.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92253,"byte_end":92342,"line_start":629,"line_end":629,"column_start":1,"column_end":90}},{"value":"/ It wraps an `AsAsciiStrError` which you can get through the `ascii_error()` method.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92343,"byte_end":92430,"line_start":630,"line_end":630,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92431,"byte_end":92434,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ This is the error type for `AsciiString::from_ascii()` and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92435,"byte_end":92497,"line_start":632,"line_end":632,"column_start":1,"column_end":63}},{"value":"/ `IntoAsciiString::into_ascii_string()`. They will never clone or touch the content of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92498,"byte_end":92591,"line_start":633,"line_end":633,"column_start":1,"column_end":94}},{"value":"/ original type; It can be extracted by the `into_source` method.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92592,"byte_end":92659,"line_start":634,"line_end":634,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92660,"byte_end":92663,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ #Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92664,"byte_end":92677,"line_start":636,"line_end":636,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92678,"byte_end":92685,"line_start":637,"line_end":637,"column_start":1,"column_end":8}},{"value":"/ # use ascii::IntoAsciiString;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92686,"byte_end":92719,"line_start":638,"line_end":638,"column_start":1,"column_end":34}},{"value":"/ let err = \"bø!\".to_string().into_ascii_string().unwrap_err();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92720,"byte_end":92786,"line_start":639,"line_end":639,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(err.ascii_error().valid_up_to(), 1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92787,"byte_end":92838,"line_start":640,"line_end":640,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(err.into_source(), \"bø!\".to_string());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92839,"byte_end":92893,"line_start":641,"line_end":641,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92894,"byte_end":92901,"line_start":642,"line_end":642,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93135,"byte_end":93146,"line_start":651,"line_end":651,"column_start":12,"column_end":23},"name":"ascii_error","qualname":"<FromAsciiError<O>>::ascii_error","value":"pub fn ascii_error(&Self) -> AsAsciiStrError","parent":null,"children":[],"decl_id":null,"docs":" Get the position of the first non-ASCII byte or character.\n","sig":null,"attributes":[{"value":"/ Get the position of the first non-ASCII byte or character.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93047,"byte_end":93109,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93114,"byte_end":93123,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93273,"byte_end":93284,"line_start":656,"line_end":656,"column_start":12,"column_end":23},"name":"into_source","qualname":"<FromAsciiError<O>>::into_source","value":"pub fn into_source(Self) -> O","parent":null,"children":[],"decl_id":null,"docs":" Get back the original, unmodified type.\n","sig":null,"attributes":[{"value":"/ Get back the original, unmodified type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93204,"byte_end":93247,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93252,"byte_end":93261,"line_start":655,"line_end":655,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":577},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93989,"byte_end":94004,"line_start":685,"line_end":685,"column_start":11,"column_end":26},"name":"IntoAsciiString","qualname":"::ascii_string::IntoAsciiString","value":"IntoAsciiString: Sized","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":" Convert vectors into `AsciiString`.\n","sig":null,"attributes":[{"value":"/ Convert vectors into `AsciiString`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93939,"byte_end":93978,"line_start":684,"line_end":684,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":94104,"byte_end":94131,"line_start":687,"line_end":687,"column_start":15,"column_end":42},"name":"into_ascii_string_unchecked","qualname":"::ascii_string::IntoAsciiString::into_ascii_string_unchecked","value":"pub unsafe fn into_ascii_string_unchecked(Self) -> AsciiString","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Convert to `AsciiString` without checking for non-ASCII characters.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiString` without checking for non-ASCII characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":94018,"byte_end":94089,"line_start":686,"line_end":686,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":94195,"byte_end":94212,"line_start":689,"line_end":689,"column_start":8,"column_end":25},"name":"into_ascii_string","qualname":"::ascii_string::IntoAsciiString::into_ascii_string","value":"pub fn into_ascii_string(Self) -> Result<AsciiString, FromAsciiError<Self>>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Convert to `AsciiString`.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiString`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":94158,"byte_end":94187,"line_start":688,"line_end":688,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":618},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102202,"byte_end":102214,"line_start":19,"line_end":19,"column_start":8,"column_end":20},"name":"caret_encode","qualname":"::free_functions::caret_encode","value":"pub fn caret_encode<C: Copy + Into<u8>>(C) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Terminals use [caret notation](https://en.wikipedia.org/wiki/Caret_notation)\n to display some typed control codes, such as ^D for EOT and ^Z for SUB.","sig":null,"attributes":[{"value":"/ Terminals use [caret notation](https://en.wikipedia.org/wiki/Caret_notation)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101614,"byte_end":101694,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to display some typed control codes, such as ^D for EOT and ^Z for SUB.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101695,"byte_end":101770,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101771,"byte_end":101774,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function returns the caret notation letter for control codes,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101775,"byte_end":101845,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ or `None` for printable characters.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101846,"byte_end":101885,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101886,"byte_end":101889,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101890,"byte_end":101904,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101905,"byte_end":101912,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # use ascii::{AsciiChar, caret_encode};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101913,"byte_end":101956,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(caret_encode(b'\\0'), Some(AsciiChar::At));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":101957,"byte_end":102014,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(caret_encode(AsciiChar::DEL), Some(AsciiChar::Question));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102015,"byte_end":102087,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(caret_encode(b'E'), None);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102088,"byte_end":102129,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(caret_encode(b'\\n'), Some(AsciiChar::J));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102130,"byte_end":102186,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102187,"byte_end":102194,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103283,"byte_end":103295,"line_start":54,"line_end":54,"column_start":8,"column_end":20},"name":"caret_decode","qualname":"::free_functions::caret_decode","value":"pub fn caret_decode<C: Copy + Into<u8>>(C) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Returns the control code represented by a [caret notation](https://en.wikipedia.org/wiki/Caret_notation)\n letter, or `None` if the letter is not used in caret notation.","sig":null,"attributes":[{"value":"/ Returns the control code represented by a [caret notation](https://en.wikipedia.org/wiki/Caret_notation)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102506,"byte_end":102614,"line_start":31,"line_end":31,"column_start":1,"column_end":109}},{"value":"/ letter, or `None` if the letter is not used in caret notation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102615,"byte_end":102681,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102682,"byte_end":102685,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This function is the inverse of `caret_encode()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102686,"byte_end":102739,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102740,"byte_end":102743,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102744,"byte_end":102758,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102759,"byte_end":102762,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102763,"byte_end":102779,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102780,"byte_end":102783,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102784,"byte_end":102791,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # use ascii::{AsciiChar, caret_decode};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102792,"byte_end":102835,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(caret_decode(b'?'), Some(AsciiChar::DEL));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102836,"byte_end":102893,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(caret_decode(AsciiChar::D), Some(AsciiChar::EOT));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102894,"byte_end":102959,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(caret_decode(b'\\0'), None);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":102960,"byte_end":103002,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103003,"byte_end":103010,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103011,"byte_end":103014,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Symmetry:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103015,"byte_end":103028,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103029,"byte_end":103032,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103033,"byte_end":103040,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ # use ascii::{AsciiChar, caret_encode, caret_decode};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103041,"byte_end":103098,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(caret_encode(AsciiChar::US).and_then(caret_decode), Some(AsciiChar::US));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103099,"byte_end":103187,"line_start":51,"line_end":51,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(caret_decode(b'@').and_then(caret_encode), Some(AsciiChar::At));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103188,"byte_end":103267,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/free_functions.rs","byte_start":103268,"byte_end":103275,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8113,"byte_end":8122,"line_start":282,"line_end":282,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22949,"byte_end":22958,"line_start":690,"line_end":690,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":23093,"byte_end":23102,"line_start":697,"line_end":697,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":23234,"byte_end":23243,"line_start":704,"line_end":704,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":24755,"byte_end":24771,"line_start":761,"line_end":761,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":24909,"byte_end":24925,"line_start":767,"line_end":767,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25080,"byte_end":25096,"line_start":774,"line_end":774,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25539,"byte_end":25548,"line_start":789,"line_end":789,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32468,"byte_end":32476,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":40870,"byte_end":40878,"line_start":296,"line_end":296,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41027,"byte_end":41035,"line_start":305,"line_end":305,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41136,"byte_end":41144,"line_start":311,"line_end":311,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41250,"byte_end":41258,"line_start":317,"line_end":317,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41370,"byte_end":41378,"line_start":323,"line_end":323,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":42108,"byte_end":42111,"line_start":351,"line_end":351,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":42323,"byte_end":42331,"line_start":359,"line_end":359,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":42430,"byte_end":42438,"line_start":365,"line_end":365,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":43832,"byte_end":43841,"line_start":425,"line_end":425,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":43948,"byte_end":43956,"line_start":431,"line_end":431,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":44105,"byte_end":44113,"line_start":438,"line_end":438,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":44937,"byte_end":44945,"line_start":472,"line_end":472,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":45103,"byte_end":45111,"line_start":481,"line_end":481,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":45952,"byte_end":45957,"line_start":513,"line_end":513,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46140,"byte_end":46145,"line_start":519,"line_end":519,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46396,"byte_end":46401,"line_start":529,"line_end":529,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46548,"byte_end":46553,"line_start":535,"line_end":535,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46755,"byte_end":46763,"line_start":544,"line_end":544,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46953,"byte_end":46961,"line_start":550,"line_end":550,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47219,"byte_end":47227,"line_start":560,"line_end":560,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47373,"byte_end":47381,"line_start":566,"line_end":566,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47590,"byte_end":47598,"line_start":575,"line_end":575,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47781,"byte_end":47789,"line_start":581,"line_end":581,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":48039,"byte_end":48047,"line_start":591,"line_end":591,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":48448,"byte_end":48453,"line_start":607,"line_end":607,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":48946,"byte_end":48951,"line_start":625,"line_end":625,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":49546,"byte_end":49551,"line_start":647,"line_end":647,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":50271,"byte_end":50276,"line_start":671,"line_end":671,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51200,"byte_end":51215,"line_start":701,"line_end":701,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51692,"byte_end":51707,"line_start":716,"line_end":716,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51885,"byte_end":51900,"line_start":722,"line_end":722,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":56281,"byte_end":56289,"line_start":839,"line_end":839,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":56846,"byte_end":56854,"line_start":859,"line_end":859,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":62246,"byte_end":62250,"line_start":1016,"line_end":1016,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":75918,"byte_end":75929,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86269,"byte_end":86280,"line_start":357,"line_end":357,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86425,"byte_end":86436,"line_start":366,"line_end":366,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86574,"byte_end":86585,"line_start":373,"line_end":373,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87365,"byte_end":87376,"line_start":407,"line_end":407,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87482,"byte_end":87493,"line_start":414,"line_end":414,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87615,"byte_end":87626,"line_start":421,"line_end":421,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87746,"byte_end":87757,"line_start":428,"line_end":428,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88227,"byte_end":88238,"line_start":445,"line_end":445,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88366,"byte_end":88377,"line_start":452,"line_end":452,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88510,"byte_end":88521,"line_start":459,"line_end":459,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88673,"byte_end":88684,"line_start":466,"line_end":466,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88800,"byte_end":88803,"line_start":472,"line_end":472,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88952,"byte_end":88955,"line_start":478,"line_end":478,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89081,"byte_end":89092,"line_start":484,"line_end":484,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89197,"byte_end":89208,"line_start":491,"line_end":491,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89312,"byte_end":89323,"line_start":498,"line_end":498,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89425,"byte_end":89436,"line_start":505,"line_end":505,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89540,"byte_end":89551,"line_start":512,"line_end":512,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89668,"byte_end":89679,"line_start":519,"line_end":519,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89791,"byte_end":89802,"line_start":526,"line_end":526,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89992,"byte_end":90003,"line_start":534,"line_end":534,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":90146,"byte_end":90157,"line_start":541,"line_end":541,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":90449,"byte_end":90460,"line_start":550,"line_end":550,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":90950,"byte_end":90961,"line_start":570,"line_end":570,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91162,"byte_end":91173,"line_start":578,"line_end":578,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91498,"byte_end":91509,"line_start":589,"line_end":589,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91703,"byte_end":91714,"line_start":599,"line_end":599,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91840,"byte_end":91851,"line_start":606,"line_end":606,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92074,"byte_end":92085,"line_start":618,"line_end":618,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93023,"byte_end":93037,"line_start":648,"line_end":648,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93348,"byte_end":93362,"line_start":660,"line_end":660,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93520,"byte_end":93534,"line_start":666,"line_end":666,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93692,"byte_end":93706,"line_start":672,"line_end":672,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":94293,"byte_end":94296,"line_start":692,"line_end":692,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":96316,"byte_end":96323,"line_start":762,"line_end":762,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":98051,"byte_end":98054,"line_start":813,"line_end":813,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":8113,"byte_end":8122,"line_start":282,"line_end":282,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":22949,"byte_end":22958,"line_start":690,"line_end":690,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":23093,"byte_end":23102,"line_start":697,"line_end":697,"column_start":21,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":23234,"byte_end":23243,"line_start":704,"line_end":704,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":24755,"byte_end":24771,"line_start":761,"line_end":761,"column_start":21,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":24909,"byte_end":24925,"line_start":767,"line_end":767,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25080,"byte_end":25096,"line_start":774,"line_end":774,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_char.rs","byte_start":25539,"byte_end":25548,"line_start":789,"line_end":789,"column_start":22,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":672},"to":{"krate":0,"index":70}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":32468,"byte_end":32476,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":40870,"byte_end":40878,"line_start":296,"line_end":296,"column_start":18,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1106},"to":{"krate":5,"index":535}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41027,"byte_end":41035,"line_start":305,"line_end":305,"column_start":22,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41136,"byte_end":41144,"line_start":311,"line_end":311,"column_start":21,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41250,"byte_end":41258,"line_start":317,"line_end":317,"column_start":29,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":41370,"byte_end":41378,"line_start":323,"line_end":323,"column_start":29,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2780}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":42108,"byte_end":42111,"line_start":351,"line_end":351,"column_start":33,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":42323,"byte_end":42331,"line_start":359,"line_end":359,"column_start":26,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":42430,"byte_end":42438,"line_start":365,"line_end":365,"column_start":26,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2780}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":43832,"byte_end":43841,"line_start":425,"line_end":425,"column_start":26,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":43948,"byte_end":43956,"line_start":431,"line_end":431,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":44105,"byte_end":44113,"line_start":438,"line_end":438,"column_start":21,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":44937,"byte_end":44945,"line_start":472,"line_end":472,"column_start":23,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":45103,"byte_end":45111,"line_start":481,"line_end":481,"column_start":26,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":45952,"byte_end":45957,"line_start":513,"line_end":513,"column_start":10,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46140,"byte_end":46145,"line_start":519,"line_end":519,"column_start":23,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46396,"byte_end":46401,"line_start":529,"line_end":529,"column_start":34,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46548,"byte_end":46553,"line_start":535,"line_end":535,"column_start":32,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46755,"byte_end":46763,"line_start":544,"line_end":544,"column_start":10,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":46953,"byte_end":46961,"line_start":550,"line_end":550,"column_start":23,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47219,"byte_end":47227,"line_start":560,"line_end":560,"column_start":34,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47373,"byte_end":47381,"line_start":566,"line_end":566,"column_start":32,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47590,"byte_end":47598,"line_start":575,"line_end":575,"column_start":10,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":47781,"byte_end":47789,"line_start":581,"line_end":581,"column_start":23,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":48039,"byte_end":48047,"line_start":591,"line_end":591,"column_start":34,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":48448,"byte_end":48453,"line_start":607,"line_end":607,"column_start":23,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":48946,"byte_end":48951,"line_start":625,"line_end":625,"column_start":34,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":49546,"byte_end":49551,"line_start":647,"line_end":647,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1208},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":50271,"byte_end":50276,"line_start":671,"line_end":671,"column_start":34,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1208},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51200,"byte_end":51215,"line_start":701,"line_end":701,"column_start":6,"column_end":21},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51692,"byte_end":51707,"line_start":716,"line_end":716,"column_start":23,"column_end":38},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1217},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":51885,"byte_end":51900,"line_start":722,"line_end":722,"column_start":16,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1217},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":54315,"byte_end":54325,"line_start":789,"line_end":789,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":306},"to":{"krate":0,"index":314}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":56281,"byte_end":56289,"line_start":839,"line_end":839,"column_start":21,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":306}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":56846,"byte_end":56854,"line_start":859,"line_end":859,"column_start":24,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":314}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_str.rs","byte_start":62246,"byte_end":62250,"line_start":1016,"line_end":1016,"column_start":21,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":10199},"to":{"krate":0,"index":306}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":75918,"byte_end":75929,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86269,"byte_end":86280,"line_start":357,"line_end":357,"column_start":16,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86425,"byte_end":86436,"line_start":366,"line_end":366,"column_start":19,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":86574,"byte_end":86585,"line_start":373,"line_end":373,"column_start":25,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87365,"byte_end":87376,"line_start":407,"line_end":407,"column_start":27,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87482,"byte_end":87493,"line_start":414,"line_end":414,"column_start":30,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87615,"byte_end":87626,"line_start":421,"line_end":421,"column_start":31,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":87746,"byte_end":87757,"line_start":428,"line_end":428,"column_start":24,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2783}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88227,"byte_end":88238,"line_start":445,"line_end":445,"column_start":33,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88366,"byte_end":88377,"line_start":452,"line_end":452,"column_start":36,"column_end":47},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88510,"byte_end":88521,"line_start":459,"line_end":459,"column_start":23,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2783}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88673,"byte_end":88684,"line_start":466,"line_end":466,"column_start":37,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88800,"byte_end":88803,"line_start":472,"line_end":472,"column_start":28,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":544},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":88952,"byte_end":88955,"line_start":478,"line_end":478,"column_start":33,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":544},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89081,"byte_end":89092,"line_start":484,"line_end":484,"column_start":26,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89197,"byte_end":89208,"line_start":491,"line_end":491,"column_start":29,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89312,"byte_end":89323,"line_start":498,"line_end":498,"column_start":22,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89425,"byte_end":89436,"line_start":505,"line_end":505,"column_start":21,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89540,"byte_end":89551,"line_start":512,"line_end":512,"column_start":26,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2780}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89668,"byte_end":89679,"line_start":519,"line_end":519,"column_start":29,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2780}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89791,"byte_end":89802,"line_start":526,"line_end":526,"column_start":18,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":11449}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":89992,"byte_end":90003,"line_start":534,"line_end":534,"column_start":23,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":90146,"byte_end":90157,"line_start":541,"line_end":541,"column_start":21,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":90449,"byte_end":90460,"line_start":550,"line_end":550,"column_start":21,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":8917}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":90950,"byte_end":90961,"line_start":570,"line_end":570,"column_start":46,"column_end":57},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91162,"byte_end":91173,"line_start":578,"line_end":578,"column_start":40,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":7229}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91498,"byte_end":91509,"line_start":589,"line_end":589,"column_start":32,"column_end":43},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2947}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91703,"byte_end":91714,"line_start":599,"line_end":599,"column_start":38,"column_end":49},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":2978}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":91840,"byte_end":91851,"line_start":606,"line_end":606,"column_start":22,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":92074,"byte_end":92085,"line_start":618,"line_end":618,"column_start":25,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93023,"byte_end":93037,"line_start":648,"line_end":648,"column_start":9,"column_end":23},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93348,"byte_end":93362,"line_start":660,"line_end":660,"column_start":24,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93520,"byte_end":93534,"line_start":666,"line_end":666,"column_start":26,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":93692,"byte_end":93706,"line_start":672,"line_end":672,"column_start":24,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1276},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":94006,"byte_end":94011,"line_start":685,"line_end":685,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":94293,"byte_end":94296,"line_start":692,"line_end":692,"column_start":26,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":96316,"byte_end":96323,"line_start":762,"line_end":762,"column_start":26,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":1,"index":10181},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-1.0.0/src/ascii_string.rs","byte_start":98051,"byte_end":98054,"line_start":813,"line_end":813,"column_start":41,"column_end":44},"kind":{"Impl":{"id":102}},"from":{"krate":5,"index":544},"to":{"krate":0,"index":577}}]}