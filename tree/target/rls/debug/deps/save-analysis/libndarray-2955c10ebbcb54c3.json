{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0","program":"/home/sri/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ndarray","--edition=2018","/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2955c10ebbcb54c3","-C","extra-filename=-2955c10ebbcb54c3","--out-dir","/home/sri/Github/distributed-trees/tree/target/rls/debug/deps","-L","dependency=/home/sri/Github/distributed-trees/tree/target/rls/debug/deps","--extern","matrixmultiply=/home/sri/Github/distributed-trees/tree/target/rls/debug/deps/libmatrixmultiply-99534e3f029bb61e.rmeta","--extern","num_complex=/home/sri/Github/distributed-trees/tree/target/rls/debug/deps/libnum_complex-cb1d95073545a509.rmeta","--extern","num_integer=/home/sri/Github/distributed-trees/tree/target/rls/debug/deps/libnum_integer-900497ff53a9cf93.rmeta","--extern","num_traits=/home/sri/Github/distributed-trees/tree/target/rls/debug/deps/libnum_traits-cb9ca30fd09ddcf9.rmeta","--extern","rawpointer=/home/sri/Github/distributed-trees/tree/target/rls/debug/deps/librawpointer-c85f025642863ae2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/sri/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sri/Github/distributed-trees/tree/target/rls/debug/deps/libndarray-2955c10ebbcb54c3.rmeta"},"prelude":{"crate_id":{"name":"ndarray","disambiguator":[3031792967089639615,0]},"crate_root":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src","external_crates":[{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","num":19,"id":{"name":"rawpointer","disambiguator":[10695483590933176887,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/geomspace.rs","num":20,"id":{"name":"num_traits","disambiguator":[14542640838618957531,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/mod.rs","num":21,"id":{"name":"num_integer","disambiguator":[4154456067688648025,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","num":22,"id":{"name":"num_complex","disambiguator":[17678406632671228159,0]}},{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","num":23,"id":{"name":"matrixmultiply","disambiguator":[4126262549413684082,0]}}],"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":356,"byte_end":55601,"line_start":8,"line_end":1618,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5530,"byte_end":5531,"line_start":123,"line_end":123,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Dim","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5845},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5560,"byte_end":5564,"line_start":124,"line_end":124,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5846},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5560,"byte_end":5564,"line_start":124,"line_end":124,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5828},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5566,"byte_end":5581,"line_start":124,"line_end":124,"column_start":34,"column_end":49},"alias_span":null,"name":"AxisDescription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5829},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5566,"byte_end":5581,"line_start":124,"line_end":124,"column_start":34,"column_end":49},"alias_span":null,"name":"AxisDescription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2811},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5583,"byte_end":5592,"line_start":124,"line_end":124,"column_start":51,"column_end":60},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2626},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5594,"byte_end":5607,"line_start":124,"line_end":124,"column_start":62,"column_end":75},"alias_span":null,"name":"IntoDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5609,"byte_end":5619,"line_start":124,"line_end":124,"column_start":77,"column_end":87},"alias_span":null,"name":"RemoveAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6203},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5649,"byte_end":5658,"line_start":126,"line_end":126,"column_start":27,"column_end":36},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3123},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5686,"byte_end":5693,"line_start":127,"line_end":127,"column_start":27,"column_end":34},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4674},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5718,"byte_end":5727,"line_start":128,"line_end":128,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4670},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5729,"byte_end":5739,"line_start":128,"line_end":128,"column_start":35,"column_end":45},"alias_span":null,"name":"ShapeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5767,"byte_end":5774,"line_start":129,"line_end":129,"column_start":26,"column_end":33},"alias_span":null,"name":"indices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":956},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5776,"byte_end":5786,"line_start":129,"line_end":129,"column_start":35,"column_end":45},"alias_span":null,"name":"indices_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5100},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5812,"byte_end":5817,"line_start":130,"line_end":130,"column_start":24,"column_end":29},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5208},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5819,"byte_end":5828,"line_start":130,"line_end":130,"column_start":31,"column_end":40},"alias_span":null,"name":"SliceInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2125},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5830,"byte_end":5842,"line_start":130,"line_end":130,"column_start":42,"column_end":54},"alias_span":null,"name":"SliceNextDim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5119},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5844,"byte_end":5856,"line_start":130,"line_end":130,"column_start":56,"column_end":68},"alias_span":null,"name":"SliceOrIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6008,"byte_end":6015,"line_start":135,"line_end":135,"column_start":29,"column_end":36},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1893},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6048,"byte_end":6060,"line_start":136,"line_end":136,"column_start":32,"column_end":44},"alias_span":null,"name":"LinalgScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1896},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6062,"byte_end":6069,"line_start":136,"line_end":136,"column_start":46,"column_end":53},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2194},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6099,"byte_end":6110,"line_start":138,"line_end":138,"column_start":27,"column_end":38},"alias_span":null,"name":"concatenate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2191},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6112,"byte_end":6117,"line_start":138,"line_end":138,"column_start":40,"column_end":45},"alias_span":null,"name":"stack","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2199},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6119,"byte_end":6133,"line_start":138,"line_end":138,"column_start":47,"column_end":61},"alias_span":null,"name":"stack_new_axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4424},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6164,"byte_end":6175,"line_start":140,"line_end":140,"column_start":28,"column_end":39},"alias_span":null,"name":"IndexLonger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1994},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6207,"byte_end":6219,"line_start":141,"line_end":141,"column_start":31,"column_end":43},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6494,"byte_end":6504,"line_start":157,"line_end":157,"column_start":33,"column_end":43},"alias_span":null,"name":"AssignElem","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6563,"byte_end":6564,"line_start":161,"line_end":161,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Array4, Array1, ArcArray1, ArrayViewMut5, ArrayViewMut2, ArrayViewD, ArrayView4, ArrayView1, Array6, Array3, Array0, ArrayViewMutD, ArrayViewMut4, IxDyn, ArrayViewMut1, Ix5, Ix4, Ix3, Ix2, Ix1, Ix6, Array5, ArrayView0, Array2, ArrayView3, ArrayView6, ArcArray2, ArrayViewMut6, ArrayViewMut3, ArrayViewMut0, ArrayView5, ArrayView2, Ix0, ArrayD","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6622,"byte_end":6626,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":567},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6628,"byte_end":6637,"line_start":165,"line_end":165,"column_start":11,"column_end":20},"alias_span":null,"name":"DataClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6639,"byte_end":6646,"line_start":165,"line_end":165,"column_start":22,"column_end":29},"alias_span":null,"name":"DataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":659},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6648,"byte_end":6657,"line_start":165,"line_end":165,"column_start":31,"column_end":40},"alias_span":null,"name":"DataOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6659,"byte_end":6669,"line_start":165,"line_end":165,"column_start":42,"column_end":52},"alias_span":null,"name":"DataShared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6671,"byte_end":6678,"line_start":165,"line_end":165,"column_start":54,"column_end":61},"alias_span":null,"name":"RawData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6680,"byte_end":6692,"line_start":165,"line_end":165,"column_start":63,"column_end":75},"alias_span":null,"name":"RawDataClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6694,"byte_end":6704,"line_start":165,"line_end":165,"column_start":77,"column_end":87},"alias_span":null,"name":"RawDataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6710,"byte_end":6722,"line_start":166,"line_end":166,"column_start":5,"column_end":17},"alias_span":null,"name":"RawDataSubst","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6779,"byte_end":6780,"line_start":170,"line_end":170,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"arr0, arr2, aview0, aview2, aview1, arr1, aview_mut1","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":6808,"byte_end":6812,"line_start":171,"line_end":171,"column_start":27,"column_end":31},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198694,"byte_end":198698,"line_start":9,"line_end":9,"column_start":27,"column_end":31},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":4700},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198725,"byte_end":198732,"line_start":10,"line_end":10,"column_start":26,"column_end":33},"alias_span":null,"name":"Indices","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":4693},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198734,"byte_end":198745,"line_start":10,"line_end":10,"column_start":35,"column_end":46},"alias_span":null,"name":"IndicesIter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1734},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198780,"byte_end":198794,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"alias_span":null,"name":"AxisChunksIter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1751},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198796,"byte_end":198813,"line_start":12,"line_end":12,"column_start":21,"column_end":38},"alias_span":null,"name":"AxisChunksIterMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":4927},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198815,"byte_end":198823,"line_start":12,"line_end":12,"column_start":40,"column_end":48},"alias_span":null,"name":"AxisIter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198825,"byte_end":198836,"line_start":12,"line_end":12,"column_start":50,"column_end":61},"alias_span":null,"name":"AxisIterMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198838,"byte_end":198849,"line_start":12,"line_end":12,"column_start":63,"column_end":74},"alias_span":null,"name":"ExactChunks","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1056},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198851,"byte_end":198866,"line_start":12,"line_end":12,"column_start":76,"column_end":91},"alias_span":null,"name":"ExactChunksIter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198872,"byte_end":198890,"line_start":13,"line_end":13,"column_start":5,"column_end":23},"alias_span":null,"name":"ExactChunksIterMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1063},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198892,"byte_end":198906,"line_start":13,"line_end":13,"column_start":25,"column_end":39},"alias_span":null,"name":"ExactChunksMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":4894},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198908,"byte_end":198919,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":4895},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198908,"byte_end":198919,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198921,"byte_end":198935,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1433},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198921,"byte_end":198935,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1405},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198937,"byte_end":198941,"line_start":13,"line_end":13,"column_start":70,"column_end":74},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1416},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198943,"byte_end":198950,"line_start":13,"line_end":13,"column_start":76,"column_end":83},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1171},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198952,"byte_end":198957,"line_start":13,"line_end":13,"column_start":85,"column_end":90},"alias_span":null,"name":"Lanes","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1576},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198963,"byte_end":198972,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"alias_span":null,"name":"LanesIter","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1597},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198974,"byte_end":198986,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"alias_span":null,"name":"LanesIterMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198988,"byte_end":198996,"line_start":14,"line_end":14,"column_start":30,"column_end":38},"alias_span":null,"name":"LanesMut","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198998,"byte_end":199005,"line_start":14,"line_end":14,"column_start":40,"column_end":47},"alias_span":null,"name":"Windows","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":5817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/mod.rs","byte_start":303848,"byte_end":303852,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":2483}},{"kind":"Use","ref_id":{"krate":0,"index":6203},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/mod.rs","byte_start":304031,"byte_end":304040,"line_start":18,"line_end":18,"column_start":29,"column_end":38},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":2483}},{"kind":"Use","ref_id":{"krate":0,"index":3123},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/mod.rs","byte_start":304065,"byte_end":304072,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":2483}},{"kind":"Use","ref_id":{"krate":0,"index":5801},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7105,"byte_end":7114,"line_start":194,"line_end":194,"column_start":22,"column_end":31},"alias_span":null,"name":"FoldWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2266},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7116,"byte_end":7130,"line_start":194,"line_end":194,"column_start":33,"column_end":47},"alias_span":null,"name":"IntoNdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2277},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7132,"byte_end":7142,"line_start":194,"line_end":194,"column_start":49,"column_end":59},"alias_span":null,"name":"NdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5312},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7144,"byte_end":7147,"line_start":194,"line_end":194,"column_start":61,"column_end":64},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5094},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7174,"byte_end":7180,"line_start":196,"line_end":196,"column_start":24,"column_end":30},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3495},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393680,"byte_end":393688,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"alias_span":null,"name":"ArcArray","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":3498},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393690,"byte_end":393695,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":3488},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393697,"byte_end":393706,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"alias_span":null,"name":"ArrayBase","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":3505},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393708,"byte_end":393717,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"alias_span":null,"name":"ArrayView","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":3509},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393719,"byte_end":393731,"line_start":22,"line_end":22,"column_start":44,"column_end":56},"alias_span":null,"name":"ArrayViewMut","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":3501},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393733,"byte_end":393741,"line_start":22,"line_end":22,"column_start":58,"column_end":66},"alias_span":null,"name":"CowArray","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":3513},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393743,"byte_end":393755,"line_start":22,"line_end":22,"column_start":68,"column_end":80},"alias_span":null,"name":"RawArrayView","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":3516},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393757,"byte_end":393772,"line_start":22,"line_end":22,"column_start":82,"column_end":97},"alias_span":null,"name":"RawArrayViewMut","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":5845},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393812,"byte_end":393816,"line_start":26,"line_end":26,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":5846},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393812,"byte_end":393816,"line_start":26,"line_end":26,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":6042},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393818,"byte_end":393821,"line_start":26,"line_end":26,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2672},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393818,"byte_end":393821,"line_start":26,"line_end":26,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2811},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393823,"byte_end":393832,"line_start":26,"line_end":26,"column_start":28,"column_end":37},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393870,"byte_end":393876,"line_start":29,"line_end":29,"column_start":17,"column_end":23},"alias_span":null,"name":"Array0","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393878,"byte_end":393884,"line_start":29,"line_end":29,"column_start":25,"column_end":31},"alias_span":null,"name":"Array1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393886,"byte_end":393892,"line_start":29,"line_end":29,"column_start":33,"column_end":39},"alias_span":null,"name":"Array2","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393894,"byte_end":393900,"line_start":29,"line_end":29,"column_start":41,"column_end":47},"alias_span":null,"name":"Array3","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393902,"byte_end":393908,"line_start":29,"line_end":29,"column_start":49,"column_end":55},"alias_span":null,"name":"Array4","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393910,"byte_end":393916,"line_start":29,"line_end":29,"column_start":57,"column_end":63},"alias_span":null,"name":"Array5","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393918,"byte_end":393924,"line_start":29,"line_end":29,"column_start":65,"column_end":71},"alias_span":null,"name":"Array6","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393926,"byte_end":393932,"line_start":29,"line_end":29,"column_start":73,"column_end":79},"alias_span":null,"name":"ArrayD","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393975,"byte_end":393985,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"alias_span":null,"name":"ArrayView0","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393987,"byte_end":393997,"line_start":33,"line_end":33,"column_start":17,"column_end":27},"alias_span":null,"name":"ArrayView1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393999,"byte_end":394009,"line_start":33,"line_end":33,"column_start":29,"column_end":39},"alias_span":null,"name":"ArrayView2","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394011,"byte_end":394021,"line_start":33,"line_end":33,"column_start":41,"column_end":51},"alias_span":null,"name":"ArrayView3","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394023,"byte_end":394033,"line_start":33,"line_end":33,"column_start":53,"column_end":63},"alias_span":null,"name":"ArrayView4","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394035,"byte_end":394045,"line_start":33,"line_end":33,"column_start":65,"column_end":75},"alias_span":null,"name":"ArrayView5","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394047,"byte_end":394057,"line_start":33,"line_end":33,"column_start":77,"column_end":87},"alias_span":null,"name":"ArrayView6","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394059,"byte_end":394069,"line_start":33,"line_end":33,"column_start":89,"column_end":99},"alias_span":null,"name":"ArrayViewD","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394114,"byte_end":394127,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut0","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394129,"byte_end":394142,"line_start":38,"line_end":38,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMut1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394144,"byte_end":394157,"line_start":38,"line_end":38,"column_start":35,"column_end":48},"alias_span":null,"name":"ArrayViewMut2","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394159,"byte_end":394172,"line_start":38,"line_end":38,"column_start":50,"column_end":63},"alias_span":null,"name":"ArrayViewMut3","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394174,"byte_end":394187,"line_start":38,"line_end":38,"column_start":65,"column_end":78},"alias_span":null,"name":"ArrayViewMut4","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394189,"byte_end":394202,"line_start":38,"line_end":38,"column_start":80,"column_end":93},"alias_span":null,"name":"ArrayViewMut5","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394208,"byte_end":394221,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut6","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394223,"byte_end":394236,"line_start":39,"line_end":39,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMutD","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":149},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394276,"byte_end":394279,"line_start":43,"line_end":43,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394276,"byte_end":394279,"line_start":43,"line_end":43,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394281,"byte_end":394284,"line_start":43,"line_end":43,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394281,"byte_end":394284,"line_start":43,"line_end":43,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394286,"byte_end":394289,"line_start":43,"line_end":43,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394286,"byte_end":394289,"line_start":43,"line_end":43,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394291,"byte_end":394294,"line_start":43,"line_end":43,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394291,"byte_end":394294,"line_start":43,"line_end":43,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394296,"byte_end":394299,"line_start":43,"line_end":43,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394296,"byte_end":394299,"line_start":43,"line_end":43,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394301,"byte_end":394304,"line_start":43,"line_end":43,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394301,"byte_end":394304,"line_start":43,"line_end":43,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394306,"byte_end":394309,"line_start":43,"line_end":43,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394306,"byte_end":394309,"line_start":43,"line_end":43,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394311,"byte_end":394316,"line_start":43,"line_end":43,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":148},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394311,"byte_end":394316,"line_start":43,"line_end":43,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394354,"byte_end":394358,"line_start":46,"line_end":46,"column_start":17,"column_end":21},"alias_span":null,"name":"arr0","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":819},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394360,"byte_end":394364,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"alias_span":null,"name":"arr1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394366,"byte_end":394370,"line_start":46,"line_end":46,"column_start":29,"column_end":33},"alias_span":null,"name":"arr2","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":823},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394372,"byte_end":394378,"line_start":46,"line_end":46,"column_start":35,"column_end":41},"alias_span":null,"name":"aview0","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394380,"byte_end":394386,"line_start":46,"line_end":46,"column_start":43,"column_end":49},"alias_span":null,"name":"aview1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":827},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394388,"byte_end":394394,"line_start":46,"line_end":46,"column_start":51,"column_end":57},"alias_span":null,"name":"aview2","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394396,"byte_end":394406,"line_start":46,"line_end":46,"column_start":59,"column_end":69},"alias_span":null,"name":"aview_mut1","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":816},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394426,"byte_end":394431,"line_start":48,"line_end":48,"column_start":17,"column_end":22},"alias_span":null,"name":"array","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2209},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394433,"byte_end":394437,"line_start":48,"line_end":48,"column_start":24,"column_end":28},"alias_span":null,"name":"azip","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2131},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394439,"byte_end":394440,"line_start":48,"line_end":48,"column_start":30,"column_end":31},"alias_span":null,"name":"s","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":1994},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394477,"byte_end":394489,"line_start":51,"line_end":51,"column_start":16,"column_end":28},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394526,"byte_end":394533,"line_start":54,"line_end":54,"column_start":17,"column_end":24},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":1896},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":394535,"byte_end":394542,"line_start":54,"line_end":54,"column_start":26,"column_end":33},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":4560},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49964,"byte_end":49973,"line_start":1392,"line_end":1392,"column_start":20,"column_end":29},"alias_span":null,"name":"OwnedRepr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4201},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/mod.rs","byte_start":515964,"byte_end":515979,"line_start":11,"line_end":11,"column_start":28,"column_end":43},"alias_span":null,"name":"general_mat_mul","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4206},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/mod.rs","byte_start":516008,"byte_end":516027,"line_start":12,"line_end":12,"column_start":28,"column_end":47},"alias_span":null,"name":"general_mat_vec_mul","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4152},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/mod.rs","byte_start":516056,"byte_end":516059,"line_start":13,"line_end":13,"column_start":28,"column_end":31},"alias_span":null,"name":"Dot","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4223},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":54910,"byte_end":54923,"line_start":1587,"line_end":1587,"column_start":26,"column_end":39},"alias_span":null,"name":"ScalarOperand","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":356,"byte_end":55601,"line_start":8,"line_end":1618,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":113},{"krate":0,"index":118},{"krate":0,"index":232},{"krate":0,"index":242},{"krate":0,"index":328},{"krate":0,"index":486},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":729},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":893},{"krate":0,"index":902},{"krate":0,"index":925},{"krate":0,"index":1004},{"krate":0,"index":1819},{"krate":0,"index":1847},{"krate":0,"index":1899},{"krate":0,"index":1923},{"krate":0,"index":1947},{"krate":0,"index":1963},{"krate":0,"index":1980},{"krate":0,"index":2027},{"krate":0,"index":2159},{"krate":0,"index":2179},{"krate":0,"index":2207},{"krate":0,"index":2483},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3308},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3495},{"krate":0,"index":3498},{"krate":0,"index":3501},{"krate":0,"index":3505},{"krate":0,"index":3509},{"krate":0,"index":3513},{"krate":0,"index":3516},{"krate":0,"index":3519},{"krate":0,"index":6324},{"krate":0,"index":6328},{"krate":0,"index":3522},{"krate":0,"index":6331},{"krate":0,"index":6334},{"krate":0,"index":6336},{"krate":0,"index":3525},{"krate":0,"index":6339},{"krate":0,"index":6342},{"krate":0,"index":6344},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3540},{"krate":0,"index":3545},{"krate":0,"index":3558},{"krate":0,"index":3660},{"krate":0,"index":3983},{"krate":0,"index":3992},{"krate":0,"index":4014},{"krate":0,"index":4032},{"krate":0,"index":4038},{"krate":0,"index":4052},{"krate":0,"index":4059},{"krate":0,"index":4118},{"krate":0,"index":4219},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4472},{"krate":0,"index":4524},{"krate":0,"index":8381},{"krate":0,"index":8385},{"krate":0,"index":8387},{"krate":0,"index":8390},{"krate":0,"index":8393},{"krate":0,"index":8398},{"krate":0,"index":8400},{"krate":0,"index":8403},{"krate":0,"index":4542}],"decl_id":null,"docs":" The `ndarray` crate provides an *n*-dimensional container for general elements\n and for numerics.","sig":null,"attributes":[{"value":"crate_name = \"ndarray\"","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":356,"byte_end":382,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"allow(clippy :: many_single_char_names, clippy :: deref_addrof, clippy ::\n        unreadable_literal,)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":440,"byte_end":546,"line_start":10,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ The `ndarray` crate provides an *n*-dimensional container for general elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":548,"byte_end":630,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ and for numerics.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":631,"byte_end":652,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":653,"byte_end":656,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":657,"byte_end":733,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":734,"byte_end":813,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element in the array is accessed by using that many indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":814,"byte_end":898,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ Each dimension is also called an *axis*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":899,"byte_end":943,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":944,"byte_end":947,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - **[`ArrayBase`](struct.ArrayBase.html)**:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":948,"byte_end":995,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/   The *n*-dimensional array type itself.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":996,"byte_end":1044,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/   It is used to implement both the owned arrays and the views; see its docs","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1045,"byte_end":1124,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/   for an overview of all array features.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1125,"byte_end":1173,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ - The main specific array type is **[`Array`](type.Array.html)**, which owns","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1174,"byte_end":1254,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ its elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1255,"byte_end":1272,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1273,"byte_end":1276,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Highlights","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1277,"byte_end":1294,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1295,"byte_end":1298,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - Generic *n*-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1299,"byte_end":1334,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/ - Slicing, also with arbitrary step size, and negative indices to mean","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1335,"byte_end":1409,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/   elements from the end of the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1410,"byte_end":1450,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ - Views and subviews of arrays; iterators that yield subviews.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1451,"byte_end":1517,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/ - Higher order operations and arithmetic are performant","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1518,"byte_end":1577,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ - Array views can be used to slice and mutate any `[T]` data using","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1578,"byte_end":1648,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/   `ArrayView::from` and `ArrayViewMut::from`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1649,"byte_end":1698,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ - [`Zip`](struct.Zip.html) for lock step function application across two or more arrays or other","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1699,"byte_end":1799,"line_start":40,"line_end":40,"column_start":1,"column_end":101}},{"value":"/   item producers ([`NdProducer`](trait.NdProducer.html) trait).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1800,"byte_end":1867,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1868,"byte_end":1871,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Crate Status","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1872,"byte_end":1891,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1892,"byte_end":1895,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - Still iterating on and evolving the crate","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1896,"byte_end":1943,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/   + The crate is continuously developing, and breaking changes are expected","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":1944,"byte_end":2023,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/     during evolution from version to version. We adopt the newest stable","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2024,"byte_end":2100,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/     rust features if we need them.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2101,"byte_end":2139,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/   + Note that functions/methods/traits/etc. hidden from the docs are not","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2140,"byte_end":2216,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/     considered part of the public API, so changes to them are not","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2217,"byte_end":2286,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/     considered breaking changes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2287,"byte_end":2323,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ - Performance:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2324,"byte_end":2342,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/   + Prefer higher order methods and arithmetic operations on arrays first,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2343,"byte_end":2421,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/     then iteration, and as a last priority using indexed algorithms.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2422,"byte_end":2494,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"/   + The higher order functions like [`.map()`](ArrayBase::map),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2495,"byte_end":2562,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/     [`.map_inplace()`](ArrayBase::map_inplace), [`.zip_mut_with()`](ArrayBase::zip_mut_with),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2563,"byte_end":2660,"line_start":56,"line_end":56,"column_start":1,"column_end":98}},{"value":"/     [`Zip`] and [`azip!()`](azip) are the most efficient ways","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2661,"byte_end":2726,"line_start":57,"line_end":57,"column_start":1,"column_end":66}},{"value":"/     to perform single traversal and lock step traversal respectively.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2727,"byte_end":2800,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/   + Performance of an operation depends on the memory layout of the array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2801,"byte_end":2878,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/     or array view. Especially if it's a binary operation, which","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2879,"byte_end":2946,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/     needs matching memory layout to be efficient (with some exceptions).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":2947,"byte_end":3023,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/   + Efficient floating point matrix multiplication even for very large","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3024,"byte_end":3098,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/     matrices; can optionally use BLAS to improve it further.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3099,"byte_end":3163,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ - **Requires Rust 1.42 or later**","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3164,"byte_end":3201,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3202,"byte_end":3205,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3206,"byte_end":3232,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3233,"byte_end":3236,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available. They are configured in your","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3237,"byte_end":3317,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3318,"byte_end":3335,"line_start":69,"line_end":69,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3336,"byte_end":3339,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3340,"byte_end":3353,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/   - Optional, compatible with Rust stable","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3354,"byte_end":3399,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/   - Enables serialization support for serde 1.x","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3400,"byte_end":3451,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ - `rayon`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3452,"byte_end":3465,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/   - Optional, compatible with Rust stable","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3466,"byte_end":3511,"line_start":75,"line_end":75,"column_start":1,"column_end":46}},{"value":"/   - Enables parallel iterators, parallelized methods and [`par_azip!`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3512,"byte_end":3587,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ - `approx`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3588,"byte_end":3602,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/   - Optional, compatible with Rust stable","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3603,"byte_end":3648,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/   - Enables implementations of traits from the [`approx`] crate.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3649,"byte_end":3717,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ - `blas`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3718,"byte_end":3730,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/   - Optional and experimental, compatible with Rust stable","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3731,"byte_end":3793,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/   - Enable transparent BLAS support for matrix multiplication.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3794,"byte_end":3860,"line_start":82,"line_end":82,"column_start":1,"column_end":67}},{"value":"/     Uses ``blas-src`` for pluggable backend, which needs to be configured","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3861,"byte_end":3938,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/     separately.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3939,"byte_end":3958,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3959,"byte_end":3962,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3963,"byte_end":3983,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3984,"byte_end":3987,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * The docs for [`ArrayBase`](struct.ArrayBase.html) provide an overview of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":3988,"byte_end":4066,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/   the *n*-dimensional array type. Other good pages to look at are the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4067,"byte_end":4140,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/   documentation for the [`s![]`](macro.s.html) and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4141,"byte_end":4195,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/   [`azip!()`](macro.azip.html) macros.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4196,"byte_end":4238,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4239,"byte_end":4242,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ * If you have experience with NumPy, you may also be interested in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4243,"byte_end":4313,"line_start":93,"line_end":93,"column_start":1,"column_end":71}},{"value":"/   [`ndarray_for_numpy_users`](doc/ndarray_for_numpy_users/index.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4314,"byte_end":4388,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4389,"byte_end":4392,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ## The ndarray ecosystem","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4393,"byte_end":4421,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4422,"byte_end":4425,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ `ndarray` provides a lot of functionality, but it's not a one-stop solution.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4426,"byte_end":4506,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4507,"byte_end":4510,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ `ndarray` includes matrix multiplication and other binary/unary operations out of the box.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4511,"byte_end":4605,"line_start":100,"line_end":100,"column_start":1,"column_end":95}},{"value":"/ More advanced linear algebra routines (e.g. SVD decomposition or eigenvalue computation)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4606,"byte_end":4698,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ can be found in [`ndarray-linalg`](https://crates.io/crates/ndarray-linalg).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4699,"byte_end":4779,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4780,"byte_end":4783,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The same holds for statistics: `ndarray` provides some basic functionalities (e.g. `mean`)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4784,"byte_end":4878,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/ but more advanced routines can be found in [`ndarray-stats`](https://crates.io/crates/ndarray-stats).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4879,"byte_end":4984,"line_start":105,"line_end":105,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4985,"byte_end":4988,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ If you are looking to generate random arrays instead, check out [`ndarray-rand`](https://crates.io/crates/ndarray-rand).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":4989,"byte_end":5113,"line_start":107,"line_end":107,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5114,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ For conversion between `ndarray`, [`nalgebra`](https://crates.io/crates/nalgebra) and ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5118,"byte_end":5208,"line_start":109,"line_end":109,"column_start":1,"column_end":91}},{"value":"/ [`image`](https://crates.io/crates/image) check out [`nshare`](https://crates.io/crates/nshare).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":5209,"byte_end":5309,"line_start":110,"line_end":110,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/private.rs","byte_start":58039,"byte_end":58052,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/private.rs","byte_start":57907,"byte_end":57972,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/private.rs","byte_start":57973,"byte_end":58027,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58740,"byte_end":58743,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"Ix0","qualname":"::aliases::Ix0","value":"pub fn Ix0() -> Ix0","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58654,"byte_end":58689,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58690,"byte_end":58714,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58715,"byte_end":58732,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":142},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58859,"byte_end":58862,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"Ix1","qualname":"::aliases::Ix1","value":"pub fn Ix1(Ix) -> Ix1","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58774,"byte_end":58808,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58809,"byte_end":58833,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58834,"byte_end":58851,"line_start":16,"line_end":16,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58986,"byte_end":58989,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"Ix2","qualname":"::aliases::Ix2","value":"pub fn Ix2(Ix, Ix) -> Ix2","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a two-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58901,"byte_end":58935,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58936,"byte_end":58960,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":58961,"byte_end":58978,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59127,"byte_end":59130,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"Ix3","qualname":"::aliases::Ix3","value":"pub fn Ix3(Ix, Ix, Ix) -> Ix3","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59040,"byte_end":59076,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59077,"byte_end":59101,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59102,"byte_end":59119,"line_start":28,"line_end":28,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":145},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59279,"byte_end":59282,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"Ix4","qualname":"::aliases::Ix4","value":"pub fn Ix4(Ix, Ix, Ix, Ix) -> Ix4","parent":null,"children":[],"decl_id":null,"docs":" Create a four-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a four-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59193,"byte_end":59228,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59229,"byte_end":59253,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59254,"byte_end":59271,"line_start":34,"line_end":34,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59443,"byte_end":59446,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"Ix5","qualname":"::aliases::Ix5","value":"pub fn Ix5(Ix, Ix, Ix, Ix, Ix) -> Ix5","parent":null,"children":[],"decl_id":null,"docs":" Create a five-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a five-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59357,"byte_end":59392,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59393,"byte_end":59417,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59418,"byte_end":59435,"line_start":40,"line_end":40,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59618,"byte_end":59621,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"Ix6","qualname":"::aliases::Ix6","value":"pub fn Ix6(Ix, Ix, Ix, Ix, Ix, Ix) -> Ix6","parent":null,"children":[],"decl_id":null,"docs":" Create a six-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a six-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59533,"byte_end":59567,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59568,"byte_end":59592,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59593,"byte_end":59610,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59810,"byte_end":59815,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"pub fn IxDyn(&[Ix]) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a dynamic-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a dynamic-dimensional index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59721,"byte_end":59759,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59760,"byte_end":59784,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59785,"byte_end":59802,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":149},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59884,"byte_end":59887,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"Ix0","qualname":"::aliases::Ix0","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensionial\n","sig":null,"attributes":[{"value":"/ zero-dimensionial","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59853,"byte_end":59874,"line_start":58,"line_end":58,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":151},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59933,"byte_end":59936,"line_start":61,"line_end":61,"column_start":10,"column_end":13},"name":"Ix1","qualname":"::aliases::Ix1","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional\n","sig":null,"attributes":[{"value":"/ one-dimensional","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59904,"byte_end":59923,"line_start":60,"line_end":60,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":153},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59982,"byte_end":59985,"line_start":63,"line_end":63,"column_start":10,"column_end":13},"name":"Ix2","qualname":"::aliases::Ix2","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional\n","sig":null,"attributes":[{"value":"/ two-dimensional","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":59953,"byte_end":59972,"line_start":62,"line_end":62,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":155},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60033,"byte_end":60036,"line_start":65,"line_end":65,"column_start":10,"column_end":13},"name":"Ix3","qualname":"::aliases::Ix3","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional\n","sig":null,"attributes":[{"value":"/ three-dimensional","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60002,"byte_end":60023,"line_start":64,"line_end":64,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":157},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60083,"byte_end":60086,"line_start":67,"line_end":67,"column_start":10,"column_end":13},"name":"Ix4","qualname":"::aliases::Ix4","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional\n","sig":null,"attributes":[{"value":"/ four-dimensional","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60053,"byte_end":60073,"line_start":66,"line_end":66,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60133,"byte_end":60136,"line_start":69,"line_end":69,"column_start":10,"column_end":13},"name":"Ix5","qualname":"::aliases::Ix5","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional\n","sig":null,"attributes":[{"value":"/ five-dimensional","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60103,"byte_end":60123,"line_start":68,"line_end":68,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60182,"byte_end":60185,"line_start":71,"line_end":71,"column_start":10,"column_end":13},"name":"Ix6","qualname":"::aliases::Ix6","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional\n","sig":null,"attributes":[{"value":"/ six-dimensional","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60153,"byte_end":60172,"line_start":70,"line_end":70,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":163},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61254,"byte_end":61259,"line_start":100,"line_end":100,"column_start":10,"column_end":15},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"Dim<IxDynImpl>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional","sig":null,"attributes":[{"value":"/ dynamic-dimensional","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60202,"byte_end":60225,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60226,"byte_end":60229,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ You can use the `IxDyn` function to create a dimension for an array with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60230,"byte_end":60306,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ dynamic number of dimensions.  (`Vec<usize>` and `&[usize]` also implement","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60307,"byte_end":60385,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ `IntoDimension` to produce `IxDyn`).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60386,"byte_end":60426,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60427,"byte_end":60430,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60431,"byte_end":60438,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use ndarray::ArrayD;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60439,"byte_end":60463,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ use ndarray::IxDyn;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60464,"byte_end":60487,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60488,"byte_end":60491,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Create a 5 × 6 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60492,"byte_end":60563,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ let mut a = ArrayD::<f64>::zeros(IxDyn(&[5, 6, 3, 4]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60564,"byte_end":60623,"line_start":83,"line_end":83,"column_start":1,"column_end":60}},{"value":"/ // Create a 1 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60624,"byte_end":60690,"line_start":84,"line_end":84,"column_start":1,"column_end":65}},{"value":"/ let mut b = ArrayD::<f64>::zeros(IxDyn(&[1, 3, 4]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60691,"byte_end":60747,"line_start":85,"line_end":85,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60748,"byte_end":60751,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // We can use broadcasting to add arrays of compatible shapes together:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60752,"byte_end":60827,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ a += &b;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60828,"byte_end":60840,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60841,"byte_end":60844,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // We can index into a, b using fixed size arrays:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60845,"byte_end":60899,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/ a[[0, 0, 0, 0]] = 0.;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60900,"byte_end":60925,"line_start":91,"line_end":91,"column_start":1,"column_end":26}},{"value":"/ b[[0, 2, 3]] = a[[0, 0, 2, 3]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60926,"byte_end":60961,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/ // Note: indexing will panic at runtime if the number of indices given does","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":60962,"byte_end":61041,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ // not match the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61042,"byte_end":61069,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61070,"byte_end":61073,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ // We can keep them in the same vector because both the arrays have","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61074,"byte_end":61145,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/ // the same type `Array<f64, IxDyn>` a.k.a `ArrayD<f64>`:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61146,"byte_end":61207,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/ let arrays = vec![a, b];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61208,"byte_end":61236,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61237,"byte_end":61244,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":164},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61315,"byte_end":61321,"line_start":103,"line_end":103,"column_start":10,"column_end":16},"name":"Array0","qualname":"::aliases::Array0","value":"Array<A, Ix0>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array\n","sig":null,"attributes":[{"value":"/ zero-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61279,"byte_end":61305,"line_start":102,"line_end":102,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":166},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61377,"byte_end":61383,"line_start":105,"line_end":105,"column_start":10,"column_end":16},"name":"Array1","qualname":"::aliases::Array1","value":"Array<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array\n","sig":null,"attributes":[{"value":"/ one-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61342,"byte_end":61367,"line_start":104,"line_end":104,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":168},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61439,"byte_end":61445,"line_start":107,"line_end":107,"column_start":10,"column_end":16},"name":"Array2","qualname":"::aliases::Array2","value":"Array<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array\n","sig":null,"attributes":[{"value":"/ two-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61404,"byte_end":61429,"line_start":106,"line_end":106,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":170},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61503,"byte_end":61509,"line_start":109,"line_end":109,"column_start":10,"column_end":16},"name":"Array3","qualname":"::aliases::Array3","value":"Array<A, Ix3>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array\n","sig":null,"attributes":[{"value":"/ three-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61466,"byte_end":61493,"line_start":108,"line_end":108,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":172},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61566,"byte_end":61572,"line_start":111,"line_end":111,"column_start":10,"column_end":16},"name":"Array4","qualname":"::aliases::Array4","value":"Array<A, Ix4>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array\n","sig":null,"attributes":[{"value":"/ four-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61530,"byte_end":61556,"line_start":110,"line_end":110,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":174},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61629,"byte_end":61635,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"Array5","qualname":"::aliases::Array5","value":"Array<A, Ix5>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array\n","sig":null,"attributes":[{"value":"/ five-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61593,"byte_end":61619,"line_start":112,"line_end":112,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61691,"byte_end":61697,"line_start":115,"line_end":115,"column_start":10,"column_end":16},"name":"Array6","qualname":"::aliases::Array6","value":"Array<A, Ix6>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array\n","sig":null,"attributes":[{"value":"/ six-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61656,"byte_end":61681,"line_start":114,"line_end":114,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61757,"byte_end":61763,"line_start":117,"line_end":117,"column_start":10,"column_end":16},"name":"ArrayD","qualname":"::aliases::ArrayD","value":"Array<A, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61718,"byte_end":61747,"line_start":116,"line_end":116,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61828,"byte_end":61838,"line_start":120,"line_end":120,"column_start":10,"column_end":20},"name":"ArrayView0","qualname":"::aliases::ArrayView0","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61787,"byte_end":61818,"line_start":119,"line_end":119,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":183},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61911,"byte_end":61921,"line_start":122,"line_end":122,"column_start":10,"column_end":20},"name":"ArrayView1","qualname":"::aliases::ArrayView1","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array view\n","sig":null,"attributes":[{"value":"/ one-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61871,"byte_end":61901,"line_start":121,"line_end":121,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61994,"byte_end":62004,"line_start":124,"line_end":124,"column_start":10,"column_end":20},"name":"ArrayView2","qualname":"::aliases::ArrayView2","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array view\n","sig":null,"attributes":[{"value":"/ two-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":61954,"byte_end":61984,"line_start":123,"line_end":123,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62079,"byte_end":62089,"line_start":126,"line_end":126,"column_start":10,"column_end":20},"name":"ArrayView3","qualname":"::aliases::ArrayView3","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array view\n","sig":null,"attributes":[{"value":"/ three-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62037,"byte_end":62069,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62163,"byte_end":62173,"line_start":128,"line_end":128,"column_start":10,"column_end":20},"name":"ArrayView4","qualname":"::aliases::ArrayView4","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array view\n","sig":null,"attributes":[{"value":"/ four-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62122,"byte_end":62153,"line_start":127,"line_end":127,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62247,"byte_end":62257,"line_start":130,"line_end":130,"column_start":10,"column_end":20},"name":"ArrayView5","qualname":"::aliases::ArrayView5","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array view\n","sig":null,"attributes":[{"value":"/ five-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62206,"byte_end":62237,"line_start":129,"line_end":129,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":198},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62330,"byte_end":62340,"line_start":132,"line_end":132,"column_start":10,"column_end":20},"name":"ArrayView6","qualname":"::aliases::ArrayView6","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array view\n","sig":null,"attributes":[{"value":"/ six-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62290,"byte_end":62320,"line_start":131,"line_end":131,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":201},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62417,"byte_end":62427,"line_start":134,"line_end":134,"column_start":10,"column_end":20},"name":"ArrayViewD","qualname":"::aliases::ArrayViewD","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62373,"byte_end":62407,"line_start":133,"line_end":133,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":204},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62515,"byte_end":62528,"line_start":137,"line_end":137,"column_start":10,"column_end":23},"name":"ArrayViewMut0","qualname":"::aliases::ArrayViewMut0","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62463,"byte_end":62505,"line_start":136,"line_end":136,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":207},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62615,"byte_end":62628,"line_start":139,"line_end":139,"column_start":10,"column_end":23},"name":"ArrayViewMut1","qualname":"::aliases::ArrayViewMut1","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ one-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62564,"byte_end":62605,"line_start":138,"line_end":138,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":210},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62715,"byte_end":62728,"line_start":141,"line_end":141,"column_start":10,"column_end":23},"name":"ArrayViewMut2","qualname":"::aliases::ArrayViewMut2","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ two-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62664,"byte_end":62705,"line_start":140,"line_end":140,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":213},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62817,"byte_end":62830,"line_start":143,"line_end":143,"column_start":10,"column_end":23},"name":"ArrayViewMut3","qualname":"::aliases::ArrayViewMut3","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ three-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62764,"byte_end":62807,"line_start":142,"line_end":142,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":216},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62918,"byte_end":62931,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"ArrayViewMut4","qualname":"::aliases::ArrayViewMut4","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ four-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62866,"byte_end":62908,"line_start":144,"line_end":144,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":219},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63019,"byte_end":63032,"line_start":147,"line_end":147,"column_start":10,"column_end":23},"name":"ArrayViewMut5","qualname":"::aliases::ArrayViewMut5","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ five-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":62967,"byte_end":63009,"line_start":146,"line_end":146,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":222},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63119,"byte_end":63132,"line_start":149,"line_end":149,"column_start":10,"column_end":23},"name":"ArrayViewMut6","qualname":"::aliases::ArrayViewMut6","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ six-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63068,"byte_end":63109,"line_start":148,"line_end":148,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63223,"byte_end":63236,"line_start":151,"line_end":151,"column_start":10,"column_end":23},"name":"ArrayViewMutD","qualname":"::aliases::ArrayViewMutD","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional read-write array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63168,"byte_end":63213,"line_start":150,"line_end":150,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":228},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63327,"byte_end":63336,"line_start":154,"line_end":154,"column_start":10,"column_end":19},"name":"ArcArray1","qualname":"::aliases::ArcArray1","value":"ArcArray<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ one-dimensional shared ownership array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63275,"byte_end":63317,"line_start":153,"line_end":153,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":230},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63412,"byte_end":63421,"line_start":156,"line_end":156,"column_start":10,"column_end":19},"name":"ArcArray2","qualname":"::aliases::ArcArray2","value":"ArcArray<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ two-dimensional shared ownership array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/aliases.rs","byte_start":63360,"byte_end":63402,"line_start":155,"line_end":155,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99266,"byte_end":99273,"line_start":357,"line_end":357,"column_start":11,"column_end":18},"name":"AsArray","qualname":"::arraytraits::AsArray","value":"AsArray<'a, A: 'a, D = Ix1>: Into<ArrayView>","parent":null,"children":[],"decl_id":null,"docs":" Argument conversion into an array view","sig":null,"attributes":[{"value":"/ Argument conversion into an array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98784,"byte_end":98826,"line_start":336,"line_end":336,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98827,"byte_end":98830,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ The trait is parameterized over `A`, the element type, and `D`, the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98831,"byte_end":98902,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/ dimensionality of the array. `D` defaults to one-dimensional.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98903,"byte_end":98968,"line_start":339,"line_end":339,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98969,"byte_end":98972,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ Use `.into()` to do the conversion.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98973,"byte_end":99012,"line_start":341,"line_end":341,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99013,"byte_end":99016,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99017,"byte_end":99024,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/ use ndarray::AsArray;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99025,"byte_end":99050,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99051,"byte_end":99054,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ fn sum<'a, V: AsArray<'a, f64>>(data: V) -> f64 {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99055,"byte_end":99108,"line_start":346,"line_end":346,"column_start":1,"column_end":54}},{"value":"/     let array_view = data.into();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99109,"byte_end":99146,"line_start":347,"line_end":347,"column_start":1,"column_end":38}},{"value":"/     array_view.sum()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99147,"byte_end":99171,"line_start":348,"line_end":348,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99172,"byte_end":99177,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99178,"byte_end":99181,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99182,"byte_end":99197,"line_start":351,"line_end":351,"column_start":1,"column_end":16}},{"value":"/     sum(&[1., 2., 3.]),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99198,"byte_end":99225,"line_start":352,"line_end":352,"column_start":1,"column_end":28}},{"value":"/     6.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99226,"byte_end":99236,"line_start":353,"line_end":353,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99237,"byte_end":99243,"line_start":354,"line_end":354,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99244,"byte_end":99247,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99248,"byte_end":99255,"line_start":356,"line_end":356,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":493},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/argument_traits.rs","byte_start":100431,"byte_end":100441,"line_start":6,"line_end":6,"column_start":11,"column_end":21},"name":"AssignElem","qualname":"::argument_traits::AssignElem","value":"AssignElem<T>","parent":null,"children":[{"krate":0,"index":495}],"decl_id":null,"docs":" A producer element that can be assigned to once\n","sig":null,"attributes":[{"value":"/ A producer element that can be assigned to once","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/argument_traits.rs","byte_start":100369,"byte_end":100420,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/argument_traits.rs","byte_start":100524,"byte_end":100535,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"assign_elem","qualname":"::argument_traits::AssignElem::assign_elem","value":"pub fn assign_elem(Self, T)","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Assign the value `input` to the element that self represents.\n","sig":null,"attributes":[{"value":"/ Assign the value `input` to the element that self represents.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/argument_traits.rs","byte_start":100451,"byte_end":100516,"line_start":7,"line_end":7,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":550},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102204,"byte_end":102211,"line_start":29,"line_end":29,"column_start":18,"column_end":25},"name":"RawData","qualname":"::data_traits::RawData","value":"RawData: Sized","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":4552}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":101756,"byte_end":101787,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":101788,"byte_end":101791,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ For an array that meets the invariants of the `ArrayBase` type. This trait","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":101792,"byte_end":101870,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ does not imply any ownership or lifetime; pointers to elements in the array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":101871,"byte_end":101950,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ may not be safe to dereference.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":101951,"byte_end":101986,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":101987,"byte_end":101990,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ***Note:*** `RawData` is not an extension interface at this point.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":101991,"byte_end":102061,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ Traits in Rust can serve many different roles. This trait is public because","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102062,"byte_end":102141,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ it is used as a bound on public methods.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102142,"byte_end":102186,"line_start":28,"line_end":28,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":551},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102262,"byte_end":102266,"line_start":31,"line_end":31,"column_start":10,"column_end":14},"name":"Elem","qualname":"::data_traits::RawData::Elem","value":"type Elem;","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" The array element type.\n","sig":null,"attributes":[{"value":"/ The array element type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102225,"byte_end":102252,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102341,"byte_end":102352,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"_data_slice","qualname":"::data_traits::RawData::_data_slice","value":"pub fn _data_slice(&Self) -> Option<&[Self::Elem]>","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":553},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102550,"byte_end":102560,"line_start":45,"line_end":45,"column_start":18,"column_end":28},"name":"RawDataMut","qualname":"::data_traits::RawDataMut","value":"RawDataMut: RawData","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":556}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102411,"byte_end":102442,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102443,"byte_end":102446,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102447,"byte_end":102487,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102488,"byte_end":102491,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102492,"byte_end":102532,"line_start":44,"line_end":44,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102813,"byte_end":102830,"line_start":51,"line_end":51,"column_start":8,"column_end":25},"name":"try_ensure_unique","qualname":"::data_traits::RawDataMut::try_ensure_unique","value":"pub fn try_ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":" If possible, ensures that the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, ensures that the array has unique access to its data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102576,"byte_end":102646,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102651,"byte_end":102654,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102659,"byte_end":102728,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ **must** panic or ensure that the data is unique.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102733,"byte_end":102786,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103137,"byte_end":103150,"line_start":61,"line_end":61,"column_start":8,"column_end":21},"name":"try_is_unique","qualname":"::data_traits::RawDataMut::try_is_unique","value":"pub fn try_is_unique(&mut Self) -> Option<bool>","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":" If possible, returns whether the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, returns whether the array has unique access to its data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102920,"byte_end":102993,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102998,"byte_end":103001,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103006,"byte_end":103075,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ **must** return `Some(_)`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103080,"byte_end":103110,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":557},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103328,"byte_end":103340,"line_start":69,"line_end":69,"column_start":18,"column_end":30},"name":"RawDataClone","qualname":"::data_traits::RawDataClone","value":"RawDataClone: RawData","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103182,"byte_end":103213,"line_start":64,"line_end":64,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103214,"byte_end":103217,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ An array representation that can be cloned.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103218,"byte_end":103265,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103266,"byte_end":103269,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103270,"byte_end":103310,"line_start":68,"line_end":68,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103454,"byte_end":103468,"line_start":72,"line_end":72,"column_start":15,"column_end":29},"name":"clone_with_ptr","qualname":"::data_traits::RawDataClone::clone_with_ptr","value":"pub unsafe fn clone_with_ptr(&Self, NonNull<Self::Elem>)\n-> (Self, NonNull<Self::Elem>)","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Unsafe because, `ptr` must point inside the current storage.\n","sig":null,"attributes":[{"value":"/ Unsafe because, `ptr` must point inside the current storage.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103375,"byte_end":103439,"line_start":71,"line_end":71,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103568,"byte_end":103587,"line_start":75,"line_end":75,"column_start":15,"column_end":34},"name":"clone_from_with_ptr","qualname":"::data_traits::RawDataClone::clone_from_with_ptr","value":"pub unsafe fn clone_from_with_ptr(&mut Self, &Self, NonNull<Self::Elem>)\n-> NonNull<Self::Elem>","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":560},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103957,"byte_end":103961,"line_start":91,"line_end":91,"column_start":18,"column_end":22},"name":"Data","qualname":"::data_traits::Data","value":"Data: RawData","parent":null,"children":[{"krate":0,"index":561}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103791,"byte_end":103822,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103823,"byte_end":103826,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ For an array with elements that can be accessed with safe code.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103827,"byte_end":103894,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103895,"byte_end":103898,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103899,"byte_end":103939,"line_start":90,"line_end":90,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104084,"byte_end":104094,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::data_traits::Data::into_owned","value":"pub fn into_owned<D>(ArrayBase<Self, D>)\n-> ArrayBase<OwnedRepr<Self::Elem>, D> where Self::Elem: Clone, D: Dimension","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Converts the array to a uniquely owned array, cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Converts the array to a uniquely owned array, cloning elements if necessary.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103977,"byte_end":104057,"line_start":92,"line_end":92,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104676,"byte_end":104683,"line_start":112,"line_end":112,"column_start":18,"column_end":25},"name":"DataMut","qualname":"::data_traits::DataMut","value":"DataMut: Data + RawDataMut","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":566}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104226,"byte_end":104257,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104258,"byte_end":104261,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements that can be accessed with safe code.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104262,"byte_end":104338,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104339,"byte_end":104342,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104343,"byte_end":104380,"line_start":104,"line_end":104,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104807,"byte_end":104820,"line_start":116,"line_end":116,"column_start":8,"column_end":21},"name":"ensure_unique","qualname":"::data_traits::DataMut::ensure_unique","value":"pub fn ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Ensures that the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Ensures that the array has unique access to its data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104709,"byte_end":104766,"line_start":113,"line_end":113,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104790,"byte_end":104799,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105066,"byte_end":105075,"line_start":127,"line_end":127,"column_start":8,"column_end":17},"name":"is_unique","qualname":"::data_traits::DataMut::is_unique","value":"pub fn is_unique(&mut Self) -> bool","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Returns whether the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Returns whether the array has unique access to its data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104965,"byte_end":105025,"line_start":124,"line_end":124,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105049,"byte_end":105058,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":567},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105410,"byte_end":105419,"line_start":139,"line_end":139,"column_start":11,"column_end":20},"name":"DataClone","qualname":"::data_traits::DataClone","value":"DataClone: Data + RawDataClone","parent":null,"children":[],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105144,"byte_end":105175,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105176,"byte_end":105179,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ An array representation that can be cloned and allows elements to be","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105180,"byte_end":105252,"line_start":134,"line_end":134,"column_start":1,"column_end":73}},{"value":"/ accessed with safe code.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105253,"byte_end":105281,"line_start":135,"line_end":135,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105282,"byte_end":105285,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105286,"byte_end":105323,"line_start":137,"line_end":137,"column_start":1,"column_end":38}},{"value":"deprecated(note = \"use `Data + RawDataClone` instead\", since = \"0.13.0\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105324,"byte_end":105399,"line_start":138,"line_end":138,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":659},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111601,"byte_end":111610,"line_start":393,"line_end":393,"column_start":18,"column_end":27},"name":"DataOwned","qualname":"::data_traits::DataOwned","value":"DataOwned: Data","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111439,"byte_end":111470,"line_start":388,"line_end":388,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111471,"byte_end":111474,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ A representation that is a unique or shared owner of its data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111475,"byte_end":111541,"line_start":390,"line_end":390,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111542,"byte_end":111545,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111546,"byte_end":111583,"line_start":392,"line_end":392,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111645,"byte_end":111648,"line_start":395,"line_end":395,"column_start":8,"column_end":11},"name":"new","qualname":"::data_traits::DataOwned::new","value":"pub fn new(Vec<Self::Elem>) -> Self","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111826,"byte_end":111837,"line_start":400,"line_end":400,"column_start":8,"column_end":19},"name":"into_shared","qualname":"::data_traits::DataOwned::into_shared","value":"pub fn into_shared(Self) -> OwnedArcRepr<Self::Elem>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Converts the data representation to a shared (copy on write)\n representation, without any copying.\n","sig":null,"attributes":[{"value":"/ Converts the data representation to a shared (copy on write)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111690,"byte_end":111754,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/ representation, without any copying.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111759,"byte_end":111799,"line_start":398,"line_end":398,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":662},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112020,"byte_end":112030,"line_start":408,"line_end":408,"column_start":18,"column_end":28},"name":"DataShared","qualname":"::data_traits::DataShared","value":"DataShared: Clone + Data + RawDataClone","parent":null,"children":[],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111876,"byte_end":111907,"line_start":403,"line_end":403,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111908,"byte_end":111911,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ A representation that is a lightweight view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111912,"byte_end":111960,"line_start":405,"line_end":405,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111961,"byte_end":111964,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111965,"byte_end":112002,"line_start":407,"line_end":407,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":700},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115679,"byte_end":115691,"line_start":538,"line_end":538,"column_start":11,"column_end":23},"name":"RawDataSubst","qualname":"::data_traits::RawDataSubst","value":"RawDataSubst<A>: RawData","parent":null,"children":[{"krate":0,"index":702}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115432,"byte_end":115463,"line_start":532,"line_end":532,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115464,"byte_end":115467,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ The RawDataSubst trait maps the element type of array storage, while","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115468,"byte_end":115540,"line_start":534,"line_end":534,"column_start":1,"column_end":73}},{"value":"/ keeping the same kind of storage.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115541,"byte_end":115578,"line_start":535,"line_end":535,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115579,"byte_end":115582,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ For example, `RawDataSubst<B>` can map the type `OwnedRepr<A>` to `OwnedRepr<B>`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115583,"byte_end":115668,"line_start":537,"line_end":537,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":702},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115797,"byte_end":115803,"line_start":540,"line_end":540,"column_start":10,"column_end":16},"name":"Output","qualname":"::data_traits::RawDataSubst::Output","value":"type Output: RawData<Elem = A>;","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The resulting array storage of the same kind but substituted element type\n","sig":null,"attributes":[{"value":"/ The resulting array storage of the same kind but substituted element type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115710,"byte_end":115787,"line_start":539,"line_end":539,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4560},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":116733,"byte_end":116742,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"OwnedRepr","qualname":"::data_repr::OwnedRepr","value":"OwnedRepr {  }","parent":null,"children":[{"krate":0,"index":4562},{"krate":0,"index":4563},{"krate":0,"index":4564}],"decl_id":null,"docs":" Array's representation.","sig":null,"attributes":[{"value":"/ Array's representation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":116509,"byte_end":116536,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":116537,"byte_end":116540,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":116541,"byte_end":116597,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/ [`Array`](type.Array.html) for the array type!*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":116598,"byte_end":116649,"line_start":11,"line_end":11,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":120817,"byte_end":120821,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"arr0","qualname":"::free_functions::arr0","value":"pub fn arr0<A>(A) -> Array0<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array with the element `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array with the element `x`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":120752,"byte_end":120809,"line_start":50,"line_end":50,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":819},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":120980,"byte_end":120984,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"arr1","qualname":"::free_functions::arr1","value":"pub fn arr1<A: Clone>(&[A]) -> Array1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":120913,"byte_end":120972,"line_start":55,"line_end":55,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":821},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121123,"byte_end":121129,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"rcarr1","qualname":"::free_functions::rcarr1","value":"pub fn rcarr1<A: Clone>(&[A]) -> ArcArray1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121056,"byte_end":121115,"line_start":60,"line_end":60,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":823},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121261,"byte_end":121267,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"aview0","qualname":"::free_functions::aview0","value":"pub fn aview0<A>(&A) -> ArrayView0<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array view borrowing `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array view borrowing `x`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121198,"byte_end":121253,"line_start":65,"line_end":65,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":825},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121660,"byte_end":121666,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"aview1","qualname":"::free_functions::aview1","value":"pub fn aview1<A>(&[A]) -> ArrayView1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121355,"byte_end":121424,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121425,"byte_end":121428,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121429,"byte_end":121436,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview1;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121437,"byte_end":121461,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121462,"byte_end":121465,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let data = [1.0; 1024];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121466,"byte_end":121493,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121494,"byte_end":121497,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // Create a 2D array view from borrowed data","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121498,"byte_end":121546,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/ let a2d = aview1(&data).into_shape((32, 32)).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121547,"byte_end":121605,"line_start":78,"line_end":78,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121606,"byte_end":121609,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a2d.sum(), 1024.0);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121610,"byte_end":121644,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121645,"byte_end":121652,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":827},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121935,"byte_end":121941,"line_start":90,"line_end":90,"column_start":8,"column_end":14},"name":"aview2","qualname":"::free_functions::aview2","value":"pub fn aview2<A, V: FixedInitializer<Elem = A>>(&[V]) -> ArrayView2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121730,"byte_end":121799,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121800,"byte_end":121803,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121804,"byte_end":121883,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":121884,"byte_end":121927,"line_start":89,"line_end":89,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123258,"byte_end":123268,"line_start":122,"line_end":122,"column_start":8,"column_end":18},"name":"aview_mut1","qualname":"::free_functions::aview_mut1","value":"pub fn aview_mut1<A>(&mut [A]) -> ArrayViewMut1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":122824,"byte_end":122904,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":122905,"byte_end":122908,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":122909,"byte_end":122916,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{aview_mut1, s};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":122917,"byte_end":122950,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/ // Create an array view over some data, then slice it and modify it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":122951,"byte_end":123023,"line_start":114,"line_end":114,"column_start":1,"column_end":73}},{"value":"/ let mut data = [0; 1024];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123024,"byte_end":123053,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123054,"byte_end":123059,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/     let mut a = aview_mut1(&mut data).into_shape((32, 32)).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123060,"byte_end":123132,"line_start":117,"line_end":117,"column_start":1,"column_end":73}},{"value":"/     a.slice_mut(s![.., ..;3]).fill(5);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123133,"byte_end":123175,"line_start":118,"line_end":118,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123176,"byte_end":123181,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(&data[..10], [5, 0, 0, 5, 0, 0, 5, 0, 0, 5]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123182,"byte_end":123242,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123243,"byte_end":123250,"line_start":121,"line_end":121,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":832},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":124131,"byte_end":124141,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"aview_mut2","qualname":"::free_functions::aview_mut2","value":"pub fn aview_mut2<A, V: FixedInitializer<Elem = A>>(&mut [V])\n-> ArrayViewMut2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123342,"byte_end":123422,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123423,"byte_end":123426,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123427,"byte_end":123506,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123507,"byte_end":123550,"line_start":129,"line_end":129,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123551,"byte_end":123554,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123555,"byte_end":123568,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123569,"byte_end":123572,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123573,"byte_end":123580,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview_mut2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123581,"byte_end":123609,"line_start":134,"line_end":134,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123610,"byte_end":123613,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ // The inner (nested) array must be of length 1 to 16, but the outer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123614,"byte_end":123686,"line_start":136,"line_end":136,"column_start":1,"column_end":73}},{"value":"/ // can be of any length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123687,"byte_end":123715,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/ let mut data = [[0.; 2]; 128];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123716,"byte_end":123750,"line_start":138,"line_end":138,"column_start":1,"column_end":35}},{"value":"/ {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123751,"byte_end":123756,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/     // Make a 128 x 2 mut array view then turn it into 2 x 128","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123757,"byte_end":123823,"line_start":140,"line_end":140,"column_start":1,"column_end":67}},{"value":"/     let mut a = aview_mut2(&mut data).reversed_axes();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123824,"byte_end":123882,"line_start":141,"line_end":141,"column_start":1,"column_end":59}},{"value":"/     // Make the first row ones and second row minus ones.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123883,"byte_end":123944,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/     a.row_mut(0).fill(1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123945,"byte_end":123975,"line_start":143,"line_end":143,"column_start":1,"column_end":31}},{"value":"/     a.row_mut(1).fill(-1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":123976,"byte_end":124007,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":124008,"byte_end":124013,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/ // look at the start of the result","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":124014,"byte_end":124052,"line_start":146,"line_end":146,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(&data[..3], [[1., -1.], [1., -1.], [1., -1.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":124053,"byte_end":124115,"line_start":147,"line_end":147,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":124116,"byte_end":124123,"line_start":148,"line_end":148,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":835},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":125112,"byte_end":125128,"line_start":170,"line_end":170,"column_start":18,"column_end":34},"name":"FixedInitializer","qualname":"::free_functions::FixedInitializer","value":"FixedInitializer","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838}],"decl_id":null,"docs":" Fixed-size array used for array initialization\n","sig":null,"attributes":[{"value":"/ Fixed-size array used for array initialization","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":125044,"byte_end":125094,"line_start":169,"line_end":169,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":836},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":125140,"byte_end":125144,"line_start":171,"line_end":171,"column_start":10,"column_end":14},"name":"Elem","qualname":"::free_functions::FixedInitializer::Elem","value":"type Elem;","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":125153,"byte_end":125166,"line_start":172,"line_end":172,"column_start":8,"column_end":21},"name":"as_init_slice","qualname":"::free_functions::FixedInitializer::as_init_slice","value":"pub fn as_init_slice(&Self) -> &[Self::Elem]","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":125199,"byte_end":125202,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"len","qualname":"::free_functions::FixedInitializer::len","value":"pub fn len() -> usize","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":840},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126262,"byte_end":126266,"line_start":210,"line_end":210,"column_start":8,"column_end":12},"name":"arr2","qualname":"::free_functions::arr2","value":"pub fn arr2<A: Clone, V: FixedInitializer<Elem = A>>(&[V]) -> Array2<A> where\nV: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126038,"byte_end":126097,"line_start":199,"line_end":199,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126098,"byte_end":126101,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126102,"byte_end":126109,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126110,"byte_end":126132,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126133,"byte_end":126136,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1, 2, 3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126137,"byte_end":126166,"line_start":204,"line_end":204,"column_start":1,"column_end":30}},{"value":"/                [4, 5, 6]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126167,"byte_end":126198,"line_start":205,"line_end":205,"column_start":1,"column_end":32}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126199,"byte_end":126211,"line_start":206,"line_end":206,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [2, 3]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126212,"byte_end":126239,"line_start":207,"line_end":207,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126240,"byte_end":126246,"line_start":208,"line_end":208,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126247,"byte_end":126254,"line_start":209,"line_end":209,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":128779,"byte_end":128785,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"rcarr2","qualname":"::free_functions::rcarr2","value":"pub fn rcarr2<A: Clone, V: Clone + FixedInitializer<Elem = A>>(&[V])\n-> ArcArray2<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":128708,"byte_end":128767,"line_start":278,"line_end":278,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":128768,"byte_end":128771,"line_start":279,"line_end":279,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":855},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129298,"byte_end":129302,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"arr3","qualname":"::free_functions::arr3","value":"pub fn arr3<A: Clone, V: FixedInitializer<Elem = U>, U: FixedInitializer<Elem\n            = A>>(&[V]) -> Array3<A> where V: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":128893,"byte_end":128954,"line_start":284,"line_end":284,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":128955,"byte_end":128958,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the slices are not all of the same length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":128959,"byte_end":129019,"line_start":286,"line_end":286,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129020,"byte_end":129023,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129024,"byte_end":129031,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129032,"byte_end":129054,"line_start":289,"line_end":289,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129055,"byte_end":129058,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[1, 2],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129059,"byte_end":129086,"line_start":291,"line_end":291,"column_start":1,"column_end":28}},{"value":"/                 [3, 4]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129087,"byte_end":129115,"line_start":292,"line_end":292,"column_start":1,"column_end":29}},{"value":"/                [[5, 6],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129116,"byte_end":129143,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"/                 [7, 8]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129144,"byte_end":129172,"line_start":294,"line_end":294,"column_start":1,"column_end":29}},{"value":"/                [[9, 0],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129173,"byte_end":129200,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/                 [1, 2]]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129201,"byte_end":129231,"line_start":296,"line_end":296,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129232,"byte_end":129244,"line_start":297,"line_end":297,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [3, 2, 2]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129245,"byte_end":129275,"line_start":298,"line_end":298,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129276,"byte_end":129282,"line_start":299,"line_end":299,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129283,"byte_end":129290,"line_start":300,"line_end":300,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129543,"byte_end":129549,"line_start":312,"line_end":312,"column_start":8,"column_end":14},"name":"rcarr3","qualname":"::free_functions::rcarr3","value":"pub fn rcarr3<A: Clone, V: FixedInitializer<Elem = U>,\n              U: FixedInitializer<Elem = A>>(&[V]) -> ArcArray<A, Ix3> where\nV: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":129474,"byte_end":129535,"line_start":311,"line_end":311,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4670},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130216,"byte_end":130226,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"ShapeError","qualname":"::error::ShapeError","value":"ShapeError {  }","parent":null,"children":[{"krate":0,"index":4671}],"decl_id":null,"docs":" An error related to array shape or layout.\n","sig":null,"attributes":[{"value":"/ An error related to array shape or layout.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130141,"byte_end":130187,"line_start":12,"line_end":12,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130404,"byte_end":130408,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"kind","qualname":"<ShapeError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the `ErrorKind` of this error.\n","sig":null,"attributes":[{"value":"/ Return the `ErrorKind` of this error.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130337,"byte_end":130378,"line_start":20,"line_end":20,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130383,"byte_end":130392,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130501,"byte_end":130510,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ShapeError>::from_kind","value":"pub fn from_kind(ErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ShapeError`\n","sig":null,"attributes":[{"value":"/ Create a new `ShapeError`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130460,"byte_end":130489,"line_start":26,"line_end":26,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4675},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130833,"byte_end":130850,"line_start":40,"line_end":40,"column_start":5,"column_end":22},"name":"IncompatibleShape","qualname":"::error::ErrorKind::IncompatibleShape","value":"ErrorKind::IncompatibleShape","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" incompatible shape\n","sig":null,"attributes":[{"value":"/ incompatible shape","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130806,"byte_end":130828,"line_start":39,"line_end":39,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4678},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130895,"byte_end":130913,"line_start":42,"line_end":42,"column_start":5,"column_end":23},"name":"IncompatibleLayout","qualname":"::error::ErrorKind::IncompatibleLayout","value":"ErrorKind::IncompatibleLayout","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" incompatible memory layout\n","sig":null,"attributes":[{"value":"/ incompatible memory layout","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130860,"byte_end":130890,"line_start":41,"line_end":41,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4680},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130969,"byte_end":130981,"line_start":44,"line_end":44,"column_start":5,"column_end":17},"name":"RangeLimited","qualname":"::error::ErrorKind::RangeLimited","value":"ErrorKind::RangeLimited","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" the shape does not fit inside type limits\n","sig":null,"attributes":[{"value":"/ the shape does not fit inside type limits","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130919,"byte_end":130964,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4682},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131018,"byte_end":131029,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::error::ErrorKind::OutOfBounds","value":"ErrorKind::OutOfBounds","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" out of bounds indexing\n","sig":null,"attributes":[{"value":"/ out of bounds indexing","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130987,"byte_end":131013,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4684},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131067,"byte_end":131078,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ErrorKind::Unsupported","value":"ErrorKind::Unsupported","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" aliasing array elements\n","sig":null,"attributes":[{"value":"/ aliasing array elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131035,"byte_end":131062,"line_start":47,"line_end":47,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4686},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131137,"byte_end":131145,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::error::ErrorKind::Overflow","value":"ErrorKind::Overflow","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" overflow when computing offset, length, etc.\n","sig":null,"attributes":[{"value":"/ overflow when computing offset, length, etc.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131084,"byte_end":131132,"line_start":49,"line_end":49,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":4674},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130790,"byte_end":130799,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    IncompatibleShape = ,\n    IncompatibleLayout,\n    RangeLimited,\n    OutOfBounds,\n    Unsupported,\n    Overflow,\n}","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4678},{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4686}],"decl_id":null,"docs":" Error code for an error related to array shape or layout.","sig":null,"attributes":[{"value":"/ Error code for an error related to array shape or layout.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130573,"byte_end":130634,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130635,"byte_end":130638,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This enumeration is not exhaustive. The representation of the enum","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130639,"byte_end":130709,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ is not guaranteed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130710,"byte_end":130732,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130733,"byte_end":130750,"line_start":36,"line_end":36,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4693},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139168,"byte_end":139179,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"IndicesIter","qualname":"::indexes::IndicesIter","value":"IndicesIter {  }","parent":null,"children":[{"krate":0,"index":4695},{"krate":0,"index":4696}],"decl_id":null,"docs":" An iterator over the indexes of an array shape.","sig":null,"attributes":[{"value":"/ An iterator over the indexes of an array shape.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139050,"byte_end":139101,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139102,"byte_end":139105,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `D`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139106,"byte_end":139139,"line_start":19,"line_end":19,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":954},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139399,"byte_end":139406,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"indices","qualname":"::indexes::indices","value":"pub fn indices<E>(E) -> Indices<E::Dim> where E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create an iterable of the array shape `shape`.","sig":null,"attributes":[{"value":"/ Create an iterable of the array shape `shape`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139222,"byte_end":139272,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139273,"byte_end":139276,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139277,"byte_end":139343,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139344,"byte_end":139391,"line_start":29,"line_end":29,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":956},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139773,"byte_end":139783,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"indices_of","qualname":"::indexes::indices_of","value":"pub fn indices_of<S, D>(&ArrayBase<S, D>) -> Indices<D> where S: Data,\nD: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Return an iterable of the indices of the passed-in array.","sig":null,"attributes":[{"value":"/ Return an iterable of the indices of the passed-in array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139585,"byte_end":139646,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139647,"byte_end":139650,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139651,"byte_end":139717,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139718,"byte_end":139765,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4700},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":142110,"byte_end":142117,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"Indices","qualname":"::indexes::Indices","value":"Indices {  }","parent":null,"children":[{"krate":0,"index":4702},{"krate":0,"index":4703}],"decl_id":null,"docs":" Indices producer and iterable.","sig":null,"attributes":[{"value":"/ Indices producer and iterable.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":141952,"byte_end":141986,"line_start":130,"line_end":130,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":141987,"byte_end":141990,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ `Indices` is an `NdProducer` that produces the indices of an array shape.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":141991,"byte_end":142068,"line_start":132,"line_end":132,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4712},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":142217,"byte_end":142225,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"IndexPtr","qualname":"::indexes::IndexPtr","value":"IndexPtr {  }","parent":null,"children":[{"krate":0,"index":4714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":193648,"byte_end":193659,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"ExactChunks","qualname":"::iterators::chunks::ExactChunks","value":"ExactChunks {  }","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":193474,"byte_end":193513,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":193514,"byte_end":193517,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":193518,"byte_end":193600,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":193601,"byte_end":193617,"line_start":32,"line_end":32,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195165,"byte_end":195180,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"ExactChunksIter","qualname":"::iterators::chunks::ExactChunksIter","value":"ExactChunksIter {  }","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195023,"byte_end":195049,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195050,"byte_end":195053,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195054,"byte_end":195136,"line_start":91,"line_end":91,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195137,"byte_end":195153,"line_start":92,"line_end":92,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1063},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195888,"byte_end":195902,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"ExactChunksMut","qualname":"::iterators::chunks::ExactChunksMut","value":"ExactChunksMut {  }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195706,"byte_end":195745,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195746,"byte_end":195749,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195750,"byte_end":195831,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":195832,"byte_end":195857,"line_start":122,"line_end":122,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":198355,"byte_end":198373,"line_start":227,"line_end":227,"column_start":12,"column_end":30},"name":"ExactChunksIterMut","qualname":"::iterators::chunks::ExactChunksIterMut","value":"ExactChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":198205,"byte_end":198231,"line_start":223,"line_end":223,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":198232,"byte_end":198235,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":198236,"byte_end":198317,"line_start":225,"line_end":225,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":198318,"byte_end":198343,"line_start":226,"line_end":226,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1090},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iterators::iter","value":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150}],"decl_id":null,"docs":" Producers, iterables and iterators.","sig":null,"attributes":[{"value":"/ Producers, iterables and iterators.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198462,"byte_end":198501,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198502,"byte_end":198505,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module collects all concrete producer, iterable and iterator","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198506,"byte_end":198575,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ implementation structs.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198576,"byte_end":198603,"line_start":4,"line_end":4,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198604,"byte_end":198607,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198608,"byte_end":198611,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See also [`NdProducer`](../trait.NdProducer.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/iter.rs","byte_start":198612,"byte_end":198666,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1171},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":199625,"byte_end":199630,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Lanes","qualname":"::iterators::lanes::Lanes","value":"Lanes {  }","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177}],"decl_id":null,"docs":" See [`.lanes()`](../struct.ArrayBase.html#method.lanes)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":199528,"byte_end":199587,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":199588,"byte_end":199613,"line_start":27,"line_end":27,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":201277,"byte_end":201285,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"LanesMut","qualname":"::iterators::lanes::LanesMut","value":"LanesMut {  }","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197}],"decl_id":null,"docs":" See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":201172,"byte_end":201239,"line_start":95,"line_end":95,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":201240,"byte_end":201265,"line_start":96,"line_end":96,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":202734,"byte_end":202741,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Windows","qualname":"::iterators::windows::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"decl_id":null,"docs":" Window producer and iterable","sig":null,"attributes":[{"value":"/ Window producer and iterable","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":202596,"byte_end":202628,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":202629,"byte_end":202632,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":202633,"byte_end":202705,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":202706,"byte_end":202722,"line_start":10,"line_end":10,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":204833,"byte_end":204844,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"WindowsIter","qualname":"::iterators::windows::WindowsIter","value":"WindowsIter {  }","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251}],"decl_id":null,"docs":" Window iterator.","sig":null,"attributes":[{"value":"/ Window iterator.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":204707,"byte_end":204727,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":204728,"byte_end":204731,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":204732,"byte_end":204804,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":204805,"byte_end":204821,"line_start":90,"line_end":90,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1405},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155864,"byte_end":155868,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iterators::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1409}],"decl_id":null,"docs":" An iterator over the elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155680,"byte_end":155726,"line_start":311,"line_end":311,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155727,"byte_end":155730,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a A`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155731,"byte_end":155768,"line_start":313,"line_end":313,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155769,"byte_end":155772,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ See [`.iter()`](../struct.ArrayBase.html#method.iter) for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155773,"byte_end":155852,"line_start":315,"line_end":315,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1416},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156284,"byte_end":156291,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iterators::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1420}],"decl_id":null,"docs":" An iterator over the elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array (mutable).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156078,"byte_end":156134,"line_start":326,"line_end":326,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156135,"byte_end":156138,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a mut A`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156139,"byte_end":156180,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156181,"byte_end":156184,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ See [`.iter_mut()`](../struct.ArrayBase.html#method.iter_mut) for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156185,"byte_end":156272,"line_start":330,"line_end":330,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":4894},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156984,"byte_end":156995,"line_start":356,"line_end":356,"column_start":12,"column_end":23},"name":"IndexedIter","qualname":"::iterators::IndexedIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156797,"byte_end":156855,"line_start":352,"line_end":352,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156856,"byte_end":156859,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter()`](../struct.ArrayBase.html#method.indexed_iter) for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156860,"byte_end":156955,"line_start":354,"line_end":354,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157219,"byte_end":157233,"line_start":360,"line_end":360,"column_start":12,"column_end":26},"name":"IndexedIterMut","qualname":"::iterators::IndexedIterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array (mutable).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157031,"byte_end":157099,"line_start":357,"line_end":357,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157100,"byte_end":157103,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter_mut()`](../struct.ArrayBase.html#method.indexed_iter_mut) for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157104,"byte_end":157207,"line_start":359,"line_end":359,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1576},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":165065,"byte_end":165074,"line_start":682,"line_end":682,"column_start":12,"column_end":21},"name":"LanesIter","qualname":"::iterators::LanesIter","value":"LanesIter {  }","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583}],"decl_id":null,"docs":" An iterator that traverses over all axes but one, and yields a view for\n each lane along that axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over all axes but one, and yields a view for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164861,"byte_end":164936,"line_start":678,"line_end":678,"column_start":1,"column_end":76}},{"value":"/ each lane along that axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164937,"byte_end":164967,"line_start":679,"line_end":679,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164968,"byte_end":164971,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes) for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164972,"byte_end":165053,"line_start":681,"line_end":681,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1597},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166292,"byte_end":166304,"line_start":734,"line_end":734,"column_start":12,"column_end":24},"name":"LanesIterMut","qualname":"::iterators::LanesIterMut","value":"LanesIterMut {  }","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604}],"decl_id":null,"docs":" An iterator that traverses over all dimensions but the innermost,\n and yields each inner row (mutable).","sig":null,"attributes":[{"value":"/ An iterator that traverses over all dimensions but the innermost,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166072,"byte_end":166141,"line_start":729,"line_end":729,"column_start":1,"column_end":70}},{"value":"/ and yields each inner row (mutable).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166142,"byte_end":166182,"line_start":730,"line_end":730,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166183,"byte_end":166186,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166187,"byte_end":166254,"line_start":732,"line_end":732,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166255,"byte_end":166280,"line_start":733,"line_end":733,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4927},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171596,"byte_end":171604,"line_start":931,"line_end":931,"column_start":12,"column_end":20},"name":"AxisIter","qualname":"::iterators::AxisIter","value":"AxisIter {  }","parent":null,"children":[{"krate":0,"index":4931},{"krate":0,"index":4932}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview.","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":170976,"byte_end":171023,"line_start":916,"line_end":916,"column_start":1,"column_end":48}},{"value":"/ and yields each subview.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171024,"byte_end":171052,"line_start":917,"line_end":917,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171053,"byte_end":171056,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171057,"byte_end":171128,"line_start":919,"line_end":919,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171129,"byte_end":171194,"line_start":920,"line_end":920,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171195,"byte_end":171198,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171199,"byte_end":171271,"line_start":922,"line_end":922,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171272,"byte_end":171344,"line_start":923,"line_end":923,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171345,"byte_end":171348,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171349,"byte_end":171400,"line_start":925,"line_end":925,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171401,"byte_end":171404,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter()`](../struct.ArrayBase.html#method.outer_iter)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171405,"byte_end":171474,"line_start":927,"line_end":927,"column_start":1,"column_end":70}},{"value":"/ or [`.axis_iter()`](../struct.ArrayBase.html#method.axis_iter)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171475,"byte_end":171541,"line_start":928,"line_end":928,"column_start":1,"column_end":67}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171542,"byte_end":171567,"line_start":929,"line_end":929,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172469,"byte_end":172477,"line_start":965,"line_end":965,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIter>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172154,"byte_end":172222,"line_start":958,"line_end":958,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172227,"byte_end":172230,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172235,"byte_end":172309,"line_start":960,"line_end":960,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172314,"byte_end":172353,"line_start":961,"line_end":961,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172358,"byte_end":172361,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172366,"byte_end":172441,"line_start":963,"line_end":963,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172446,"byte_end":172457,"line_start":964,"line_end":964,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1670},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174108,"byte_end":174119,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"name":"AxisIterMut","qualname":"::iterators::AxisIterMut","value":"AxisIterMut {  }","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview (mutable)","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173477,"byte_end":173524,"line_start":1013,"line_end":1013,"column_start":1,"column_end":48}},{"value":"/ and yields each subview (mutable)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173525,"byte_end":173562,"line_start":1014,"line_end":1014,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173563,"byte_end":173566,"line_start":1015,"line_end":1015,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173567,"byte_end":173638,"line_start":1016,"line_end":1016,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173639,"byte_end":173704,"line_start":1017,"line_end":1017,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173705,"byte_end":173708,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173709,"byte_end":173781,"line_start":1019,"line_end":1019,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173782,"byte_end":173854,"line_start":1020,"line_end":1020,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173855,"byte_end":173858,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173859,"byte_end":173913,"line_start":1022,"line_end":1022,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173914,"byte_end":173917,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter_mut()`](../struct.ArrayBase.html#method.outer_iter_mut)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173918,"byte_end":173995,"line_start":1024,"line_end":1024,"column_start":1,"column_end":78}},{"value":"/ or [`.axis_iter_mut()`](../struct.ArrayBase.html#method.axis_iter_mut)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173996,"byte_end":174070,"line_start":1025,"line_end":1025,"column_start":1,"column_end":75}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174071,"byte_end":174096,"line_start":1026,"line_end":1026,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174867,"byte_end":174875,"line_start":1051,"line_end":1051,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIterMut>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174552,"byte_end":174620,"line_start":1044,"line_end":1044,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174625,"byte_end":174628,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174633,"byte_end":174707,"line_start":1046,"line_end":1046,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174712,"byte_end":174751,"line_start":1047,"line_end":1047,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174756,"byte_end":174759,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174764,"byte_end":174839,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174844,"byte_end":174855,"line_start":1050,"line_end":1050,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179633,"byte_end":179647,"line_start":1223,"line_end":1223,"column_start":12,"column_end":26},"name":"AxisChunksIter","qualname":"::iterators::AxisChunksIter","value":"AxisChunksIter {  }","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179167,"byte_end":179221,"line_start":1213,"line_end":1213,"column_start":1,"column_end":55}},{"value":"/ and yields views of the specified size on this axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179222,"byte_end":179278,"line_start":1214,"line_end":1214,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179279,"byte_end":179282,"line_start":1215,"line_end":1215,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179283,"byte_end":179348,"line_start":1216,"line_end":1216,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179349,"byte_end":179403,"line_start":1217,"line_end":1217,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179404,"byte_end":179457,"line_start":1218,"line_end":1218,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179458,"byte_end":179461,"line_start":1219,"line_end":1219,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179462,"byte_end":179513,"line_start":1220,"line_end":1220,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179514,"byte_end":179517,"line_start":1221,"line_end":1221,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter()`](../struct.ArrayBase.html#method.axis_chunks_iter) for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":179518,"byte_end":179621,"line_start":1222,"line_end":1222,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1751},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185471,"byte_end":185488,"line_start":1403,"line_end":1403,"column_start":12,"column_end":29},"name":"AxisChunksIterMut","qualname":"::iterators::AxisChunksIterMut","value":"AxisChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields mutable views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":184982,"byte_end":185036,"line_start":1392,"line_end":1392,"column_start":1,"column_end":55}},{"value":"/ and yields mutable views of the specified size on this axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185037,"byte_end":185101,"line_start":1393,"line_end":1393,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185102,"byte_end":185105,"line_start":1394,"line_end":1394,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185106,"byte_end":185171,"line_start":1395,"line_end":1395,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185172,"byte_end":185226,"line_start":1396,"line_end":1396,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185227,"byte_end":185280,"line_start":1397,"line_end":1397,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185281,"byte_end":185284,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185285,"byte_end":185339,"line_start":1399,"line_end":1399,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185340,"byte_end":185343,"line_start":1400,"line_end":1400,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter_mut()`](../struct.ArrayBase.html#method.axis_chunks_iter_mut)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185344,"byte_end":185433,"line_start":1401,"line_end":1401,"column_start":1,"column_end":90}},{"value":"/ for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185434,"byte_end":185459,"line_start":1402,"line_end":1402,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5094},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/layout/mod.rs","byte_start":205626,"byte_end":205632,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory layout description\n","sig":null,"attributes":[{"value":"/ Memory layout description","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/layout/mod.rs","byte_start":205562,"byte_end":205591,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1893},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":210997,"byte_end":211009,"line_start":18,"line_end":18,"column_start":11,"column_end":23},"name":"LinalgScalar","qualname":"::linalg_traits::LinalgScalar","value":"LinalgScalar: 'static + Copy + Zero + One + Add<Output = Self> + Sub<Output = Self> +\nMul<Output = Self> + Div<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" Elements that support linear algebra operations.","sig":null,"attributes":[{"value":"/ Elements that support linear algebra operations.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":210784,"byte_end":210836,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":210837,"byte_end":210840,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `'static` for type-based specialization, `Copy` so that they don't need move","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":210841,"byte_end":210921,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ semantics or destructors, and the rest are numerical traits.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":210922,"byte_end":210986,"line_start":17,"line_end":17,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":1896},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211744,"byte_end":211751,"line_start":50,"line_end":50,"column_start":11,"column_end":18},"name":"NdFloat","qualname":"::linalg_traits::NdFloat","value":"NdFloat: Float + AddAssign + SubAssign + MulAssign + DivAssign + RemAssign +\nfmt::Display + fmt::Debug + fmt::LowerExp + fmt::UpperExp + ScalarOperand +\nLinalgScalar + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Floating-point element types `f32` and `f64`.","sig":null,"attributes":[{"value":"/ Floating-point element types `f32` and `f64`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211361,"byte_end":211410,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211411,"byte_end":211414,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Trait `NdFloat` is only implemented for `f32` and `f64` but encompasses as","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211415,"byte_end":211493,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ much float-relevant ndarray functionality as possible, including the traits","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211494,"byte_end":211573,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ needed for linear algebra and for *right hand side* scalar","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211574,"byte_end":211636,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ operations (`ScalarOperand`).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211637,"byte_end":211670,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211671,"byte_end":211674,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This trait can only be implemented by `f32` and `f64`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211675,"byte_end":211733,"line_start":49,"line_end":49,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1994},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226332,"byte_end":226344,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"ShapeBuilder","qualname":"::shape_builder::ShapeBuilder","value":"ShapeBuilder","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000}],"decl_id":null,"docs":" A trait for `Shape` and `D where D: Dimension` that allows\n customizing the memory layout (strides) of an array shape.","sig":null,"attributes":[{"value":"/ A trait for `Shape` and `D where D: Dimension` that allows","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226095,"byte_end":226157,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/ customizing the memory layout (strides) of an array shape.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226158,"byte_end":226220,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226221,"byte_end":226224,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used together with array constructor methods like","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226225,"byte_end":226292,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ `Array::from_shape_vec`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226293,"byte_end":226321,"line_start":9,"line_end":9,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1995},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226356,"byte_end":226359,"line_start":11,"line_end":11,"column_start":10,"column_end":13},"name":"Dim","qualname":"::shape_builder::ShapeBuilder::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1996},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226381,"byte_end":226388,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"Strides","qualname":"::shape_builder::ShapeBuilder::Strides","value":"type Strides;","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226398,"byte_end":226408,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"into_shape","qualname":"::shape_builder::ShapeBuilder::into_shape","value":"pub fn into_shape(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226443,"byte_end":226444,"line_start":15,"line_end":15,"column_start":8,"column_end":9},"name":"f","qualname":"::shape_builder::ShapeBuilder::f","value":"pub fn f(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226479,"byte_end":226484,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"set_f","qualname":"::shape_builder::ShapeBuilder::set_f","value":"pub fn set_f(Self, bool) -> Shape<Self::Dim>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226531,"byte_end":226538,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"strides","qualname":"::shape_builder::ShapeBuilder::strides","value":"pub fn strides(Self, Self::Strides) -> StrideShape<Self::Dim>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":228784,"byte_end":228788,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"size","qualname":"<Shape<D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the shape in number of elements\n","sig":null,"attributes":[{"value":"/ Return the size of the shape in number of elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":228718,"byte_end":228772,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5100},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230328,"byte_end":230333,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, step }","parent":null,"children":[{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103}],"decl_id":null,"docs":" A slice (range with step size).","sig":null,"attributes":[{"value":"/ A slice (range with step size).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229457,"byte_end":229492,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229493,"byte_end":229496,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `end` is an exclusive index. Negative `begin` or `end` indexes are counted","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229497,"byte_end":229575,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ from the back of the axis. If `end` is `None`, the slice extends to the end","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229576,"byte_end":229655,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ of the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229656,"byte_end":229672,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229673,"byte_end":229676,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s.html) macro.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229677,"byte_end":229723,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229724,"byte_end":229727,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229728,"byte_end":229743,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229744,"byte_end":229747,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(0, None, 1)` is the full range of an axis. It can also be","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229748,"byte_end":229821,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ created with `Slice::from(..)`. The Python equivalent is `[:]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229822,"byte_end":229889,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229890,"byte_end":229893,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, b, 2)` is every second element from `a` until `b`. It can","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229894,"byte_end":229970,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ also be created with `Slice::from(a..b).step_by(2)`. The Python equivalent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":229971,"byte_end":230049,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230050,"byte_end":230067,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230068,"byte_end":230071,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, None, -1)` is every element, from `a` until the end, in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230072,"byte_end":230146,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ reverse order. It can also be created with `Slice::from(a..).step_by(-1)`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230147,"byte_end":230225,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ The Python equivalent is `[a::-1]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230226,"byte_end":230265,"line_start":34,"line_end":34,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5101},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230344,"byte_end":230349,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"isize","parent":{"krate":0,"index":5100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5102},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230366,"byte_end":230369,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"std::option::Option<isize>","parent":{"krate":0,"index":5100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5103},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230394,"byte_end":230398,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"step","qualname":"::slice::Slice::step","value":"isize","parent":{"krate":0,"index":5100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230734,"byte_end":230737,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Slice>::new","value":"pub fn new(isize, Option<isize>, isize) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given extents.","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given extents.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230427,"byte_end":230475,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230480,"byte_end":230483,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ See also the `From` impls, converting from ranges; for example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230488,"byte_end":230554,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/ `Slice::from(i..)` or `Slice::from(j..k)`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230559,"byte_end":230605,"line_start":46,"line_end":46,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230610,"byte_end":230613,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230618,"byte_end":230645,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230650,"byte_end":230722,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231155,"byte_end":231162,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"step_by","qualname":"<Slice>::step_by","value":"pub fn step_by(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given step size (multiplied with the\n previous step size).","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given step size (multiplied with the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230913,"byte_end":230983,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ previous step size).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230988,"byte_end":231012,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231017,"byte_end":231020,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231025,"byte_end":231052,"line_start":58,"line_end":58,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231057,"byte_end":231129,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231134,"byte_end":231143,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":5120},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232760,"byte_end":232765,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Slice","qualname":"::slice::SliceOrIndex::Slice","value":"SliceOrIndex::Slice { start, end, step }","parent":{"krate":0,"index":5119},"children":[],"decl_id":null,"docs":" A range with step size. `end` is an exclusive index. Negative `begin`\n or `end` indexes are counted from the back of the axis. If `end` is\n `None`, the slice extends to the end of the axis.\n","sig":null,"attributes":[{"value":"/ A range with step size. `end` is an exclusive index. Negative `begin`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232548,"byte_end":232621,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ or `end` indexes are counted from the back of the axis. If `end` is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232626,"byte_end":232697,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ `None`, the slice extends to the end of the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232702,"byte_end":232755,"line_start":98,"line_end":98,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5124},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232874,"byte_end":232879,"line_start":105,"line_end":105,"column_start":5,"column_end":10},"name":"Index","qualname":"::slice::SliceOrIndex::Index","value":"SliceOrIndex::Index(isize)","parent":{"krate":0,"index":5119},"children":[],"decl_id":null,"docs":" A single index.\n","sig":null,"attributes":[{"value":"/ A single index.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232850,"byte_end":232869,"line_start":104,"line_end":104,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":5119},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232529,"byte_end":232541,"line_start":95,"line_end":95,"column_start":10,"column_end":22},"name":"SliceOrIndex","qualname":"::slice::SliceOrIndex","value":"pub enum SliceOrIndex {\n    Slice {\n        start: isize,\n        end: Option<isize>,\n        step: isize,\n    },\n    Index(isize),\n}","parent":null,"children":[{"krate":0,"index":5120},{"krate":0,"index":5124}],"decl_id":null,"docs":" A slice (range with step) or an index.","sig":null,"attributes":[{"value":"/ A slice (range with step) or an index.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231357,"byte_end":231399,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231400,"byte_end":231403,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s!.html) macro for a convenient way to create a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231404,"byte_end":231483,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ `&SliceInfo<[SliceOrIndex; n], D>`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231484,"byte_end":231523,"line_start":73,"line_end":73,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231524,"byte_end":231527,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231528,"byte_end":231543,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231544,"byte_end":231547,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Index(a)` is the index `a`. It can also be created with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231548,"byte_end":231622,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ `SliceOrIndex::from(a)`. The Python equivalent is `[a]`. The macro","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231623,"byte_end":231693,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ equivalent is `s![a]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231694,"byte_end":231720,"line_start":79,"line_end":79,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231721,"byte_end":231724,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Slice { start: 0, end: None, step: 1 }` is the full range of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231725,"byte_end":231804,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ an axis. It can also be created with `SliceOrIndex::from(..)`. The Python","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231805,"byte_end":231882,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/ equivalent is `[:]`. The macro equivalent is `s![..]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231883,"byte_end":231941,"line_start":83,"line_end":83,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231942,"byte_end":231945,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Slice { start: a, end: Some(b), step: 2 }` is every second","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":231946,"byte_end":232023,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ element from `a` until `b`. It can also be created with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232024,"byte_end":232083,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/ `SliceOrIndex::from(a..b).step_by(2)`. The Python equivalent is `[a:b:2]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232084,"byte_end":232162,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ The macro equivalent is `s![a..b;2]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232163,"byte_end":232204,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232205,"byte_end":232208,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Slice { start: a, end: None, step: -1 }` is every element,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232209,"byte_end":232286,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ from `a` until the end, in reverse order. It can also be created with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232287,"byte_end":232360,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ `SliceOrIndex::from(a..).step_by(-1)`. The Python equivalent is `[a::-1]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232361,"byte_end":232439,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ The macro equivalent is `s![a..;-1]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232440,"byte_end":232481,"line_start":93,"line_end":93,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233007,"byte_end":233015,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_slice","qualname":"<SliceOrIndex>::is_slice","value":"pub fn is_slice(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Slice` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `Slice` value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232947,"byte_end":232995,"line_start":111,"line_end":111,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233156,"byte_end":233164,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"is_index","qualname":"<SliceOrIndex>::is_index","value":"pub fn is_index(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an `Index` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an `Index` value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233095,"byte_end":233144,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233490,"byte_end":233497,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"step_by","qualname":"<SliceOrIndex>::step_by","value":"pub fn step_by(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceOrIndex` with the given step size (multiplied with\n the previous step size).","sig":null,"attributes":[{"value":"/ Returns a new `SliceOrIndex` with the given step size (multiplied with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233240,"byte_end":233314,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ the previous step size).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233319,"byte_end":233347,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233352,"byte_end":233355,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233360,"byte_end":233387,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233392,"byte_end":233464,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233469,"byte_end":233478,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5208},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238080,"byte_end":238089,"line_start":288,"line_end":288,"column_start":12,"column_end":21},"name":"SliceInfo","qualname":"::slice::SliceInfo","value":"SliceInfo {  }","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5212}],"decl_id":null,"docs":" Represents all of the necessary information to perform a slice.","sig":null,"attributes":[{"value":"/ Represents all of the necessary information to perform a slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237746,"byte_end":237813,"line_start":279,"line_end":279,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237814,"byte_end":237817,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The type `T` is typically `[SliceOrIndex; n]`, `[SliceOrIndex]`, or","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237818,"byte_end":237889,"line_start":281,"line_end":281,"column_start":1,"column_end":72}},{"value":"/ `Vec<SliceOrIndex>`. The type `D` is the output dimension after calling","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237890,"byte_end":237965,"line_start":282,"line_end":282,"column_start":1,"column_end":76}},{"value":"/ [`.slice()`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237966,"byte_end":237983,"line_start":283,"line_end":283,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237984,"byte_end":237987,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: struct.ArrayBase.html#method.slice","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237988,"byte_end":238040,"line_start":285,"line_end":285,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238058,"byte_end":238068,"line_start":287,"line_end":287,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238576,"byte_end":238589,"line_start":312,"line_end":312,"column_start":19,"column_end":32},"name":"new_unchecked","qualname":"<SliceInfo<T, D>>::new_unchecked","value":"pub unsafe fn new_unchecked(T, PhantomData<D>) -> SliceInfo<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238384,"byte_end":238423,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238428,"byte_end":238431,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If you call this method, you are guaranteeing that `out_dim` is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238436,"byte_end":238503,"line_start":309,"line_end":309,"column_start":5,"column_end":72}},{"value":"/ consistent with `indices`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238508,"byte_end":238538,"line_start":310,"line_end":310,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238898,"byte_end":238901,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceInfo<T, D>>::new","value":"pub fn new(T) -> Result<SliceInfo<T, D>, ShapeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238783,"byte_end":238822,"line_start":322,"line_end":322,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238827,"byte_end":238830,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Errors if `D` is not consistent with `indices`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238835,"byte_end":238886,"line_start":324,"line_end":324,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239720,"byte_end":239728,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"out_ndim","qualname":"<SliceInfo<T, D>>::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions after calling\n [`.slice()`](struct.ArrayBase.html#method.slice) (including taking\n subviews).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions after calling","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239373,"byte_end":239423,"line_start":343,"line_end":343,"column_start":5,"column_end":55}},{"value":"/ [`.slice()`](struct.ArrayBase.html#method.slice) (including taking","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239428,"byte_end":239498,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ subviews).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239503,"byte_end":239517,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239522,"byte_end":239525,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ If `D` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239530,"byte_end":239599,"line_start":347,"line_end":347,"column_start":5,"column_end":74}},{"value":"/ `D::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239604,"byte_end":239675,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ over the ranges/indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239680,"byte_end":239708,"line_start":349,"line_end":349,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2125},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":241036,"byte_end":241048,"line_start":409,"line_end":409,"column_start":11,"column_end":23},"name":"SliceNextDim","qualname":"::slice::SliceNextDim","value":"SliceNextDim<D1, D2>","parent":null,"children":[{"krate":0,"index":2128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":241066,"byte_end":241074,"line_start":410,"line_end":410,"column_start":8,"column_end":16},"name":"next_dim","qualname":"::slice::SliceNextDim::next_dim","value":"pub fn next_dim(&Self, PhantomData<D1>) -> PhantomData<D2>","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2132},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249229,"byte_end":249239,"line_start":628,"line_end":628,"column_start":11,"column_end":21},"name":"MultiSlice","qualname":"::slice::MultiSlice","value":"MultiSlice<'a, A, D>","parent":null,"children":[{"krate":0,"index":2136},{"krate":0,"index":2137}],"decl_id":null,"docs":" Slicing information describing multiple mutable, disjoint slices.","sig":null,"attributes":[{"value":"/ Slicing information describing multiple mutable, disjoint slices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":248995,"byte_end":249064,"line_start":624,"line_end":624,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249065,"byte_end":249068,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ It's unfortunate that we need `'a` and `A` to be parameters of the trait,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249069,"byte_end":249146,"line_start":626,"line_end":626,"column_start":1,"column_end":78}},{"value":"/ but they're necessary until Rust supports generic associated types.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249147,"byte_end":249218,"line_start":627,"line_end":627,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":2136},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249361,"byte_end":249367,"line_start":634,"line_end":634,"column_start":10,"column_end":16},"name":"Output","qualname":"::slice::MultiSlice::Output","value":"type Output;","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" The type of the slices created by `.multi_slice_move()`.\n","sig":null,"attributes":[{"value":"/ The type of the slices created by `.multi_slice_move()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249291,"byte_end":249351,"line_start":633,"line_end":633,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249568,"byte_end":249584,"line_start":640,"line_end":640,"column_start":8,"column_end":24},"name":"multi_slice_move","qualname":"::slice::MultiSlice::multi_slice_move","value":"pub fn multi_slice_move(&Self, ArrayViewMut) -> Self::Output","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249374,"byte_end":249423,"line_start":636,"line_end":636,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249428,"byte_end":249431,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ **Panics** if performing any individual slice panics or if the slices","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249436,"byte_end":249509,"line_start":638,"line_end":638,"column_start":5,"column_end":78}},{"value":"/ are not disjoint (i.e. if they intersect).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":249514,"byte_end":249560,"line_start":639,"line_end":639,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2191},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254263,"byte_end":254268,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"stack","qualname":"::stacking::stack","value":"pub fn stack<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Copy, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253647,"byte_end":253683,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253684,"byte_end":253687,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253688,"byte_end":253743,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253744,"byte_end":253810,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253811,"byte_end":253869,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253870,"byte_end":253873,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253874,"byte_end":253881,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253882,"byte_end":253907,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253908,"byte_end":253911,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253912,"byte_end":253955,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253956,"byte_end":253959,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253960,"byte_end":253977,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253978,"byte_end":253981,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":253982,"byte_end":254010,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254011,"byte_end":254041,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254042,"byte_end":254054,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/     stack(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254055,"byte_end":254100,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254101,"byte_end":254132,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254133,"byte_end":254165,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254166,"byte_end":254197,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254198,"byte_end":254232,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254233,"byte_end":254239,"line_start":33,"line_end":33,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254240,"byte_end":254247,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254248,"byte_end":254255,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2194},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":255111,"byte_end":255122,"line_start":68,"line_end":68,"column_start":8,"column_end":19},"name":"concatenate","qualname":"::stacking::concatenate","value":"pub fn concatenate<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D>, ShapeError> where A: Copy, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Concatenate arrays along the given axis.","sig":null,"attributes":[{"value":"/ Concatenate arrays along the given axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254471,"byte_end":254515,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254516,"byte_end":254519,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes, apart from along `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254520,"byte_end":254600,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ (may be made more flexible in the future).<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254601,"byte_end":254651,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254652,"byte_end":254718,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254719,"byte_end":254777,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254778,"byte_end":254781,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254782,"byte_end":254789,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, Axis, concatenate};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254790,"byte_end":254833,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254834,"byte_end":254837,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254838,"byte_end":254866,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254867,"byte_end":254897,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254898,"byte_end":254910,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/     concatenate(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254911,"byte_end":254962,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     == Ok(arr2(&[[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254963,"byte_end":254993,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":254994,"byte_end":255024,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/                  [2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":255025,"byte_end":255055,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.]]))","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":255056,"byte_end":255088,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":255089,"byte_end":255095,"line_start":66,"line_end":66,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":255096,"byte_end":255103,"line_start":67,"line_end":67,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2199},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":257019,"byte_end":257033,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"stack_new_axis","qualname":"::stacking::stack_new_axis","value":"pub fn stack_new_axis<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Copy, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256385,"byte_end":256421,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256422,"byte_end":256425,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256426,"byte_end":256481,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256482,"byte_end":256548,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256549,"byte_end":256607,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256608,"byte_end":256611,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256612,"byte_end":256619,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256620,"byte_end":256645,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256646,"byte_end":256649,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack_new_axis, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256650,"byte_end":256702,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256703,"byte_end":256706,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256707,"byte_end":256724,"line_start":123,"line_end":123,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256725,"byte_end":256728,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256729,"byte_end":256757,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256758,"byte_end":256788,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256789,"byte_end":256801,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"/     stack_new_axis(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256802,"byte_end":256856,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256857,"byte_end":256888,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256889,"byte_end":256921,"line_start":130,"line_end":130,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256922,"byte_end":256953,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256954,"byte_end":256988,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256989,"byte_end":256995,"line_start":133,"line_end":133,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":256996,"byte_end":257003,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/stacking.rs","byte_start":257004,"byte_end":257011,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":2253},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":261663,"byte_end":261669,"line_start":44,"line_end":44,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::Broadcast::Output","value":"type Output: NdProducer<Dim = E::Dim>;","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2266},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263252,"byte_end":263266,"line_start":99,"line_end":99,"column_start":11,"column_end":25},"name":"IntoNdProducer","qualname":"::zip::IntoNdProducer","value":"IntoNdProducer","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270}],"decl_id":null,"docs":" Argument conversion into a producer.","sig":null,"attributes":[{"value":"/ Argument conversion into a producer.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263037,"byte_end":263077,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263078,"byte_end":263081,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Slices and vectors can be used (equivalent to 1-dimensional array views).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263082,"byte_end":263159,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263160,"byte_end":263163,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This trait is like `IntoIterator` for `NdProducers` instead of iterators.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263164,"byte_end":263241,"line_start":98,"line_end":98,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":2267},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263322,"byte_end":263326,"line_start":101,"line_end":101,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::IntoNdProducer::Item","value":"type Item;","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263273,"byte_end":263312,"line_start":100,"line_end":100,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2268},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263376,"byte_end":263379,"line_start":103,"line_end":103,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::IntoNdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" Dimension type of the producer\n","sig":null,"attributes":[{"value":"/ Dimension type of the producer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263332,"byte_end":263366,"line_start":102,"line_end":102,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2269},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263401,"byte_end":263407,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::IntoNdProducer::Output","value":"type Output: NdProducer<Dim = Self::Dim, Item = Self::Item>;","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263512,"byte_end":263525,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"into_producer","qualname":"::zip::IntoNdProducer::into_producer","value":"pub fn into_producer(Self) -> Self::Output","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" Convert the value into an `NdProducer`.\n","sig":null,"attributes":[{"value":"/ Convert the value into an `NdProducer`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263461,"byte_end":263504,"line_start":105,"line_end":105,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2277},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264652,"byte_end":264662,"line_start":141,"line_end":141,"column_start":11,"column_end":21},"name":"NdProducer","qualname":"::zip::NdProducer","value":"NdProducer","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":5304}],"decl_id":null,"docs":" A producer of an n-dimensional set of elements;\n for example an array view, mutable array view or an iterator\n that yields chunks.","sig":null,"attributes":[{"value":"/ A producer of an n-dimensional set of elements;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263747,"byte_end":263798,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/ for example an array view, mutable array view or an iterator","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263799,"byte_end":263863,"line_start":122,"line_end":122,"column_start":1,"column_end":65}},{"value":"/ that yields chunks.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263864,"byte_end":263887,"line_start":123,"line_end":123,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263888,"byte_end":263891,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Producers are used as a arguments to [`Zip`](struct.Zip.html) and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263892,"byte_end":263961,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/ [`azip!()`](macro.azip.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263962,"byte_end":263995,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263996,"byte_end":263999,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Comparison to `IntoIterator`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264000,"byte_end":264034,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264035,"byte_end":264038,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Most `NdProducers` are *iterable* (implement `IntoIterator`) but not directly","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264039,"byte_end":264120,"line_start":130,"line_end":130,"column_start":1,"column_end":82}},{"value":"/ iterators. This separation is needed because the producer represents","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264121,"byte_end":264193,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"/ a multidimensional set of items, it can be split along a particular axis for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264194,"byte_end":264274,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ parallelization, and it has no fixed correspondance to a sequence.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264275,"byte_end":264345,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264346,"byte_end":264349,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The natural exception is one dimensional producers, like `AxisIter`, which","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264350,"byte_end":264428,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ implement `Iterator` directly","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264429,"byte_end":264462,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/ (`AxisIter` traverses a one dimensional sequence, along an axis, while","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264463,"byte_end":264537,"line_start":137,"line_end":137,"column_start":1,"column_end":75}},{"value":"/ *producing* multidimensional items).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264538,"byte_end":264578,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264579,"byte_end":264582,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ See also [`IntoNdProducer`](trait.IntoNdProducer.html)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264583,"byte_end":264641,"line_start":140,"line_end":140,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":2278},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264718,"byte_end":264722,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::NdProducer::Item","value":"type Item;","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264669,"byte_end":264708,"line_start":142,"line_end":142,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2279},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264791,"byte_end":264794,"line_start":146,"line_end":146,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::NdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Dimension type\n","sig":null,"attributes":[{"value":"/ Dimension type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":264763,"byte_end":264781,"line_start":145,"line_end":145,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":2280},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265133,"byte_end":265136,"line_start":154,"line_end":154,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::NdProducer::Ptr","value":"type Ptr: Offset<Stride = Self::Stride>;","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Pointer or stand-in for pointer\n","sig":null,"attributes":[{"value":"/ Pointer or stand-in for pointer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265088,"byte_end":265123,"line_start":153,"line_end":153,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":2281},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265220,"byte_end":265226,"line_start":157,"line_end":157,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::NdProducer::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Pointer stride\n","sig":null,"attributes":[{"value":"/ Pointer stride","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265192,"byte_end":265210,"line_start":156,"line_end":156,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265261,"byte_end":265267,"line_start":160,"line_end":160,"column_start":8,"column_end":14},"name":"layout","qualname":"::zip::NdProducer::layout","value":"pub fn layout(&Self) -> Layout","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265312,"byte_end":265319,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"raw_dim","qualname":"::zip::NdProducer::raw_dim","value":"pub fn raw_dim(&Self) -> Self::Dim","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265367,"byte_end":265376,"line_start":164,"line_end":164,"column_start":8,"column_end":17},"name":"equal_dim","qualname":"::zip::NdProducer::equal_dim","value":"pub fn equal_dim(&Self, &Self::Dim) -> bool","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265474,"byte_end":265480,"line_start":168,"line_end":168,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::zip::NdProducer::as_ptr","value":"pub fn as_ptr(&Self) -> Self::Ptr","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265535,"byte_end":265541,"line_start":170,"line_end":170,"column_start":15,"column_end":21},"name":"as_ref","qualname":"::zip::NdProducer::as_ref","value":"pub unsafe fn as_ref(&Self, Self::Ptr) -> Self::Item","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265613,"byte_end":265621,"line_start":172,"line_end":172,"column_start":15,"column_end":23},"name":"uget_ptr","qualname":"::zip::NdProducer::uget_ptr","value":"pub unsafe fn uget_ptr(&Self, &Self::Dim) -> Self::Ptr","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265684,"byte_end":265693,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"stride_of","qualname":"::zip::NdProducer::stride_of","value":"pub fn stride_of(&Self, Axis) -> <Self::Ptr as Offset>::Stride","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265773,"byte_end":265790,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"contiguous_stride","qualname":"::zip::NdProducer::contiguous_stride","value":"pub fn contiguous_stride(&Self) -> Self::Stride","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265841,"byte_end":265849,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"split_at","qualname":"::zip::NdProducer::split_at","value":"pub fn split_at(Self, Axis, usize) -> (Self, Self) where Self: Sized","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2291},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265964,"byte_end":265970,"line_start":185,"line_end":185,"column_start":11,"column_end":17},"name":"Offset","qualname":"::zip::Offset","value":"Offset: Copy","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":5305}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2292},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265988,"byte_end":265994,"line_start":186,"line_end":186,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::Offset::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":266016,"byte_end":266029,"line_start":187,"line_end":187,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::zip::Offset::stride_offset","value":"pub unsafe fn stride_offset(Self, Self::Stride, usize) -> Self","parent":{"krate":0,"index":2291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2303},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":266540,"byte_end":266544,"line_start":208,"line_end":208,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ZippableTuple::Item","value":"type Item;","parent":{"krate":0,"index":2302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2304},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":266555,"byte_end":266558,"line_start":209,"line_end":209,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ZippableTuple::Ptr","value":"type Ptr: OffsetTuple<Args = Self::Stride> + Copy;","parent":{"krate":0,"index":2302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2305},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":266610,"byte_end":266613,"line_start":210,"line_end":210,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ZippableTuple::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2306},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":266635,"byte_end":266641,"line_start":211,"line_end":211,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ZippableTuple::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5312},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276056,"byte_end":276059,"line_start":579,"line_end":579,"column_start":12,"column_end":15},"name":"Zip","qualname":"::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318}],"decl_id":null,"docs":" Lock step function application across several arrays or other producers.","sig":null,"attributes":[{"value":"/ Lock step function application across several arrays or other producers.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273291,"byte_end":273367,"line_start":502,"line_end":502,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273368,"byte_end":273371,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ Zip allows matching several producers to each other elementwise and applying","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273372,"byte_end":273452,"line_start":504,"line_end":504,"column_start":1,"column_end":81}},{"value":"/ a function over all tuples of elements (one item from each input at","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273453,"byte_end":273524,"line_start":505,"line_end":505,"column_start":1,"column_end":72}},{"value":"/ a time).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273525,"byte_end":273537,"line_start":506,"line_end":506,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273538,"byte_end":273541,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ In general, the zip uses a tuple of producers","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273542,"byte_end":273591,"line_start":508,"line_end":508,"column_start":1,"column_end":50}},{"value":"/ ([`NdProducer`](trait.NdProducer.html) trait) that all have to be of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273592,"byte_end":273668,"line_start":509,"line_end":509,"column_start":1,"column_end":77}},{"value":"/ same shape. The NdProducer implementation defines what its item type is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273669,"byte_end":273744,"line_start":510,"line_end":510,"column_start":1,"column_end":76}},{"value":"/ (for example if it's a shared reference, mutable reference or an array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273745,"byte_end":273819,"line_start":511,"line_end":511,"column_start":1,"column_end":75}},{"value":"/ view etc).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273820,"byte_end":273834,"line_start":512,"line_end":512,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273835,"byte_end":273838,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ If all the input arrays are of the same memory layout the zip performs much","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273839,"byte_end":273918,"line_start":514,"line_end":514,"column_start":1,"column_end":80}},{"value":"/ better and the compiler can usually vectorize the loop (if applicable).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273919,"byte_end":273994,"line_start":515,"line_end":515,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273995,"byte_end":273998,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ The order elements are visited is not specified. The producers don’t have to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":273999,"byte_end":274081,"line_start":517,"line_end":517,"column_start":1,"column_end":81}},{"value":"/ have the same item type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274082,"byte_end":274110,"line_start":518,"line_end":518,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274111,"byte_end":274114,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ The `Zip` has two methods for function application: `apply` and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274115,"byte_end":274182,"line_start":520,"line_end":520,"column_start":1,"column_end":68}},{"value":"/ `fold_while`. The zip object can be split, which allows parallelization.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274183,"byte_end":274259,"line_start":521,"line_end":521,"column_start":1,"column_end":77}},{"value":"/ A read-only zip object (no mutable producers) can be cloned.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274260,"byte_end":274324,"line_start":522,"line_end":522,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274325,"byte_end":274328,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ See also the [`azip!()` macro][az] which offers a convenient shorthand","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274329,"byte_end":274403,"line_start":524,"line_end":524,"column_start":1,"column_end":75}},{"value":"/ to common ways to use `Zip`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274404,"byte_end":274436,"line_start":525,"line_end":525,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274437,"byte_end":274440,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ [az]: macro.azip.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274441,"byte_end":274466,"line_start":527,"line_end":527,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274467,"byte_end":274470,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274471,"byte_end":274478,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274479,"byte_end":274500,"line_start":530,"line_end":530,"column_start":1,"column_end":22}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274501,"byte_end":274525,"line_start":531,"line_end":531,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274526,"byte_end":274529,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ type M = Array2<f64>;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274530,"byte_end":274555,"line_start":533,"line_end":533,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274556,"byte_end":274559,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ // Create four 2d arrays of the same size","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274560,"byte_end":274605,"line_start":535,"line_end":535,"column_start":1,"column_end":46}},{"value":"/ let mut a = M::zeros((64, 32));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274606,"byte_end":274641,"line_start":536,"line_end":536,"column_start":1,"column_end":36}},{"value":"/ let b = M::from_elem(a.dim(), 1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274642,"byte_end":274680,"line_start":537,"line_end":537,"column_start":1,"column_end":39}},{"value":"/ let c = M::from_elem(a.dim(), 2.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274681,"byte_end":274719,"line_start":538,"line_end":538,"column_start":1,"column_end":39}},{"value":"/ let d = M::from_elem(a.dim(), 3.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274720,"byte_end":274758,"line_start":539,"line_end":539,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274759,"byte_end":274762,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ // Example 1: Perform an elementwise arithmetic operation across","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274763,"byte_end":274831,"line_start":541,"line_end":541,"column_start":1,"column_end":69}},{"value":"/ // the four arrays a, b, c, d.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274832,"byte_end":274866,"line_start":542,"line_end":542,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274867,"byte_end":274870,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut a)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274871,"byte_end":274892,"line_start":544,"line_end":544,"column_start":1,"column_end":22}},{"value":"/     .and(&b)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274893,"byte_end":274909,"line_start":545,"line_end":545,"column_start":1,"column_end":17}},{"value":"/     .and(&c)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274910,"byte_end":274926,"line_start":546,"line_end":546,"column_start":1,"column_end":17}},{"value":"/     .and(&d)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274927,"byte_end":274943,"line_start":547,"line_end":547,"column_start":1,"column_end":17}},{"value":"/     .apply(|w, &x, &y, &z| {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274944,"byte_end":274976,"line_start":548,"line_end":548,"column_start":1,"column_end":33}},{"value":"/         *w += x + y * z;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":274977,"byte_end":275005,"line_start":549,"line_end":549,"column_start":1,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275006,"byte_end":275017,"line_start":550,"line_end":550,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275018,"byte_end":275021,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ // Example 2: Create a new array `totals` with one entry per row of `a`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275022,"byte_end":275098,"line_start":552,"line_end":552,"column_start":1,"column_end":77}},{"value":"/ //  Use Zip to traverse the rows of `a` and assign to the corresponding","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275099,"byte_end":275174,"line_start":553,"line_end":553,"column_start":1,"column_end":76}},{"value":"/ //  entry in `totals` with the sum across each row.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275175,"byte_end":275230,"line_start":554,"line_end":554,"column_start":1,"column_end":56}},{"value":"/ //  This is possible because the producer for `totals` and the row producer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275231,"byte_end":275310,"line_start":555,"line_end":555,"column_start":1,"column_end":80}},{"value":"/ //  for `a` have the same shape and dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275311,"byte_end":275366,"line_start":556,"line_end":556,"column_start":1,"column_end":56}},{"value":"/ //  The rows producer yields one array view (`row`) per iteration.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275367,"byte_end":275437,"line_start":557,"line_end":557,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275438,"byte_end":275441,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{Array1, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275442,"byte_end":275474,"line_start":559,"line_end":559,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275475,"byte_end":275478,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ let mut totals = Array1::zeros(a.nrows());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275479,"byte_end":275525,"line_start":561,"line_end":561,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275526,"byte_end":275529,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut totals)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275530,"byte_end":275556,"line_start":563,"line_end":563,"column_start":1,"column_end":27}},{"value":"/     .and(a.genrows())","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275557,"byte_end":275582,"line_start":564,"line_end":564,"column_start":1,"column_end":26}},{"value":"/     .apply(|totals, row| *totals = row.sum());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275583,"byte_end":275633,"line_start":565,"line_end":565,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275634,"byte_end":275637,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the built in `.sum_axis()` along axis 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275638,"byte_end":275710,"line_start":567,"line_end":567,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(totals, a.sum_axis(Axis(1)));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275711,"byte_end":275755,"line_start":568,"line_end":568,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275756,"byte_end":275759,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275760,"byte_end":275763,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ // Example 3: Recreate Example 2 using apply_collect to make a new array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275764,"byte_end":275840,"line_start":571,"line_end":571,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275841,"byte_end":275844,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ let mut totals2 = Zip::from(a.genrows()).apply_collect(|row| row.sum());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275845,"byte_end":275921,"line_start":573,"line_end":573,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275922,"byte_end":275925,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the previous example.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275926,"byte_end":275979,"line_start":575,"line_end":575,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(totals, totals2);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":275980,"byte_end":276012,"line_start":576,"line_end":576,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276013,"byte_end":276020,"line_start":577,"line_end":577,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276576,"byte_end":276580,"line_start":598,"line_end":598,"column_start":12,"column_end":16},"name":"from","qualname":"<Zip<(P,), D>>::from","value":"pub fn from<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D, Item\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` from the input array or other producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` from the input array or other producer `p`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276357,"byte_end":276423,"line_start":594,"line_end":594,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276428,"byte_end":276431,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276436,"byte_end":276499,"line_start":596,"line_end":596,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276504,"byte_end":276564,"line_start":597,"line_end":597,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277319,"byte_end":277326,"line_start":624,"line_end":624,"column_start":12,"column_end":19},"name":"indexed","qualname":"<Zip<(Indices<D>, P), D>>::indexed","value":"pub fn indexed<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D,\nItem = D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` with an index producer and the producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` with an index producer and the producer `p`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277049,"byte_end":277116,"line_start":618,"line_end":618,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277121,"byte_end":277124,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277129,"byte_end":277192,"line_start":620,"line_end":620,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277197,"byte_end":277257,"line_start":621,"line_end":621,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277262,"byte_end":277265,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ *Note:* Indexed zip has overhead.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277270,"byte_end":277307,"line_start":623,"line_end":623,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277969,"byte_end":277973,"line_start":651,"line_end":651,"column_start":12,"column_end":16},"name":"size","qualname":"<Zip<Parts, D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return a the number of element tuples in the Zip\n","sig":null,"attributes":[{"value":"/ Return a the number of element tuples in the Zip","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277905,"byte_end":277957,"line_start":650,"line_end":650,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2470},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":283698,"byte_end":283702,"line_start":834,"line_end":834,"column_start":10,"column_end":14},"name":"Args","qualname":"::zip::OffsetTuple::Args","value":"type Args;","parent":{"krate":0,"index":2469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5803},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298123,"byte_end":298131,"line_start":1216,"line_end":1216,"column_start":5,"column_end":13},"name":"Continue","qualname":"::zip::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":5801},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298082,"byte_end":298118,"line_start":1215,"line_end":1215,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5806},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298192,"byte_end":298196,"line_start":1218,"line_end":1218,"column_start":5,"column_end":9},"name":"Done","qualname":"::zip::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":5801},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298140,"byte_end":298187,"line_start":1217,"line_end":1217,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":5801},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298063,"byte_end":298072,"line_start":1214,"line_end":1214,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::zip::FoldWhile","value":"pub enum FoldWhile<T> { Continue(T), Done(T), }","parent":null,"children":[{"krate":0,"index":5803},{"krate":0,"index":5806}],"decl_id":null,"docs":" Value controlling the execution of `.fold_while` on `Zip`.\n","sig":null,"attributes":[{"value":"/ Value controlling the execution of `.fold_while` on `Zip`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":297961,"byte_end":298023,"line_start":1212,"line_end":1212,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298269,"byte_end":298279,"line_start":1223,"line_end":1223,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298231,"byte_end":298257,"line_start":1222,"line_end":1222,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298461,"byte_end":298468,"line_start":1230,"line_end":1230,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if it is `Done`, false if `Continue`\n","sig":null,"attributes":[{"value":"/ Return true if it is `Done`, false if `Continue`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298397,"byte_end":298449,"line_start":1229,"line_end":1229,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339940,"byte_end":339944,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Axes","qualname":"::dimension::axes::Axes","value":"Axes {  }","parent":null,"children":[{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823}],"decl_id":null,"docs":" An iterator over the length and stride of each axis of an array.","sig":null,"attributes":[{"value":"/ An iterator over the length and stride of each axis of an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339403,"byte_end":339471,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339472,"byte_end":339475,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`.axes()`](../struct.ArrayBase.html#method.axes) for more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339476,"byte_end":339555,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339556,"byte_end":339559,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `AxisDescription`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339560,"byte_end":339607,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339608,"byte_end":339611,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339612,"byte_end":339626,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339627,"byte_end":339630,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339631,"byte_end":339638,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339639,"byte_end":339663,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339664,"byte_end":339686,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339687,"byte_end":339690,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let a = Array3::<f32>::zeros((3, 5, 4));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339691,"byte_end":339735,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339736,"byte_end":339739,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let largest_axis = a.axes()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339740,"byte_end":339771,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/                     .max_by_key(|ax| ax.len())","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339772,"byte_end":339822,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/                     .unwrap().axis();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339823,"byte_end":339864,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(largest_axis, Axis(1));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339865,"byte_end":339903,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":339904,"byte_end":339911,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5828},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340111,"byte_end":340126,"line_start":45,"line_end":45,"column_start":12,"column_end":27},"name":"AxisDescription","qualname":"::dimension::axes::AxisDescription","value":"","parent":null,"children":[],"decl_id":null,"docs":" Description of the axis, its length and its stride.\n","sig":null,"attributes":[{"value":"/ Description of the axis, its length and its stride.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340027,"byte_end":340082,"line_start":43,"line_end":43,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5830},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340127,"byte_end":340135,"line_start":45,"line_end":45,"column_start":28,"column_end":36},"name":"0","qualname":"::dimension::axes::AxisDescription::0","value":"dimension::axis::Axis","parent":{"krate":0,"index":5828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5831},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340137,"byte_end":340143,"line_start":45,"line_end":45,"column_start":38,"column_end":44},"name":"1","qualname":"::dimension::axes::AxisDescription::1","value":"usize","parent":{"krate":0,"index":5828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5832},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340145,"byte_end":340152,"line_start":45,"line_end":45,"column_start":46,"column_end":53},"name":"2","qualname":"::dimension::axes::AxisDescription::2","value":"isize","parent":{"krate":0,"index":5828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340421,"byte_end":340425,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"axis","qualname":"<AxisDescription>::axis","value":"pub fn axis(Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return axis\n","sig":null,"attributes":[{"value":"/ Return axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340372,"byte_end":340387,"line_start":53,"line_end":53,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340392,"byte_end":340409,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340518,"byte_end":340521,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"len","qualname":"<AxisDescription>::len","value":"pub fn len(Self) -> Ix","parent":null,"children":[],"decl_id":null,"docs":" Return length\n","sig":null,"attributes":[{"value":"/ Return length","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340467,"byte_end":340484,"line_start":58,"line_end":58,"column_start":5,"column_end":22}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340489,"byte_end":340506,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340612,"byte_end":340618,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"stride","qualname":"<AxisDescription>::stride","value":"pub fn stride(Self) -> Ixs","parent":null,"children":[],"decl_id":null,"docs":" Return stride\n","sig":null,"attributes":[{"value":"/ Return stride","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340561,"byte_end":340578,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340583,"byte_end":340600,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5845},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343184,"byte_end":343188,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Axis","qualname":"::dimension::axis::Axis","value":"","parent":null,"children":[],"decl_id":null,"docs":" An axis index.","sig":null,"attributes":[{"value":"/ An axis index.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":342800,"byte_end":342818,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":342819,"byte_end":342822,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An axis one of an array’s “dimensions”; an *n*-dimensional array has *n* axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":342823,"byte_end":342911,"line_start":11,"line_end":11,"column_start":1,"column_end":83}},{"value":"/ Axis *0* is the array’s outermost axis and *n*-1 is the innermost.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":342912,"byte_end":342984,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":342985,"byte_end":342988,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All array axis arguments use this type to make the code easier to write","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":342989,"byte_end":343064,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ correctly and easier to understand.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343065,"byte_end":343104,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5847},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343189,"byte_end":343198,"line_start":17,"line_end":17,"column_start":17,"column_end":26},"name":"0","qualname":"::dimension::axis::Axis::0","value":"usize","parent":{"krate":0,"index":5845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343285,"byte_end":343290,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"index","qualname":"<Axis>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the axis.\n","sig":null,"attributes":[{"value":"/ Return the index of the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343218,"byte_end":343251,"line_start":20,"line_end":20,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343256,"byte_end":343273,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2626},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":344840,"byte_end":344853,"line_start":41,"line_end":41,"column_start":11,"column_end":24},"name":"IntoDimension","qualname":"::dimension::conversion::IntoDimension","value":"IntoDimension","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628}],"decl_id":null,"docs":" Argument conversion a dimension.\n","sig":null,"attributes":[{"value":"/ Argument conversion a dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":344793,"byte_end":344829,"line_start":40,"line_end":40,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":2627},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":344865,"byte_end":344868,"line_start":42,"line_end":42,"column_start":10,"column_end":13},"name":"Dim","qualname":"::dimension::conversion::IntoDimension::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":344888,"byte_end":344902,"line_start":43,"line_end":43,"column_start":8,"column_end":22},"name":"into_dimension","qualname":"::dimension::conversion::IntoDimension::into_dimension","value":"pub fn into_dimension(Self) -> Self::Dim","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2643},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":345566,"byte_end":345568,"line_start":82,"line_end":82,"column_start":10,"column_end":12},"name":"To","qualname":"::dimension::conversion::Convert::To","value":"type To;","parent":{"krate":0,"index":2642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6042},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348769,"byte_end":348772,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"Dim","qualname":"::dimension::dim::Dim","value":"Dim {  }","parent":null,"children":[{"krate":0,"index":6044}],"decl_id":null,"docs":" Dimension description.","sig":null,"attributes":[{"value":"/ Dimension description.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348078,"byte_end":348104,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348105,"byte_end":348108,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Dim` describes the number of axes and the length of each axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348109,"byte_end":348175,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ in an array. It is also used as an index type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348176,"byte_end":348226,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348227,"byte_end":348230,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See also the [`Dimension` trait](trait.Dimension.html) for its methods and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348231,"byte_end":348309,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ operations.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348310,"byte_end":348325,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348326,"byte_end":348329,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348330,"byte_end":348344,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348345,"byte_end":348348,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To create an array with a particular dimension, you'd just pass","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348349,"byte_end":348416,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ a tuple (in this example (3, 2) is used), which is converted to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348417,"byte_end":348484,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ `Dim` by the array constructor.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348485,"byte_end":348520,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348521,"byte_end":348524,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348525,"byte_end":348532,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348533,"byte_end":348557,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Dim;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348558,"byte_end":348579,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348580,"byte_end":348583,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut array = Array2::zeros((3, 2));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348584,"byte_end":348626,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/ array[[0, 0]] = 1.;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348627,"byte_end":348650,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(array.raw_dim(), Dim([3, 2]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348651,"byte_end":348696,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348697,"byte_end":348704,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2672},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":349192,"byte_end":349195,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"Dim","qualname":"::dimension::dim::Dim","value":"pub fn Dim<T>(T) -> T::Dim where T: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value.\n","sig":null,"attributes":[{"value":"/ Create a new dimension value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":349126,"byte_end":349159,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":349160,"byte_end":349184,"line_start":59,"line_end":59,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":2811},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353278,"byte_end":353287,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Dimension","qualname":"::dimension::dimension_trait::Dimension","value":"Dimension: Clone + Eq + Debug + Send + Sync + Default + IndexMut<usize, Output = usize> +\nAdd<Self, Output = Self> + AddAssign + for<'x> AddAssign<&'x Self> + Sub<Self,\nOutput = Self> + SubAssign + for<'x> SubAssign<&'x Self> + Mul<usize, Output =\nSelf> + Mul<Self, Output = Self> + MulAssign + for<'x> MulAssign<&'x Self> +\nMulAssign<usize>","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":6123}],"decl_id":null,"docs":" Array shape and index trait.","sig":null,"attributes":[{"value":"/ Array shape and index trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353053,"byte_end":353085,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353086,"byte_end":353089,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods and operations that can be used on","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353090,"byte_end":353167,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ dimensions and indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353168,"byte_end":353195,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353196,"byte_end":353199,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ **Note:** *This trait can not be implemented outside the crate*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353200,"byte_end":353267,"line_start":28,"line_end":28,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":2815},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353899,"byte_end":353903,"line_start":52,"line_end":52,"column_start":11,"column_end":15},"name":"NDIM","qualname":"::dimension::dimension_trait::Dimension::NDIM","value":"Option<usize>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" For fixed-size dimension representations (e.g. `Ix2`), this should be\n `Some(ndim)`, and for variable-size dimension representations (e.g.\n `IxDyn`), this should be `None`.\n","sig":null,"attributes":[{"value":"/ For fixed-size dimension representations (e.g. `Ix2`), this should be","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353698,"byte_end":353771,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `Some(ndim)`, and for variable-size dimension representations (e.g.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353776,"byte_end":353847,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ `IxDyn`), this should be `None`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353852,"byte_end":353888,"line_start":51,"line_end":51,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2816},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354474,"byte_end":354482,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"name":"SliceArg","qualname":"::dimension::dimension_trait::Dimension::SliceArg","value":"type SliceArg: ?Sized + AsRef<[SliceOrIndex]>;","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" `SliceArg` is the type which is used to specify slicing for this\n dimension.","sig":null,"attributes":[{"value":"/ `SliceArg` is the type which is used to specify slicing for this","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353924,"byte_end":353992,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353997,"byte_end":354011,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354016,"byte_end":354019,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ For the fixed size dimensions it is a fixed size array of the correct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354024,"byte_end":354097,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ size, which you pass by reference. For the dynamic dimension it is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354102,"byte_end":354172,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/ a slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354177,"byte_end":354189,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354194,"byte_end":354197,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - For `Ix1`: `[SliceOrIndex; 1]`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354202,"byte_end":354238,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ - For `Ix2`: `[SliceOrIndex; 2]`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354243,"byte_end":354279,"line_start":61,"line_end":61,"column_start":5,"column_end":41}},{"value":"/ - and so on..","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354284,"byte_end":354301,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/ - For `IxDyn`: `[SliceOrIndex]`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354306,"byte_end":354341,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354346,"byte_end":354349,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The easiest way to create a `&SliceInfo<SliceArg, Do>` is using the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354354,"byte_end":354425,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ [`s![]`](macro.s!.html) macro.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354430,"byte_end":354464,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354717,"byte_end":354724,"line_start":74,"line_end":74,"column_start":10,"column_end":17},"name":"Pattern","qualname":"::dimension::dimension_trait::Dimension::Pattern","value":"type Pattern: IntoDimension<Dim = Self> + Clone + Debug + PartialEq + Eq + Default;","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Pattern matching friendly form of the dimension value.","sig":null,"attributes":[{"value":"/ Pattern matching friendly form of the dimension value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354520,"byte_end":354578,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354583,"byte_end":354586,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ - For `Ix1`: `usize`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354591,"byte_end":354616,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/ - For `Ix2`: `(usize, usize)`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354621,"byte_end":354654,"line_start":71,"line_end":71,"column_start":5,"column_end":38}},{"value":"/ - and so on..","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354659,"byte_end":354676,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/ - For `IxDyn`: `IxDyn`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354681,"byte_end":354707,"line_start":73,"line_end":73,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2818},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354852,"byte_end":354859,"line_start":76,"line_end":76,"column_start":10,"column_end":17},"name":"Smaller","qualname":"::dimension::dimension_trait::Dimension::Smaller","value":"type Smaller: Dimension;","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Next smaller dimension (if applicable)\n","sig":null,"attributes":[{"value":"/ Next smaller dimension (if applicable)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354800,"byte_end":354842,"line_start":75,"line_end":75,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2819},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354911,"byte_end":354917,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"name":"Larger","qualname":"::dimension::dimension_trait::Dimension::Larger","value":"type Larger: Dimension + RemoveAxis;","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Next larger dimension\n","sig":null,"attributes":[{"value":"/ Next larger dimension","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354876,"byte_end":354901,"line_start":77,"line_end":77,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355010,"byte_end":355014,"line_start":81,"line_end":81,"column_start":8,"column_end":12},"name":"ndim","qualname":"::dimension::dimension_trait::Dimension::ndim","value":"pub fn ndim(&Self) -> usize","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Returns the number of dimensions (number of axes).\n","sig":null,"attributes":[{"value":"/ Returns the number of dimensions (number of axes).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":354948,"byte_end":355002,"line_start":80,"line_end":80,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355110,"byte_end":355122,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"into_pattern","qualname":"::dimension::dimension_trait::Dimension::into_pattern","value":"pub fn into_pattern(Self) -> Self::Pattern","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Convert the dimension into a pattern matching friendly value.\n","sig":null,"attributes":[{"value":"/ Convert the dimension into a pattern matching friendly value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355037,"byte_end":355102,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355218,"byte_end":355222,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"size","qualname":"::dimension::dimension_trait::Dimension::size","value":"pub fn size(&Self) -> usize","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Compute the size of the dimension (number of elements)\n","sig":null,"attributes":[{"value":"/ Compute the size of the dimension (number of elements)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355152,"byte_end":355210,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355369,"byte_end":355381,"line_start":92,"line_end":92,"column_start":8,"column_end":20},"name":"size_checked","qualname":"::dimension::dimension_trait::Dimension::size_checked","value":"pub fn size_checked(&Self) -> Option<usize>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Compute the size while checking for overflow.\n","sig":null,"attributes":[{"value":"/ Compute the size while checking for overflow.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355312,"byte_end":355361,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355553,"byte_end":355558,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"slice","qualname":"::dimension::dimension_trait::Dimension::slice","value":"pub fn slice(&Self) -> &[Ix]","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355603,"byte_end":355612,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"slice_mut","qualname":"::dimension::dimension_trait::Dimension::slice_mut","value":"pub fn slice_mut(&mut Self) -> &mut [Ix]","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355688,"byte_end":355701,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"as_array_view","qualname":"::dimension::dimension_trait::Dimension::as_array_view","value":"pub fn as_array_view(&Self) -> ArrayView1<, Ix>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Borrow as a read-only array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-only array view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355643,"byte_end":355680,"line_start":104,"line_end":104,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355829,"byte_end":355846,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"as_array_view_mut","qualname":"::dimension::dimension_trait::Dimension::as_array_view_mut","value":"pub fn as_array_view_mut(&mut Self) -> ArrayViewMut1<, Ix>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Borrow as a read-write array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-write array view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355783,"byte_end":355821,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":355964,"byte_end":355969,"line_start":115,"line_end":115,"column_start":8,"column_end":13},"name":"equal","qualname":"::dimension::dimension_trait::Dimension::equal","value":"pub fn equal(&Self, &Self) -> bool","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":356288,"byte_end":356303,"line_start":124,"line_end":124,"column_start":8,"column_end":23},"name":"default_strides","qualname":"::dimension::dimension_trait::Dimension::default_strides","value":"pub fn default_strides(&Self) -> Self","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Returns the strides for a standard layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a standard layout array with the given shape.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":356046,"byte_end":356119,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":356124,"byte_end":356127,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":356132,"byte_end":356206,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":356211,"byte_end":356261,"line_start":122,"line_end":122,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":357211,"byte_end":357226,"line_start":149,"line_end":149,"column_start":8,"column_end":23},"name":"fortran_strides","qualname":"::dimension::dimension_trait::Dimension::fortran_strides","value":"pub fn fortran_strides(&Self) -> Self","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Returns the strides for a Fortran layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a Fortran layout array with the given shape.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":356970,"byte_end":357042,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":357047,"byte_end":357050,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":357055,"byte_end":357129,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":357134,"byte_end":357184,"line_start":147,"line_end":147,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358141,"byte_end":358146,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"zeros","qualname":"::dimension::dimension_trait::Dimension::zeros","value":"pub fn zeros(usize) -> Self","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Creates a dimension of all zeros with the specified ndim.","sig":null,"attributes":[{"value":"/ Creates a dimension of all zeros with the specified ndim.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":357874,"byte_end":357935,"line_start":169,"line_end":169,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":357940,"byte_end":357943,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ This method is useful for generalizing over fixed-size and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":357948,"byte_end":358010,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ variable-size dimension representations.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358015,"byte_end":358059,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358064,"byte_end":358067,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `Self` has a fixed size that is not `ndim`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358072,"byte_end":358133,"line_start":174,"line_end":174,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358210,"byte_end":358221,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"first_index","qualname":"::dimension::dimension_trait::Dimension::first_index","value":"pub fn first_index(&Self) -> Option<Self>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358193,"byte_end":358202,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358613,"byte_end":358621,"line_start":193,"line_end":193,"column_start":8,"column_end":16},"name":"next_for","qualname":"::dimension::dimension_trait::Dimension::next_for","value":"pub fn next_for(&Self, Self) -> Option<Self>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and return next index after `index`\n or None if there are no more.\n","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and return next index after `index`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358435,"byte_end":358505,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ or None if there are no more.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358510,"byte_end":358543,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":358596,"byte_end":358605,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359250,"byte_end":359260,"line_start":218,"line_end":218,"column_start":8,"column_end":18},"name":"next_for_f","qualname":"::dimension::dimension_trait::Dimension::next_for_f","value":"pub fn next_for_f(&Self, &mut Self) -> bool","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and create the next index after `index`\n Return false if iteration is done","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and create the next index after `index`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359080,"byte_end":359154,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ Return false if iteration is done","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359159,"byte_end":359196,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359201,"byte_end":359204,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Next in f-order","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359209,"byte_end":359228,"line_start":216,"line_end":216,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359233,"byte_end":359242,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359915,"byte_end":359933,"line_start":240,"line_end":240,"column_start":8,"column_end":26},"name":"strides_equivalent","qualname":"::dimension::dimension_trait::Dimension::strides_equivalent","value":"pub fn strides_equivalent<D>(&Self, &Self, &D) -> bool where D: Dimension","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Returns `true` iff `strides1` and `strides2` are equivalent for the\n shape `self`.","sig":null,"attributes":[{"value":"/ Returns `true` iff `strides1` and `strides2` are equivalent for the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359615,"byte_end":359686,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/ shape `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359691,"byte_end":359708,"line_start":233,"line_end":233,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359713,"byte_end":359716,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The strides are equivalent if, for each axis with length > 1, the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359721,"byte_end":359790,"line_start":235,"line_end":235,"column_start":5,"column_end":74}},{"value":"/ strides are equal.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359795,"byte_end":359817,"line_start":236,"line_end":236,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359822,"byte_end":359825,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note: Returns `false` if any of the ndims don't match.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":359830,"byte_end":359888,"line_start":238,"line_end":238,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":360362,"byte_end":360375,"line_start":253,"line_end":253,"column_start":8,"column_end":21},"name":"stride_offset","qualname":"::dimension::dimension_trait::Dimension::stride_offset","value":"pub fn stride_offset(&Self, &Self) -> isize","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Return stride offset for index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for index.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":360319,"byte_end":360354,"line_start":252,"line_end":252,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":360669,"byte_end":360690,"line_start":263,"line_end":263,"column_start":8,"column_end":29},"name":"stride_offset_checked","qualname":"::dimension::dimension_trait::Dimension::stride_offset_checked","value":"pub fn stride_offset_checked(&Self, &Self, &Self) -> Option<isize>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Return stride offset for this dimension and index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for this dimension and index.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":360607,"byte_end":360661,"line_start":262,"line_end":262,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":360856,"byte_end":360865,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"last_elem","qualname":"::dimension::dimension_trait::Dimension::last_elem","value":"pub fn last_elem(&Self) -> usize","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":361030,"byte_end":361043,"line_start":277,"line_end":277,"column_start":8,"column_end":21},"name":"set_last_elem","qualname":"::dimension::dimension_trait::Dimension::set_last_elem","value":"pub fn set_last_elem(&mut Self, usize)","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":361168,"byte_end":361181,"line_start":283,"line_end":283,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::dimension::dimension_trait::Dimension::is_contiguous","value":"pub fn is_contiguous(&Self, &Self) -> bool","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":362138,"byte_end":362167,"line_start":313,"line_end":313,"column_start":8,"column_end":37},"name":"_fastest_varying_stride_order","qualname":"::dimension::dimension_trait::Dimension::_fastest_varying_stride_order","value":"pub fn _fastest_varying_stride_order(&Self) -> Self","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Return the axis ordering corresponding to the fastest variation\n (in ascending order).","sig":null,"attributes":[{"value":"/ Return the axis ordering corresponding to the fastest variation","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":361879,"byte_end":361946,"line_start":307,"line_end":307,"column_start":5,"column_end":72}},{"value":"/ (in ascending order).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":361951,"byte_end":361976,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":361981,"byte_end":361984,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Assumes that no stride value appears twice. This cannot yield the correct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":361989,"byte_end":362066,"line_start":310,"line_end":310,"column_start":5,"column_end":82}},{"value":"/ result the strides are not positive.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":362071,"byte_end":362111,"line_start":311,"line_end":311,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":362580,"byte_end":362595,"line_start":326,"line_end":326,"column_start":8,"column_end":23},"name":"min_stride_axis","qualname":"::dimension::dimension_trait::Dimension::min_stride_axis","value":"pub fn min_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Compute the minimum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the minimum stride axis (absolute value), under the constraint","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":362435,"byte_end":362509,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":362514,"byte_end":362553,"line_start":324,"line_end":324,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":363102,"byte_end":363117,"line_start":341,"line_end":341,"column_start":8,"column_end":23},"name":"max_stride_axis","qualname":"::dimension::dimension_trait::Dimension::max_stride_axis","value":"pub fn max_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Compute the maximum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the maximum stride axis (absolute value), under the constraint","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":362957,"byte_end":363031,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":363036,"byte_end":363075,"line_start":339,"line_end":339,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":363557,"byte_end":363565,"line_start":354,"line_end":354,"column_start":8,"column_end":16},"name":"into_dyn","qualname":"::dimension::dimension_trait::Dimension::into_dyn","value":"pub fn into_dyn(Self) -> IxDyn","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":" Convert the dimensional into a dynamic dimensional (IxDyn).\n","sig":null,"attributes":[{"value":"/ Convert the dimensional into a dynamic dimensional (IxDyn).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":363486,"byte_end":363549,"line_start":353,"line_end":353,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":363644,"byte_end":363658,"line_start":359,"line_end":359,"column_start":8,"column_end":22},"name":"from_dimension","qualname":"::dimension::dimension_trait::Dimension::from_dimension","value":"pub fn from_dimension<D2: Dimension>(&D2) -> Option<Self>","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":363946,"byte_end":363957,"line_start":372,"line_end":372,"column_start":8,"column_end":19},"name":"insert_axis","qualname":"::dimension::dimension_trait::Dimension::insert_axis","value":"pub fn insert_axis(&Self, Axis) -> Self::Larger","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":364021,"byte_end":364036,"line_start":375,"line_end":375,"column_start":8,"column_end":23},"name":"try_remove_axis","qualname":"::dimension::dimension_trait::Dimension::try_remove_axis","value":"pub fn try_remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":2811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6203},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":381209,"byte_end":381218,"line_start":118,"line_end":118,"column_start":12,"column_end":21},"name":"IxDynImpl","qualname":"::dimension::dynindeximpl::IxDynImpl","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dynamic dimension or index type.","sig":null,"attributes":[{"value":"/ Dynamic dimension or index type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380924,"byte_end":380960,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380961,"byte_end":380964,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Use `IxDyn` directly. This type implements a dynamic number of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380965,"byte_end":381031,"line_start":114,"line_end":114,"column_start":1,"column_end":67}},{"value":"/ dimensions or indices. Short dimensions are stored inline and don't need","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":381032,"byte_end":381108,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ any dynamic memory allocation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":381109,"byte_end":381143,"line_start":116,"line_end":116,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383924,"byte_end":383929,"line_start":226,"line_end":226,"column_start":12,"column_end":17},"name":"zeros","qualname":"<IxDyn>::zeros","value":"pub fn zeros(usize) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value with `n` axes, all zeros\n","sig":null,"attributes":[{"value":"/ Create a new dimension value with `n` axes, all zeros","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383841,"byte_end":383898,"line_start":224,"line_end":224,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383903,"byte_end":383912,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3123},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384629,"byte_end":384636,"line_start":21,"line_end":21,"column_start":18,"column_end":25},"name":"NdIndex","qualname":"::dimension::ndindex::NdIndex","value":"NdIndex<E>: Debug","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126}],"decl_id":null,"docs":" Tuple or fixed size arrays that can be used to index an array.","sig":null,"attributes":[{"value":"/ Tuple or fixed size arrays that can be used to index an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384324,"byte_end":384390,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384391,"byte_end":384394,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384395,"byte_end":384402,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384403,"byte_end":384425,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384426,"byte_end":384429,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut a = arr2(&[[0, 1],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384430,"byte_end":384460,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/                    [2, 3]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384461,"byte_end":384493,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a[[0, 1]], 1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384494,"byte_end":384523,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a[[1, 1]], 3);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384524,"byte_end":384553,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ a[[1, 1]] += 1;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384554,"byte_end":384573,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(a[(1, 1)], 4);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384574,"byte_end":384603,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384604,"byte_end":384611,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384675,"byte_end":384688,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"index_checked","qualname":"::dimension::ndindex::NdIndex::index_checked","value":"pub fn index_checked(&Self, &E, &E) -> Option<isize>","parent":{"krate":0,"index":3123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384762,"byte_end":384777,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"index_unchecked","qualname":"::dimension::ndindex::NdIndex::index_unchecked","value":"pub fn index_unchecked(&Self, &E) -> isize","parent":{"krate":0,"index":3123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3188},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391798,"byte_end":391808,"line_start":15,"line_end":15,"column_start":11,"column_end":21},"name":"RemoveAxis","qualname":"::dimension::remove_axis::RemoveAxis","value":"RemoveAxis: Dimension","parent":null,"children":[{"krate":0,"index":3189}],"decl_id":null,"docs":" Array shape with a next smaller dimension.","sig":null,"attributes":[{"value":"/ Array shape with a next smaller dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391602,"byte_end":391648,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391649,"byte_end":391652,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `RemoveAxis` defines a larger-than relation for array shapes:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391653,"byte_end":391718,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ removing one axis from *Self* gives smaller dimension *Smaller*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391719,"byte_end":391787,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391829,"byte_end":391840,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"remove_axis","qualname":"::dimension::remove_axis::RemoveAxis::remove_axis","value":"pub fn remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3308},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3313},{"krate":0,"index":3316},{"krate":0,"index":3319},{"krate":0,"index":3322},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3348},{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3360},{"krate":0,"index":3363},{"krate":0,"index":3366},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3398},{"krate":0,"index":3401},{"krate":0,"index":3404},{"krate":0,"index":3407},{"krate":0,"index":3410},{"krate":0,"index":3413},{"krate":0,"index":3416},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3448},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3476},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3483}],"decl_id":null,"docs":" ndarray prelude.","sig":null,"attributes":[{"value":"/ ndarray prelude.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393408,"byte_end":393428,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393429,"byte_end":393432,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains the most used types, type aliases, traits, functions,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393433,"byte_end":393511,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ and macros that you can import easily as a group.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393512,"byte_end":393565,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393566,"byte_end":393569,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393570,"byte_end":393577,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393578,"byte_end":393581,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use ndarray::prelude::*;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393582,"byte_end":393610,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/prelude.rs","byte_start":393611,"byte_end":393618,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3486},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7572,"byte_end":7574,"line_start":212,"line_end":212,"column_start":10,"column_end":12},"name":"Ix","qualname":"::Ix","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Array index type\n","sig":null,"attributes":[{"value":"/ Array index type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7542,"byte_end":7562,"line_start":211,"line_end":211,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":3487},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7623,"byte_end":7626,"line_start":214,"line_end":214,"column_start":10,"column_end":13},"name":"Ixs","qualname":"::Ixs","value":"isize","parent":null,"children":[],"decl_id":null,"docs":" Array index type (signed)\n","sig":null,"attributes":[{"value":"/ Array index type (signed)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7584,"byte_end":7613,"line_start":213,"line_end":213,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3488},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":43397,"byte_end":43406,"line_start":1228,"line_end":1228,"column_start":12,"column_end":21},"name":"ArrayBase","qualname":"::ArrayBase","value":"ArrayBase {  }","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494}],"decl_id":null,"docs":" An *n*-dimensional array.","sig":null,"attributes":[{"value":"/ An *n*-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7637,"byte_end":7666,"line_start":216,"line_end":216,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7667,"byte_end":7670,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ The array is a general container of elements. It cannot grow or shrink, but","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7671,"byte_end":7750,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ can be sliced into subsets of its data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7751,"byte_end":7794,"line_start":219,"line_end":219,"column_start":1,"column_end":44}},{"value":"/ The array supports arithmetic operations by applying them elementwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7795,"byte_end":7869,"line_start":220,"line_end":220,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7870,"byte_end":7873,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7874,"byte_end":7950,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7951,"byte_end":8030,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element is accessed by using that many indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8031,"byte_end":8102,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8103,"byte_end":8106,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ The `ArrayBase<S, D>` is parameterized by `S` for the data container and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8107,"byte_end":8183,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8184,"byte_end":8215,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8216,"byte_end":8219,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Type aliases [`Array`], [`ArcArray`], [`CowArray`], [`ArrayView`], and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8220,"byte_end":8294,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/ [`ArrayViewMut`] refer to `ArrayBase` with different types for the data","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8295,"byte_end":8370,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ container.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8371,"byte_end":8385,"line_start":231,"line_end":231,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8386,"byte_end":8389,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ [`Array`]: type.Array.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8390,"byte_end":8420,"line_start":233,"line_end":233,"column_start":1,"column_end":31}},{"value":"/ [`ArcArray`]: type.ArcArray.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8421,"byte_end":8457,"line_start":234,"line_end":234,"column_start":1,"column_end":37}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8458,"byte_end":8496,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8497,"byte_end":8541,"line_start":236,"line_end":236,"column_start":1,"column_end":45}},{"value":"/ [`CowArray`]: type.CowArray.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8542,"byte_end":8578,"line_start":237,"line_end":237,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8579,"byte_end":8582,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ## Contents","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8583,"byte_end":8598,"line_start":239,"line_end":239,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8599,"byte_end":8602,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ + [Array](#array)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8603,"byte_end":8624,"line_start":241,"line_end":241,"column_start":1,"column_end":22}},{"value":"/ + [ArcArray](#arcarray)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8625,"byte_end":8652,"line_start":242,"line_end":242,"column_start":1,"column_end":28}},{"value":"/ + [CowArray](#cowarray)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8653,"byte_end":8680,"line_start":243,"line_end":243,"column_start":1,"column_end":28}},{"value":"/ + [Array Views](#array-views)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8681,"byte_end":8714,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/ + [Indexing and Dimension](#indexing-and-dimension)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8715,"byte_end":8770,"line_start":245,"line_end":245,"column_start":1,"column_end":56}},{"value":"/ + [Loops, Producers and Iterators](#loops-producers-and-iterators)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8771,"byte_end":8841,"line_start":246,"line_end":246,"column_start":1,"column_end":71}},{"value":"/ + [Slicing](#slicing)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8842,"byte_end":8867,"line_start":247,"line_end":247,"column_start":1,"column_end":26}},{"value":"/ + [Subviews](#subviews)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8868,"byte_end":8895,"line_start":248,"line_end":248,"column_start":1,"column_end":28}},{"value":"/ + [Arithmetic Operations](#arithmetic-operations)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8896,"byte_end":8949,"line_start":249,"line_end":249,"column_start":1,"column_end":54}},{"value":"/ + [Broadcasting](#broadcasting)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8950,"byte_end":8985,"line_start":250,"line_end":250,"column_start":1,"column_end":36}},{"value":"/ + [Conversions](#conversions)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":8986,"byte_end":9019,"line_start":251,"line_end":251,"column_start":1,"column_end":34}},{"value":"/ + [Constructor Methods for Owned Arrays](#constructor-methods-for-owned-arrays)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9020,"byte_end":9103,"line_start":252,"line_end":252,"column_start":1,"column_end":84}},{"value":"/ + [Methods For All Array Types](#methods-for-all-array-types)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9104,"byte_end":9169,"line_start":253,"line_end":253,"column_start":1,"column_end":66}},{"value":"/ + [Methods For 1-D Arrays](#methods-for-1-d-arrays)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9170,"byte_end":9225,"line_start":254,"line_end":254,"column_start":1,"column_end":56}},{"value":"/ + [Methods For 2-D Arrays](#methods-for-2-d-arrays)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9226,"byte_end":9281,"line_start":255,"line_end":255,"column_start":1,"column_end":56}},{"value":"/ + [Methods for Dynamic-Dimensional Arrays](#methods-for-dynamic-dimensional-arrays)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9282,"byte_end":9369,"line_start":256,"line_end":256,"column_start":1,"column_end":88}},{"value":"/ + [Numerical Methods for Arrays](#numerical-methods-for-arrays)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9370,"byte_end":9437,"line_start":257,"line_end":257,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9438,"byte_end":9441,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ ## `Array`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9442,"byte_end":9456,"line_start":259,"line_end":259,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9457,"byte_end":9460,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ [`Array`](type.Array.html) is an owned array that owns the underlying array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9461,"byte_end":9540,"line_start":261,"line_end":261,"column_start":1,"column_end":80}},{"value":"/ elements directly (just like a `Vec`) and it is the default way to create and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9541,"byte_end":9622,"line_start":262,"line_end":262,"column_start":1,"column_end":82}},{"value":"/ store n-dimensional data. `Array<A, D>` has two type parameters: `A` for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9623,"byte_end":9699,"line_start":263,"line_end":263,"column_start":1,"column_end":77}},{"value":"/ the element type, and `D` for the dimensionality. A particular","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9700,"byte_end":9766,"line_start":264,"line_end":264,"column_start":1,"column_end":67}},{"value":"/ dimensionality's type alias like `Array3<A>` just has the type parameter","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9767,"byte_end":9843,"line_start":265,"line_end":265,"column_start":1,"column_end":77}},{"value":"/ `A` for element type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9844,"byte_end":9869,"line_start":266,"line_end":266,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9870,"byte_end":9873,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ An example:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9874,"byte_end":9889,"line_start":268,"line_end":268,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9890,"byte_end":9893,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9894,"byte_end":9901,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ // Create a three-dimensional f64 array, initialized with zeros","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9902,"byte_end":9969,"line_start":271,"line_end":271,"column_start":1,"column_end":68}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9970,"byte_end":9994,"line_start":272,"line_end":272,"column_start":1,"column_end":25}},{"value":"/ let mut temperature = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":9995,"byte_end":10053,"line_start":273,"line_end":273,"column_start":1,"column_end":59}},{"value":"/ // Increase the temperature in this location","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10054,"byte_end":10102,"line_start":274,"line_end":274,"column_start":1,"column_end":49}},{"value":"/ temperature[[2, 2, 2]] += 0.5;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10103,"byte_end":10137,"line_start":275,"line_end":275,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10138,"byte_end":10145,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10146,"byte_end":10149,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ## `ArcArray`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10150,"byte_end":10167,"line_start":278,"line_end":278,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10168,"byte_end":10171,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ [`ArcArray`](type.ArcArray.html) is an owned array with reference counted","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10172,"byte_end":10249,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/ data (shared ownership).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10250,"byte_end":10278,"line_start":281,"line_end":281,"column_start":1,"column_end":29}},{"value":"/ Sharing requires that it uses copy-on-write for mutable operations.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10279,"byte_end":10350,"line_start":282,"line_end":282,"column_start":1,"column_end":72}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10351,"byte_end":10420,"line_start":283,"line_end":283,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](#method.view_mut) or [`get_mut()`](#method.get_mut),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10421,"byte_end":10492,"line_start":284,"line_end":284,"column_start":1,"column_end":72}},{"value":"/ will break sharing and require a clone of the data (if it is not uniquely held).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10493,"byte_end":10577,"line_start":285,"line_end":285,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10578,"byte_end":10581,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ ## `CowArray`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10582,"byte_end":10599,"line_start":287,"line_end":287,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10600,"byte_end":10603,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ [`CowArray`](type.CowArray.html) is analogous to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10604,"byte_end":10656,"line_start":289,"line_end":289,"column_start":1,"column_end":53}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10657,"byte_end":10734,"line_start":290,"line_end":290,"column_start":1,"column_end":78}},{"value":"/ It can represent either an immutable view or a uniquely owned array. If a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10735,"byte_end":10812,"line_start":291,"line_end":291,"column_start":1,"column_end":78}},{"value":"/ `CowArray` instance is the immutable view variant, then calling a method","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10813,"byte_end":10889,"line_start":292,"line_end":292,"column_start":1,"column_end":77}},{"value":"/ for mutating elements in the array will cause it to be converted into the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10890,"byte_end":10967,"line_start":293,"line_end":293,"column_start":1,"column_end":78}},{"value":"/ owned variant (by cloning all the elements) before the modification is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":10968,"byte_end":11042,"line_start":294,"line_end":294,"column_start":1,"column_end":75}},{"value":"/ performed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11043,"byte_end":11057,"line_start":295,"line_end":295,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11058,"byte_end":11061,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ ## Array Views","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11062,"byte_end":11080,"line_start":297,"line_end":297,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11081,"byte_end":11084,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`] and [`ArrayViewMut`] are read-only and read-write array views","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11085,"byte_end":11164,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"/ respectively. They use dimensionality, indexing, and almost all other","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11165,"byte_end":11238,"line_start":300,"line_end":300,"column_start":1,"column_end":74}},{"value":"/ methods the same was as the other array types.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11239,"byte_end":11289,"line_start":301,"line_end":301,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11290,"byte_end":11293,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ Methods for `ArrayBase` apply to array views too, when the trait bounds","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11294,"byte_end":11369,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ allow.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11370,"byte_end":11380,"line_start":304,"line_end":304,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11381,"byte_end":11384,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the respective array view for an overview","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11385,"byte_end":11463,"line_start":306,"line_end":306,"column_start":1,"column_end":79}},{"value":"/ of methods specific to array views: [`ArrayView`], [`ArrayViewMut`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11464,"byte_end":11536,"line_start":307,"line_end":307,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11537,"byte_end":11540,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ A view is created from an array using [`.view()`](ArrayBase::view),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11541,"byte_end":11612,"line_start":309,"line_end":309,"column_start":1,"column_end":72}},{"value":"/ [`.view_mut()`](ArrayBase::view_mut), using","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11613,"byte_end":11660,"line_start":310,"line_end":310,"column_start":1,"column_end":48}},{"value":"/ slicing ([`.slice()`](ArrayBase::slice), [`.slice_mut()`](ArrayBase::slice_mut)) or from one of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11661,"byte_end":11760,"line_start":311,"line_end":311,"column_start":1,"column_end":100}},{"value":"/ the many iterators that yield array views.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11761,"byte_end":11807,"line_start":312,"line_end":312,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11808,"byte_end":11811,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ You can also create an array view from a regular slice of data not","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11812,"byte_end":11882,"line_start":314,"line_end":314,"column_start":1,"column_end":71}},{"value":"/ allocated with `Array` — see array view methods or their `From` impls.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11883,"byte_end":11959,"line_start":315,"line_end":315,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11960,"byte_end":11963,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ Note that all `ArrayBase` variants can change their view (slicing) of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":11964,"byte_end":12041,"line_start":317,"line_end":317,"column_start":1,"column_end":78}},{"value":"/ data freely, even when their data can’t be mutated.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12042,"byte_end":12099,"line_start":318,"line_end":318,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12100,"byte_end":12103,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ ## Indexing and Dimension","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12104,"byte_end":12133,"line_start":320,"line_end":320,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12134,"byte_end":12137,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ The dimensionality of the array determines the number of *axes*, for example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12138,"byte_end":12218,"line_start":322,"line_end":322,"column_start":1,"column_end":81}},{"value":"/ a 2D array has two axes. These are listed in “big endian” order, so that","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12219,"byte_end":12299,"line_start":323,"line_end":323,"column_start":1,"column_end":77}},{"value":"/ the greatest dimension is listed first, the lowest dimension with the most","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12300,"byte_end":12378,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ rapidly varying index is the last.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12379,"byte_end":12417,"line_start":325,"line_end":325,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12418,"byte_end":12421,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ In a 2D array the index of each element is `[row, column]` as seen in this","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12422,"byte_end":12500,"line_start":327,"line_end":327,"column_start":1,"column_end":79}},{"value":"/ 4 × 3 example:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12501,"byte_end":12520,"line_start":328,"line_end":328,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12521,"byte_end":12524,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12525,"byte_end":12538,"line_start":330,"line_end":330,"column_start":1,"column_end":14}},{"value":"/ [[ [0, 0], [0, 1], [0, 2] ],  // row 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12539,"byte_end":12581,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/  [ [1, 0], [1, 1], [1, 2] ],  // row 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12582,"byte_end":12624,"line_start":332,"line_end":332,"column_start":1,"column_end":43}},{"value":"/  [ [2, 0], [2, 1], [2, 2] ],  // row 2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12625,"byte_end":12667,"line_start":333,"line_end":333,"column_start":1,"column_end":43}},{"value":"/  [ [3, 0], [3, 1], [3, 2] ]]  // row 3","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12668,"byte_end":12710,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/ //    \\       \\       \\","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12711,"byte_end":12738,"line_start":335,"line_end":335,"column_start":1,"column_end":28}},{"value":"/ //   column 0  \\     column 2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12739,"byte_end":12772,"line_start":336,"line_end":336,"column_start":1,"column_end":34}},{"value":"/ //            column 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12773,"byte_end":12799,"line_start":337,"line_end":337,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12800,"byte_end":12807,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12808,"byte_end":12811,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ The number of axes for an array is fixed by its `D` type parameter: `Ix1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12812,"byte_end":12889,"line_start":340,"line_end":340,"column_start":1,"column_end":78}},{"value":"/ for a 1D array, `Ix2` for a 2D array etc. The dimension type `IxDyn` allows","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12890,"byte_end":12969,"line_start":341,"line_end":341,"column_start":1,"column_end":80}},{"value":"/ a dynamic number of axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":12970,"byte_end":12999,"line_start":342,"line_end":342,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13000,"byte_end":13003,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ A fixed size array (`[usize; N]`) of the corresponding dimensionality is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13004,"byte_end":13080,"line_start":344,"line_end":344,"column_start":1,"column_end":77}},{"value":"/ used to index the `Array`, making the syntax `array[[` i, j,  ...`]]`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13081,"byte_end":13154,"line_start":345,"line_end":345,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13155,"byte_end":13158,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13159,"byte_end":13166,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13167,"byte_end":13191,"line_start":348,"line_end":348,"column_start":1,"column_end":25}},{"value":"/ let mut array = Array2::zeros((4, 3));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13192,"byte_end":13234,"line_start":349,"line_end":349,"column_start":1,"column_end":43}},{"value":"/ array[[1, 1]] = 7;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13235,"byte_end":13257,"line_start":350,"line_end":350,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13258,"byte_end":13265,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13266,"byte_end":13269,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ Important traits and types for dimension and indexing:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13270,"byte_end":13328,"line_start":353,"line_end":353,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13329,"byte_end":13332,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ - A [`Dim`](struct.Dim.html) value represents a dimensionality or index.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13333,"byte_end":13409,"line_start":355,"line_end":355,"column_start":1,"column_end":77}},{"value":"/ - Trait [`Dimension`](trait.Dimension.html) is implemented by all","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13410,"byte_end":13479,"line_start":356,"line_end":356,"column_start":1,"column_end":70}},{"value":"/ dimensionalities. It defines many operations for dimensions and indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13480,"byte_end":13556,"line_start":357,"line_end":357,"column_start":1,"column_end":77}},{"value":"/ - Trait [`IntoDimension`](trait.IntoDimension.html) is used to convert into a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13557,"byte_end":13638,"line_start":358,"line_end":358,"column_start":1,"column_end":82}},{"value":"/ `Dim` value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13639,"byte_end":13655,"line_start":359,"line_end":359,"column_start":1,"column_end":17}},{"value":"/ - Trait [`ShapeBuilder`](trait.ShapeBuilder.html) is an extension of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13656,"byte_end":13728,"line_start":360,"line_end":360,"column_start":1,"column_end":73}},{"value":"/ `IntoDimension` and is used when constructing an array. A shape describes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13729,"byte_end":13806,"line_start":361,"line_end":361,"column_start":1,"column_end":78}},{"value":"/ not just the extent of each axis but also their strides.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13807,"byte_end":13867,"line_start":362,"line_end":362,"column_start":1,"column_end":61}},{"value":"/ - Trait [`NdIndex`](trait.NdIndex.html) is an extension of `Dimension` and is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13868,"byte_end":13949,"line_start":363,"line_end":363,"column_start":1,"column_end":82}},{"value":"/ for values that can be used with indexing syntax.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":13950,"byte_end":14003,"line_start":364,"line_end":364,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14004,"byte_end":14007,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14008,"byte_end":14011,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ The default memory order of an array is *row major* order (a.k.a “c” order),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14012,"byte_end":14096,"line_start":367,"line_end":367,"column_start":1,"column_end":81}},{"value":"/ where each row is contiguous in memory.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14097,"byte_end":14140,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/ A *column major* (a.k.a. “f” or fortran) memory order array has","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14141,"byte_end":14212,"line_start":369,"line_end":369,"column_start":1,"column_end":68}},{"value":"/ columns (or, in general, the outermost axis) with contiguous elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14213,"byte_end":14287,"line_start":370,"line_end":370,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14288,"byte_end":14291,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ The logical order of any array’s elements is the row major order","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14292,"byte_end":14362,"line_start":372,"line_end":372,"column_start":1,"column_end":69}},{"value":"/ (the rightmost index is varying the fastest).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14363,"byte_end":14412,"line_start":373,"line_end":373,"column_start":1,"column_end":50}},{"value":"/ The iterators `.iter(), .iter_mut()` always adhere to this order, for example.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14413,"byte_end":14495,"line_start":374,"line_end":374,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14496,"byte_end":14499,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ ## Loops, Producers and Iterators","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14500,"byte_end":14537,"line_start":376,"line_end":376,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14538,"byte_end":14541,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ Using [`Zip`](struct.Zip.html) is the most general way to apply a procedure","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14542,"byte_end":14621,"line_start":378,"line_end":378,"column_start":1,"column_end":80}},{"value":"/ across one or several arrays or *producers*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14622,"byte_end":14670,"line_start":379,"line_end":379,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14671,"byte_end":14674,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ [`NdProducer`](trait.NdProducer.html) is like an iterable but for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14675,"byte_end":14744,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/ multidimensional data. All producers have dimensions and axes, like an","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14745,"byte_end":14819,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/ array view, and they can be split and used with parallelization using `Zip`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14820,"byte_end":14900,"line_start":383,"line_end":383,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14901,"byte_end":14904,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ For example, `ArrayView<A, D>` is a producer, it has the same dimensions","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14905,"byte_end":14981,"line_start":385,"line_end":385,"column_start":1,"column_end":77}},{"value":"/ as the array view and for each iteration it produces a reference to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":14982,"byte_end":15053,"line_start":386,"line_end":386,"column_start":1,"column_end":72}},{"value":"/ the array element (`&A` in this case).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15054,"byte_end":15096,"line_start":387,"line_end":387,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15097,"byte_end":15100,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ Another example, if we have a 10 × 10 array and use `.exact_chunks((2, 2))`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15101,"byte_end":15181,"line_start":389,"line_end":389,"column_start":1,"column_end":80}},{"value":"/ we get a producer of chunks which has the dimensions 5 × 5 (because","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15182,"byte_end":15254,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ there are *10 / 2 = 5* chunks in either direction). The 5 × 5 chunks producer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15255,"byte_end":15337,"line_start":391,"line_end":391,"column_start":1,"column_end":82}},{"value":"/ can be paired with any other producers of the same dimension with `Zip`, for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15338,"byte_end":15418,"line_start":392,"line_end":392,"column_start":1,"column_end":81}},{"value":"/ example 5 × 5 arrays.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15419,"byte_end":15445,"line_start":393,"line_end":393,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15446,"byte_end":15449,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ ### `.iter()` and `.iter_mut()`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15450,"byte_end":15485,"line_start":395,"line_end":395,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15486,"byte_end":15489,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ These are the element iterators of arrays and they produce an element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15490,"byte_end":15563,"line_start":397,"line_end":397,"column_start":1,"column_end":74}},{"value":"/ sequence in the logical order of the array, that means that the elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15564,"byte_end":15640,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ will be visited in the sequence that corresponds to increasing the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15641,"byte_end":15711,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/ last index first: *0, ..., 0,  0*; *0, ..., 0, 1*; *0, ...0, 2* and so on.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15712,"byte_end":15790,"line_start":400,"line_end":400,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15791,"byte_end":15794,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ### `.outer_iter()` and `.axis_iter()`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15795,"byte_end":15837,"line_start":402,"line_end":402,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15838,"byte_end":15841,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ These iterators produce array views of one smaller dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15842,"byte_end":15907,"line_start":404,"line_end":404,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15908,"byte_end":15911,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ For example, for a 2D array, `.outer_iter()` will produce the 1D rows.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15912,"byte_end":15986,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ For a 3D array, `.outer_iter()` produces 2D subviews.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":15987,"byte_end":16044,"line_start":407,"line_end":407,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16045,"byte_end":16048,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ `.axis_iter()` is like `outer_iter()` but allows you to pick which","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16049,"byte_end":16119,"line_start":409,"line_end":409,"column_start":1,"column_end":71}},{"value":"/ axis to traverse.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16120,"byte_end":16141,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16142,"byte_end":16145,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ The `outer_iter` and `axis_iter` are one dimensional producers.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16146,"byte_end":16213,"line_start":412,"line_end":412,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16214,"byte_end":16217,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ ## `.genrows()`, `.gencolumns()` and `.lanes()`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16218,"byte_end":16269,"line_start":414,"line_end":414,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16270,"byte_end":16273,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ [`.genrows()`][gr] is a producer (and iterable) of all rows in an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16274,"byte_end":16350,"line_start":416,"line_end":416,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16351,"byte_end":16354,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16355,"byte_end":16362,"line_start":418,"line_end":418,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16363,"byte_end":16386,"line_start":419,"line_end":419,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16387,"byte_end":16390,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ // 1. Loop over the rows of a 2D array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16391,"byte_end":16433,"line_start":421,"line_end":421,"column_start":1,"column_end":43}},{"value":"/ let mut a = Array::zeros((10, 10));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16434,"byte_end":16473,"line_start":422,"line_end":422,"column_start":1,"column_end":40}},{"value":"/ for mut row in a.genrows_mut() {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16474,"byte_end":16510,"line_start":423,"line_end":423,"column_start":1,"column_end":37}},{"value":"/     row.fill(1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16511,"byte_end":16532,"line_start":424,"line_end":424,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16533,"byte_end":16538,"line_start":425,"line_end":425,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16539,"byte_end":16542,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ // 2. Use Zip to pair each row in 2D `a` with elements in 1D `b`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16543,"byte_end":16611,"line_start":427,"line_end":427,"column_start":1,"column_end":69}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16612,"byte_end":16633,"line_start":428,"line_end":428,"column_start":1,"column_end":22}},{"value":"/ let mut b = Array::zeros(a.nrows());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16634,"byte_end":16674,"line_start":429,"line_end":429,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16675,"byte_end":16678,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Zip::from(a.genrows())","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16679,"byte_end":16705,"line_start":431,"line_end":431,"column_start":1,"column_end":27}},{"value":"/     .and(&mut b)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16706,"byte_end":16726,"line_start":432,"line_end":432,"column_start":1,"column_end":21}},{"value":"/     .apply(|a_row, b_elt| {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16727,"byte_end":16758,"line_start":433,"line_end":433,"column_start":1,"column_end":32}},{"value":"/         *b_elt = a_row[a.ncols() - 1] - a_row[0];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16759,"byte_end":16812,"line_start":434,"line_end":434,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16813,"byte_end":16824,"line_start":435,"line_end":435,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16825,"byte_end":16832,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16833,"byte_end":16836,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ The *lanes* of an array are 1D segments along an axis and when pointed","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16837,"byte_end":16911,"line_start":438,"line_end":438,"column_start":1,"column_end":75}},{"value":"/ along the last axis they are *rows*, when pointed along the first axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16912,"byte_end":16986,"line_start":439,"line_end":439,"column_start":1,"column_end":75}},{"value":"/ they are *columns*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":16987,"byte_end":17010,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17011,"byte_end":17014,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ A *m* × *n* array has *m* rows each of length *n* and conversely","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17015,"byte_end":17084,"line_start":442,"line_end":442,"column_start":1,"column_end":69}},{"value":"/ *n* columns each of length *m*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17085,"byte_end":17120,"line_start":443,"line_end":443,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17121,"byte_end":17124,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ To generalize this, we say that an array of dimension *a* × *m* × *n*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17125,"byte_end":17200,"line_start":445,"line_end":445,"column_start":1,"column_end":74}},{"value":"/ has *a m* rows. It's composed of *a* times the previous array, so it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17201,"byte_end":17273,"line_start":446,"line_end":446,"column_start":1,"column_end":73}},{"value":"/ has *a* times as many rows.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17274,"byte_end":17305,"line_start":447,"line_end":447,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17306,"byte_end":17309,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ All methods: [`.genrows()`][gr], [`.genrows_mut()`][grm],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17310,"byte_end":17371,"line_start":449,"line_end":449,"column_start":1,"column_end":62}},{"value":"/ [`.gencolumns()`][gc], [`.gencolumns_mut()`][gcm],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17372,"byte_end":17426,"line_start":450,"line_end":450,"column_start":1,"column_end":55}},{"value":"/ [`.lanes(axis)`][l], [`.lanes_mut(axis)`][lm].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17427,"byte_end":17477,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17478,"byte_end":17481,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ [gr]: #method.genrows","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17482,"byte_end":17507,"line_start":453,"line_end":453,"column_start":1,"column_end":26}},{"value":"/ [grm]: #method.genrows_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17508,"byte_end":17538,"line_start":454,"line_end":454,"column_start":1,"column_end":31}},{"value":"/ [gc]: #method.gencolumns","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17539,"byte_end":17567,"line_start":455,"line_end":455,"column_start":1,"column_end":29}},{"value":"/ [gcm]: #method.gencolumns_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17568,"byte_end":17601,"line_start":456,"line_end":456,"column_start":1,"column_end":34}},{"value":"/ [l]: #method.lanes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17602,"byte_end":17624,"line_start":457,"line_end":457,"column_start":1,"column_end":23}},{"value":"/ [lm]: #method.lanes_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17625,"byte_end":17652,"line_start":458,"line_end":458,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17653,"byte_end":17656,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ Yes, for 2D arrays `.genrows()` and `.outer_iter()` have about the same","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17657,"byte_end":17732,"line_start":460,"line_end":460,"column_start":1,"column_end":76}},{"value":"/ effect:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17733,"byte_end":17744,"line_start":461,"line_end":461,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17745,"byte_end":17748,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/  + `genrows()` is a producer with *n* - 1 dimensions of 1 dimensional items","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17749,"byte_end":17828,"line_start":463,"line_end":463,"column_start":1,"column_end":80}},{"value":"/  + `outer_iter()` is a producer with 1 dimension of *n* - 1 dimensional items","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17829,"byte_end":17910,"line_start":464,"line_end":464,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17911,"byte_end":17914,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ ## Slicing","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17915,"byte_end":17929,"line_start":466,"line_end":466,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17930,"byte_end":17933,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ You can use slicing to create a view of a subset of the data in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":17934,"byte_end":18001,"line_start":468,"line_end":468,"column_start":1,"column_end":68}},{"value":"/ the array. Slicing methods include [`.slice()`], [`.slice_mut()`],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18002,"byte_end":18072,"line_start":469,"line_end":469,"column_start":1,"column_end":71}},{"value":"/ [`.slice_move()`], and [`.slice_collapse()`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18073,"byte_end":18122,"line_start":470,"line_end":470,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18123,"byte_end":18126,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ The slicing argument can be passed using the macro [`s![]`](macro.s!.html),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18127,"byte_end":18206,"line_start":472,"line_end":472,"column_start":1,"column_end":80}},{"value":"/ which will be used in all examples. (The explicit form is an instance of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18207,"byte_end":18283,"line_start":473,"line_end":473,"column_start":1,"column_end":77}},{"value":"/ [`&SliceInfo`]; see its docs for more information.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18284,"byte_end":18339,"line_start":474,"line_end":474,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18340,"byte_end":18343,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ [`&SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18344,"byte_end":18385,"line_start":476,"line_end":476,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18386,"byte_end":18389,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ If a range is used, the axis is preserved. If an index is used, that index","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18390,"byte_end":18468,"line_start":478,"line_end":478,"column_start":1,"column_end":79}},{"value":"/ is selected and the axis is removed; this selects a subview. See","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18469,"byte_end":18537,"line_start":479,"line_end":479,"column_start":1,"column_end":69}},{"value":"/ [*Subviews*](#subviews) for more information about subviews. Note that","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18538,"byte_end":18612,"line_start":480,"line_end":480,"column_start":1,"column_end":75}},{"value":"/ [`.slice_collapse()`] behaves like [`.collapse_axis()`] by preserving","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18613,"byte_end":18686,"line_start":481,"line_end":481,"column_start":1,"column_end":74}},{"value":"/ the number of dimensions.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18687,"byte_end":18716,"line_start":482,"line_end":482,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18717,"byte_end":18720,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: #method.slice","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18721,"byte_end":18752,"line_start":484,"line_end":484,"column_start":1,"column_end":32}},{"value":"/ [`.slice_mut()`]: #method.slice_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18753,"byte_end":18792,"line_start":485,"line_end":485,"column_start":1,"column_end":40}},{"value":"/ [`.slice_move()`]: #method.slice_move","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18793,"byte_end":18834,"line_start":486,"line_end":486,"column_start":1,"column_end":42}},{"value":"/ [`.slice_collapse()`]: #method.slice_collapse","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18835,"byte_end":18884,"line_start":487,"line_end":487,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18885,"byte_end":18888,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ It's possible to take multiple simultaneous *mutable* slices with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18889,"byte_end":18958,"line_start":489,"line_end":489,"column_start":1,"column_end":70}},{"value":"/ [`.multi_slice_mut()`] or (for [`ArrayViewMut`] only)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":18959,"byte_end":19016,"line_start":490,"line_end":490,"column_start":1,"column_end":58}},{"value":"/ [`.multi_slice_move()`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19017,"byte_end":19045,"line_start":491,"line_end":491,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19046,"byte_end":19049,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ [`.multi_slice_mut()`]: #method.multi_slice_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19050,"byte_end":19101,"line_start":493,"line_end":493,"column_start":1,"column_end":52}},{"value":"/ [`.multi_slice_move()`]: type.ArrayViewMut.html#method.multi_slice_move","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19102,"byte_end":19177,"line_start":494,"line_end":494,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19178,"byte_end":19181,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19182,"byte_end":19189,"line_start":496,"line_end":496,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19190,"byte_end":19193,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, s};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19194,"byte_end":19227,"line_start":498,"line_end":498,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19228,"byte_end":19231,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19232,"byte_end":19317,"line_start":500,"line_end":500,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19318,"byte_end":19321,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],     // -- 2 rows  \\_","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19322,"byte_end":19376,"line_start":502,"line_end":502,"column_start":1,"column_end":55}},{"value":"/                 [ 4,  5,  6]],    // --         /","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19377,"byte_end":19430,"line_start":503,"line_end":503,"column_start":1,"column_end":54}},{"value":"/                [[ 7,  8,  9],     //            \\_ 2 submatrices","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19431,"byte_end":19499,"line_start":504,"line_end":504,"column_start":1,"column_end":69}},{"value":"/                 [10, 11, 12]]]);  //            /","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19500,"byte_end":19553,"line_start":505,"line_end":505,"column_start":1,"column_end":54}},{"value":"/ //  3 columns ..../.../.../","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19554,"byte_end":19585,"line_start":506,"line_end":506,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19586,"byte_end":19589,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19590,"byte_end":19628,"line_start":508,"line_end":508,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19629,"byte_end":19632,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19633,"byte_end":19667,"line_start":510,"line_end":510,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19668,"byte_end":19674,"line_start":511,"line_end":511,"column_start":1,"column_end":7}},{"value":"/ // - Both of the submatrices of the greatest dimension: `..`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19675,"byte_end":19739,"line_start":512,"line_end":512,"column_start":1,"column_end":65}},{"value":"/ // - Only the first row in each submatrix: `0..1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19740,"byte_end":19793,"line_start":513,"line_end":513,"column_start":1,"column_end":54}},{"value":"/ // - Every element in each row: `..`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19794,"byte_end":19834,"line_start":514,"line_end":514,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19835,"byte_end":19838,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ let b = a.slice(s![.., 0..1, ..]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19839,"byte_end":19877,"line_start":516,"line_end":516,"column_start":1,"column_end":39}},{"value":"/ let c = arr3(&[[[ 1,  2,  3]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19878,"byte_end":19912,"line_start":517,"line_end":517,"column_start":1,"column_end":35}},{"value":"/                [[ 7,  8,  9]]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19913,"byte_end":19949,"line_start":518,"line_end":518,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, c);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19950,"byte_end":19971,"line_start":519,"line_end":519,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(b.shape(), &[2, 1, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":19972,"byte_end":20010,"line_start":520,"line_end":520,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20011,"byte_end":20014,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20015,"byte_end":20049,"line_start":522,"line_end":522,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20050,"byte_end":20056,"line_start":523,"line_end":523,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20057,"byte_end":20114,"line_start":524,"line_end":524,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix: `-1..`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20115,"byte_end":20162,"line_start":525,"line_end":525,"column_start":1,"column_end":48}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20163,"byte_end":20210,"line_start":526,"line_end":526,"column_start":1,"column_end":48}},{"value":"/ let d = a.slice(s![.., -1.., ..;-1]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20211,"byte_end":20252,"line_start":527,"line_end":527,"column_start":1,"column_end":42}},{"value":"/ let e = arr3(&[[[ 6,  5,  4]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20253,"byte_end":20287,"line_start":528,"line_end":528,"column_start":1,"column_end":35}},{"value":"/                [[12, 11, 10]]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20288,"byte_end":20324,"line_start":529,"line_end":529,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(d, e);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20325,"byte_end":20346,"line_start":530,"line_end":530,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(d.shape(), &[2, 1, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20347,"byte_end":20385,"line_start":531,"line_end":531,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20386,"byte_end":20389,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice while selecting a subview with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20390,"byte_end":20450,"line_start":533,"line_end":533,"column_start":1,"column_end":59}},{"value":"/ //","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20451,"byte_end":20457,"line_start":534,"line_end":534,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20458,"byte_end":20515,"line_start":535,"line_end":535,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix, removing that axis: `-1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20516,"byte_end":20581,"line_start":536,"line_end":536,"column_start":1,"column_end":66}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20582,"byte_end":20629,"line_start":537,"line_end":537,"column_start":1,"column_end":48}},{"value":"/ let f = a.slice(s![.., -1, ..;-1]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20630,"byte_end":20669,"line_start":538,"line_end":538,"column_start":1,"column_end":40}},{"value":"/ let g = arr2(&[[ 6,  5,  4],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20670,"byte_end":20702,"line_start":539,"line_end":539,"column_start":1,"column_end":33}},{"value":"/                [12, 11, 10]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20703,"byte_end":20737,"line_start":540,"line_end":540,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(f, g);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20738,"byte_end":20759,"line_start":541,"line_end":541,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(f.shape(), &[2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20760,"byte_end":20795,"line_start":542,"line_end":542,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20796,"byte_end":20799,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ // Let's take two disjoint, mutable slices of a matrix with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20800,"byte_end":20863,"line_start":544,"line_end":544,"column_start":1,"column_end":64}},{"value":"/ //","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20864,"byte_end":20870,"line_start":545,"line_end":545,"column_start":1,"column_end":7}},{"value":"/ // - One containing all the even-index columns in the matrix","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20871,"byte_end":20935,"line_start":546,"line_end":546,"column_start":1,"column_end":65}},{"value":"/ // - One containing all the odd-index columns in the matrix","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":20936,"byte_end":20999,"line_start":547,"line_end":547,"column_start":1,"column_end":64}},{"value":"/ let mut h = arr2(&[[0, 1, 2, 3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21000,"byte_end":21036,"line_start":548,"line_end":548,"column_start":1,"column_end":37}},{"value":"/                    [4, 5, 6, 7]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21037,"byte_end":21075,"line_start":549,"line_end":549,"column_start":1,"column_end":39}},{"value":"/ let (s0, s1) = h.multi_slice_mut((s![.., ..;2], s![.., 1..;2]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21076,"byte_end":21144,"line_start":550,"line_end":550,"column_start":1,"column_end":69}},{"value":"/ let i = arr2(&[[0, 2],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21145,"byte_end":21171,"line_start":551,"line_end":551,"column_start":1,"column_end":27}},{"value":"/                [4, 6]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21172,"byte_end":21200,"line_start":552,"line_end":552,"column_start":1,"column_end":29}},{"value":"/ let j = arr2(&[[1, 3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21201,"byte_end":21227,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/                [5, 7]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21228,"byte_end":21256,"line_start":554,"line_end":554,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(s0, i);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21257,"byte_end":21279,"line_start":555,"line_end":555,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(s1, j);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21280,"byte_end":21302,"line_start":556,"line_end":556,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21303,"byte_end":21310,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21311,"byte_end":21314,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ ## Subviews","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21315,"byte_end":21330,"line_start":559,"line_end":559,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21331,"byte_end":21334,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ Subview methods allow you to restrict the array view while removing one","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21335,"byte_end":21410,"line_start":561,"line_end":561,"column_start":1,"column_end":76}},{"value":"/ axis from the array. Methods for selecting individual subviews include","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21411,"byte_end":21485,"line_start":562,"line_end":562,"column_start":1,"column_end":75}},{"value":"/ [`.index_axis()`], [`.index_axis_mut()`], [`.index_axis_move()`], and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21486,"byte_end":21559,"line_start":563,"line_end":563,"column_start":1,"column_end":74}},{"value":"/ [`.index_axis_inplace()`]. You can also select a subview by using a single","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21560,"byte_end":21638,"line_start":564,"line_end":564,"column_start":1,"column_end":79}},{"value":"/ index instead of a range when slicing. Some other methods, such as","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21639,"byte_end":21709,"line_start":565,"line_end":565,"column_start":1,"column_end":71}},{"value":"/ [`.fold_axis()`], [`.axis_iter()`], [`.axis_iter_mut()`],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21710,"byte_end":21771,"line_start":566,"line_end":566,"column_start":1,"column_end":62}},{"value":"/ [`.outer_iter()`], and [`.outer_iter_mut()`] operate on all the subviews","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21772,"byte_end":21848,"line_start":567,"line_end":567,"column_start":1,"column_end":77}},{"value":"/ along an axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21849,"byte_end":21867,"line_start":568,"line_end":568,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21868,"byte_end":21871,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ A related method is [`.collapse_axis()`], which modifies the view in the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21872,"byte_end":21948,"line_start":570,"line_end":570,"column_start":1,"column_end":77}},{"value":"/ same way as [`.index_axis()`] except for removing the collapsed axis, since","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":21949,"byte_end":22028,"line_start":571,"line_end":571,"column_start":1,"column_end":80}},{"value":"/ it operates *in place*. The length of the axis becomes 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22029,"byte_end":22090,"line_start":572,"line_end":572,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22091,"byte_end":22094,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ Methods for selecting an individual subview take two arguments: `axis` and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22095,"byte_end":22173,"line_start":574,"line_end":574,"column_start":1,"column_end":79}},{"value":"/ `index`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22174,"byte_end":22186,"line_start":575,"line_end":575,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22187,"byte_end":22190,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ [`.axis_iter()`]: #method.axis_iter","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22191,"byte_end":22230,"line_start":577,"line_end":577,"column_start":1,"column_end":40}},{"value":"/ [`.axis_iter_mut()`]: #method.axis_iter_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22231,"byte_end":22278,"line_start":578,"line_end":578,"column_start":1,"column_end":48}},{"value":"/ [`.fold_axis()`]: #method.fold_axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22279,"byte_end":22318,"line_start":579,"line_end":579,"column_start":1,"column_end":40}},{"value":"/ [`.index_axis()`]: #method.index_axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22319,"byte_end":22360,"line_start":580,"line_end":580,"column_start":1,"column_end":42}},{"value":"/ [`.index_axis_inplace()`]: #method.index_axis_inplace","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22361,"byte_end":22418,"line_start":581,"line_end":581,"column_start":1,"column_end":58}},{"value":"/ [`.index_axis_mut()`]: #method.index_axis_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22419,"byte_end":22468,"line_start":582,"line_end":582,"column_start":1,"column_end":50}},{"value":"/ [`.index_axis_move()`]: #method.index_axis_move","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22469,"byte_end":22520,"line_start":583,"line_end":583,"column_start":1,"column_end":52}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22521,"byte_end":22568,"line_start":584,"line_end":584,"column_start":1,"column_end":48}},{"value":"/ [`.outer_iter()`]: #method.outer_iter","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22569,"byte_end":22610,"line_start":585,"line_end":585,"column_start":1,"column_end":42}},{"value":"/ [`.outer_iter_mut()`]: #method.outer_iter_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22611,"byte_end":22660,"line_start":586,"line_end":586,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22661,"byte_end":22664,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22665,"byte_end":22672,"line_start":588,"line_end":588,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22673,"byte_end":22676,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr3, aview1, aview2, s, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22677,"byte_end":22726,"line_start":590,"line_end":590,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22727,"byte_end":22730,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22731,"byte_end":22734,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22735,"byte_end":22820,"line_start":593,"line_end":593,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22821,"byte_end":22824,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],    // \\ axis 0, submatrix 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22825,"byte_end":22886,"line_start":595,"line_end":595,"column_start":1,"column_end":62}},{"value":"/                 [ 4,  5,  6]],   // /","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22887,"byte_end":22928,"line_start":596,"line_end":596,"column_start":1,"column_end":42}},{"value":"/                [[ 7,  8,  9],    // \\ axis 0, submatrix 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22929,"byte_end":22990,"line_start":597,"line_end":597,"column_start":1,"column_end":62}},{"value":"/                 [10, 11, 12]]]); // /","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":22991,"byte_end":23032,"line_start":598,"line_end":598,"column_start":1,"column_end":42}},{"value":"/         //        \\","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23033,"byte_end":23056,"line_start":599,"line_end":599,"column_start":1,"column_end":24}},{"value":"/         //         axis 2, column 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23057,"byte_end":23096,"line_start":600,"line_end":600,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23097,"byte_end":23100,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23101,"byte_end":23139,"line_start":602,"line_end":602,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23140,"byte_end":23143,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ // Let’s take a subview along the greatest dimension (axis 0),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23144,"byte_end":23212,"line_start":604,"line_end":604,"column_start":1,"column_end":67}},{"value":"/ // taking submatrix 0, then submatrix 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23213,"byte_end":23256,"line_start":605,"line_end":605,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23257,"byte_end":23260,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ let sub_0 = a.index_axis(Axis(0), 0);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23261,"byte_end":23302,"line_start":607,"line_end":607,"column_start":1,"column_end":42}},{"value":"/ let sub_1 = a.index_axis(Axis(0), 1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23303,"byte_end":23344,"line_start":608,"line_end":608,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23345,"byte_end":23348,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_0, aview2(&[[ 1,  2,  3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23349,"byte_end":23393,"line_start":610,"line_end":610,"column_start":1,"column_end":45}},{"value":"/                            [ 4,  5,  6]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23394,"byte_end":23441,"line_start":611,"line_end":611,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_1, aview2(&[[ 7,  8,  9],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23442,"byte_end":23486,"line_start":612,"line_end":612,"column_start":1,"column_end":45}},{"value":"/                            [10, 11, 12]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23487,"byte_end":23534,"line_start":613,"line_end":613,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_0.shape(), &[2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23535,"byte_end":23574,"line_start":614,"line_end":614,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23575,"byte_end":23578,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ // This is the subview picking only axis 2, column 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23579,"byte_end":23635,"line_start":616,"line_end":616,"column_start":1,"column_end":57}},{"value":"/ let sub_col = a.index_axis(Axis(2), 0);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23636,"byte_end":23679,"line_start":617,"line_end":617,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23680,"byte_end":23683,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_col, aview2(&[[ 1,  4],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23684,"byte_end":23726,"line_start":619,"line_end":619,"column_start":1,"column_end":43}},{"value":"/                              [ 7, 10]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23727,"byte_end":23772,"line_start":620,"line_end":620,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23773,"byte_end":23776,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ // You can take multiple subviews at once (and slice at the same time)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23777,"byte_end":23851,"line_start":622,"line_end":622,"column_start":1,"column_end":75}},{"value":"/ let double_sub = a.slice(s![1, .., 0]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23852,"byte_end":23895,"line_start":623,"line_end":623,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(double_sub, aview1(&[7, 10]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23896,"byte_end":23941,"line_start":624,"line_end":624,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23942,"byte_end":23949,"line_start":625,"line_end":625,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23950,"byte_end":23953,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ ## Arithmetic Operations","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23954,"byte_end":23982,"line_start":627,"line_end":627,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23983,"byte_end":23986,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ Arrays support all arithmetic operations the same way: they apply elementwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":23987,"byte_end":24069,"line_start":629,"line_end":629,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24070,"byte_end":24073,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ Since the trait implementations are hard to overview, here is a summary.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24074,"byte_end":24150,"line_start":631,"line_end":631,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24151,"byte_end":24154,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Two Arrays","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24155,"byte_end":24195,"line_start":633,"line_end":633,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24196,"byte_end":24199,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24200,"byte_end":24264,"line_start":635,"line_end":635,"column_start":1,"column_end":65}},{"value":"/ with owned storage (either `Array` or `ArcArray`).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24265,"byte_end":24319,"line_start":636,"line_end":636,"column_start":1,"column_end":55}},{"value":"/ Let `C` be an array with mutable data (either `Array`, `ArcArray`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24320,"byte_end":24389,"line_start":637,"line_end":637,"column_start":1,"column_end":70}},{"value":"/ or `ArrayViewMut`).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24390,"byte_end":24413,"line_start":638,"line_end":638,"column_start":1,"column_end":24}},{"value":"/ The following combinations of operands","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24414,"byte_end":24456,"line_start":639,"line_end":639,"column_start":1,"column_end":43}},{"value":"/ are supported for an arbitrary binary operator denoted by `@` (it can be","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24457,"byte_end":24533,"line_start":640,"line_end":640,"column_start":1,"column_end":77}},{"value":"/ `+`, `-`, `*`, `/` and so on).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24534,"byte_end":24568,"line_start":641,"line_end":641,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24569,"byte_end":24572,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ - `&A @ &A` which produces a new `Array`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24573,"byte_end":24617,"line_start":643,"line_end":643,"column_start":1,"column_end":45}},{"value":"/ - `B @ A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24618,"byte_end":24694,"line_start":644,"line_end":644,"column_start":1,"column_end":77}},{"value":"/ - `B @ &A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24695,"byte_end":24772,"line_start":645,"line_end":645,"column_start":1,"column_end":78}},{"value":"/ - `C @= &A` which performs an arithmetic operation in place","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24773,"byte_end":24836,"line_start":646,"line_end":646,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24837,"byte_end":24840,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ Note that the element type needs to implement the operator trait and the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24841,"byte_end":24917,"line_start":648,"line_end":648,"column_start":1,"column_end":77}},{"value":"/ `Clone` trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24918,"byte_end":24936,"line_start":649,"line_end":649,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24937,"byte_end":24940,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24941,"byte_end":24948,"line_start":651,"line_end":651,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{array, ArrayView1};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24949,"byte_end":24986,"line_start":652,"line_end":652,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24987,"byte_end":24990,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ let owned1 = array![1, 2];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":24991,"byte_end":25021,"line_start":654,"line_end":654,"column_start":1,"column_end":31}},{"value":"/ let owned2 = array![3, 4];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25022,"byte_end":25052,"line_start":655,"line_end":655,"column_start":1,"column_end":31}},{"value":"/ let view1 = ArrayView1::from(&[5, 6]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25053,"byte_end":25095,"line_start":656,"line_end":656,"column_start":1,"column_end":43}},{"value":"/ let view2 = ArrayView1::from(&[7, 8]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25096,"byte_end":25138,"line_start":657,"line_end":657,"column_start":1,"column_end":43}},{"value":"/ let mut mutable = array![9, 10];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25139,"byte_end":25175,"line_start":658,"line_end":658,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25176,"byte_end":25179,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ let sum1 = &view1 + &view2;   // Allocates a new array. Note the explicit `&`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25180,"byte_end":25262,"line_start":660,"line_end":660,"column_start":1,"column_end":83}},{"value":"/ // let sum2 = view1 + &view2; // This doesn't work because `view1` is not an owned array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25263,"byte_end":25356,"line_start":661,"line_end":661,"column_start":1,"column_end":94}},{"value":"/ let sum3 = owned1 + view1;    // Consumes `owned1`, updates it, and returns it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25357,"byte_end":25440,"line_start":662,"line_end":662,"column_start":1,"column_end":84}},{"value":"/ let sum4 = owned2 + &view2;   // Consumes `owned2`, updates it, and returns it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25441,"byte_end":25524,"line_start":663,"line_end":663,"column_start":1,"column_end":84}},{"value":"/ mutable += &view2;            // Updates `mutable` in-place.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25525,"byte_end":25589,"line_start":664,"line_end":664,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25590,"byte_end":25597,"line_start":665,"line_end":665,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25598,"byte_end":25601,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Array and Scalar","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25602,"byte_end":25648,"line_start":667,"line_end":667,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25649,"byte_end":25652,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ The trait [`ScalarOperand`](trait.ScalarOperand.html) marks types that can be used in arithmetic","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25653,"byte_end":25753,"line_start":669,"line_end":669,"column_start":1,"column_end":101}},{"value":"/ with arrays directly. For a scalar `K` the following combinations of operands","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25754,"byte_end":25835,"line_start":670,"line_end":670,"column_start":1,"column_end":82}},{"value":"/ are supported (scalar can be on either the left or right side, but","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25836,"byte_end":25906,"line_start":671,"line_end":671,"column_start":1,"column_end":71}},{"value":"/ `ScalarOperand` docs has the detailed condtions).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25907,"byte_end":25960,"line_start":672,"line_end":672,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25961,"byte_end":25964,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ - `&A @ K` or `K @ &A` which produces a new `Array`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":25965,"byte_end":26020,"line_start":674,"line_end":674,"column_start":1,"column_end":56}},{"value":"/ - `B @ K` or `K @ B` which consumes `B`, updates it with the result and returns it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26021,"byte_end":26107,"line_start":675,"line_end":675,"column_start":1,"column_end":87}},{"value":"/ - `C @= K` which performs an arithmetic operation in place","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26108,"byte_end":26170,"line_start":676,"line_end":676,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26171,"byte_end":26174,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ ### Unary Operators","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26175,"byte_end":26198,"line_start":678,"line_end":678,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26199,"byte_end":26202,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array with owned","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26203,"byte_end":26278,"line_start":680,"line_end":680,"column_start":1,"column_end":76}},{"value":"/ storage (either `Array` or `ArcArray`). The following operands are supported","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26279,"byte_end":26359,"line_start":681,"line_end":681,"column_start":1,"column_end":81}},{"value":"/ for an arbitrary unary operator denoted by `@` (it can be `-` or `!`).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26360,"byte_end":26434,"line_start":682,"line_end":682,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26435,"byte_end":26438,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ - `@&A` which produces a new `Array`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26439,"byte_end":26479,"line_start":684,"line_end":684,"column_start":1,"column_end":41}},{"value":"/ - `@B` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26480,"byte_end":26553,"line_start":685,"line_end":685,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26554,"byte_end":26557,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ ## Broadcasting","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26558,"byte_end":26577,"line_start":687,"line_end":687,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26578,"byte_end":26581,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ Arrays support limited *broadcasting*, where arithmetic operations with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26582,"byte_end":26657,"line_start":689,"line_end":689,"column_start":1,"column_end":76}},{"value":"/ array operands of different sizes can be carried out by repeating the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26658,"byte_end":26731,"line_start":690,"line_end":690,"column_start":1,"column_end":74}},{"value":"/ elements of the smaller dimension array. See","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26732,"byte_end":26780,"line_start":691,"line_end":691,"column_start":1,"column_end":49}},{"value":"/ [`.broadcast()`](#method.broadcast) for a more detailed","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26781,"byte_end":26840,"line_start":692,"line_end":692,"column_start":1,"column_end":60}},{"value":"/ description.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26841,"byte_end":26857,"line_start":693,"line_end":693,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26858,"byte_end":26861,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26862,"byte_end":26869,"line_start":695,"line_end":695,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26870,"byte_end":26892,"line_start":696,"line_end":696,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26893,"byte_end":26896,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26897,"byte_end":26925,"line_start":698,"line_end":698,"column_start":1,"column_end":29}},{"value":"/                [1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26926,"byte_end":26954,"line_start":699,"line_end":699,"column_start":1,"column_end":29}},{"value":"/                [0., 3.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26955,"byte_end":26983,"line_start":700,"line_end":700,"column_start":1,"column_end":29}},{"value":"/                [0., 4.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":26984,"byte_end":27014,"line_start":701,"line_end":701,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27015,"byte_end":27018,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ let b = arr2(&[[0., 1.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27019,"byte_end":27049,"line_start":703,"line_end":703,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27050,"byte_end":27053,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ let c = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27054,"byte_end":27082,"line_start":705,"line_end":705,"column_start":1,"column_end":29}},{"value":"/                [1., 3.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27083,"byte_end":27111,"line_start":706,"line_end":706,"column_start":1,"column_end":29}},{"value":"/                [0., 4.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27112,"byte_end":27140,"line_start":707,"line_end":707,"column_start":1,"column_end":29}},{"value":"/                [0., 5.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27141,"byte_end":27171,"line_start":708,"line_end":708,"column_start":1,"column_end":31}},{"value":"/ // We can add because the shapes are compatible even if not equal.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27172,"byte_end":27242,"line_start":709,"line_end":709,"column_start":1,"column_end":71}},{"value":"/ // The `b` array is shape 1 × 2 but acts like a 4 × 2 array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27243,"byte_end":27309,"line_start":710,"line_end":710,"column_start":1,"column_end":65}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27310,"byte_end":27322,"line_start":711,"line_end":711,"column_start":1,"column_end":13}},{"value":"/     c == a + b","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27323,"byte_end":27341,"line_start":712,"line_end":712,"column_start":1,"column_end":19}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27342,"byte_end":27348,"line_start":713,"line_end":713,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27349,"byte_end":27356,"line_start":714,"line_end":714,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27357,"byte_end":27360,"line_start":715,"line_end":715,"column_start":1,"column_end":4}},{"value":"/ ## Conversions","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27361,"byte_end":27379,"line_start":716,"line_end":716,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27380,"byte_end":27383,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Array Types","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27384,"byte_end":27423,"line_start":718,"line_end":718,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27424,"byte_end":27427,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ This table is a summary of the conversions between arrays of different","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27428,"byte_end":27502,"line_start":720,"line_end":720,"column_start":1,"column_end":75}},{"value":"/ ownership, dimensionality, and element type. All of the conversions in this","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27503,"byte_end":27582,"line_start":721,"line_end":721,"column_start":1,"column_end":80}},{"value":"/ table preserve the shape of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27583,"byte_end":27625,"line_start":722,"line_end":722,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27626,"byte_end":27629,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27630,"byte_end":27641,"line_start":724,"line_end":724,"column_start":1,"column_end":12}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27642,"byte_end":27650,"line_start":725,"line_end":725,"column_start":1,"column_end":9}},{"value":"/ <th rowspan=\"2\">Output</th>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27651,"byte_end":27682,"line_start":726,"line_end":726,"column_start":1,"column_end":32}},{"value":"/ <th colspan=\"5\">Input</th>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27683,"byte_end":27713,"line_start":727,"line_end":727,"column_start":1,"column_end":31}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27714,"byte_end":27723,"line_start":728,"line_end":728,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27724,"byte_end":27727,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27728,"byte_end":27736,"line_start":730,"line_end":730,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27737,"byte_end":27745,"line_start":731,"line_end":731,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27746,"byte_end":27749,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27750,"byte_end":27767,"line_start":733,"line_end":733,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27768,"byte_end":27771,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27772,"byte_end":27781,"line_start":735,"line_end":735,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27782,"byte_end":27790,"line_start":736,"line_end":736,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27791,"byte_end":27794,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27795,"byte_end":27815,"line_start":738,"line_end":738,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27816,"byte_end":27819,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27820,"byte_end":27829,"line_start":740,"line_end":740,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27830,"byte_end":27838,"line_start":741,"line_end":741,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27839,"byte_end":27842,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27843,"byte_end":27867,"line_start":743,"line_end":743,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27868,"byte_end":27871,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27872,"byte_end":27881,"line_start":745,"line_end":745,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27882,"byte_end":27890,"line_start":746,"line_end":746,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27891,"byte_end":27894,"line_start":747,"line_end":747,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'a, A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27895,"byte_end":27920,"line_start":748,"line_end":748,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27921,"byte_end":27924,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27925,"byte_end":27934,"line_start":750,"line_end":750,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27935,"byte_end":27943,"line_start":751,"line_end":751,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27944,"byte_end":27947,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'a, A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27948,"byte_end":27976,"line_start":753,"line_end":753,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27977,"byte_end":27980,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27981,"byte_end":27990,"line_start":755,"line_end":755,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":27991,"byte_end":28000,"line_start":756,"line_end":756,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28001,"byte_end":28004,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<A, D>`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28005,"byte_end":28044,"line_start":758,"line_end":758,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28045,"byte_end":28048,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28049,"byte_end":28057,"line_start":760,"line_end":760,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28058,"byte_end":28066,"line_start":761,"line_end":761,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28067,"byte_end":28070,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28071,"byte_end":28088,"line_start":763,"line_end":763,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28089,"byte_end":28092,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28093,"byte_end":28102,"line_start":765,"line_end":765,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28103,"byte_end":28111,"line_start":766,"line_end":766,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28112,"byte_end":28115,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28116,"byte_end":28125,"line_start":768,"line_end":768,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28126,"byte_end":28129,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28130,"byte_end":28139,"line_start":770,"line_end":770,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28140,"byte_end":28148,"line_start":771,"line_end":771,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28149,"byte_end":28152,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28153,"byte_end":28190,"line_start":773,"line_end":773,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28191,"byte_end":28194,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28195,"byte_end":28204,"line_start":775,"line_end":775,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28205,"byte_end":28213,"line_start":776,"line_end":776,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28214,"byte_end":28217,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28218,"byte_end":28255,"line_start":778,"line_end":778,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28256,"byte_end":28259,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28260,"byte_end":28269,"line_start":780,"line_end":780,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28270,"byte_end":28278,"line_start":781,"line_end":781,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28279,"byte_end":28282,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28283,"byte_end":28316,"line_start":783,"line_end":783,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28317,"byte_end":28320,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28321,"byte_end":28330,"line_start":785,"line_end":785,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28331,"byte_end":28339,"line_start":786,"line_end":786,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28340,"byte_end":28343,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28344,"byte_end":28377,"line_start":788,"line_end":788,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28378,"byte_end":28381,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28382,"byte_end":28391,"line_start":790,"line_end":790,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28392,"byte_end":28401,"line_start":791,"line_end":791,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28402,"byte_end":28405,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArcArray<A, D>`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28406,"byte_end":28448,"line_start":793,"line_end":793,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28449,"byte_end":28452,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28453,"byte_end":28461,"line_start":795,"line_end":795,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28462,"byte_end":28470,"line_start":796,"line_end":796,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28471,"byte_end":28474,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28475,"byte_end":28495,"line_start":798,"line_end":798,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28496,"byte_end":28499,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28500,"byte_end":28509,"line_start":800,"line_end":800,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28510,"byte_end":28518,"line_start":801,"line_end":801,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28519,"byte_end":28522,"line_start":802,"line_end":802,"column_start":1,"column_end":4}},{"value":"/ [`a.into_shared()`][.into_shared()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28523,"byte_end":28562,"line_start":803,"line_end":803,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28563,"byte_end":28566,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28567,"byte_end":28576,"line_start":805,"line_end":805,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28577,"byte_end":28585,"line_start":806,"line_end":806,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28586,"byte_end":28589,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28590,"byte_end":28599,"line_start":808,"line_end":808,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28600,"byte_end":28603,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28604,"byte_end":28613,"line_start":810,"line_end":810,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28614,"byte_end":28622,"line_start":811,"line_end":811,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28623,"byte_end":28626,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned().into_shared()`][.into_shared()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28627,"byte_end":28679,"line_start":813,"line_end":813,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28680,"byte_end":28683,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28684,"byte_end":28693,"line_start":815,"line_end":815,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28694,"byte_end":28702,"line_start":816,"line_end":816,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28703,"byte_end":28706,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28707,"byte_end":28757,"line_start":818,"line_end":818,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28758,"byte_end":28761,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28762,"byte_end":28771,"line_start":820,"line_end":820,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28772,"byte_end":28780,"line_start":821,"line_end":821,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28781,"byte_end":28784,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28785,"byte_end":28835,"line_start":823,"line_end":823,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28836,"byte_end":28839,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28840,"byte_end":28849,"line_start":825,"line_end":825,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28850,"byte_end":28859,"line_start":826,"line_end":826,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28860,"byte_end":28863,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `CowArray<'a, A, D>`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28864,"byte_end":28910,"line_start":828,"line_end":828,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28911,"byte_end":28914,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28915,"byte_end":28923,"line_start":830,"line_end":830,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28924,"byte_end":28932,"line_start":831,"line_end":831,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28933,"byte_end":28936,"line_start":832,"line_end":832,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28937,"byte_end":28961,"line_start":833,"line_end":833,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28962,"byte_end":28965,"line_start":834,"line_end":834,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28966,"byte_end":28975,"line_start":835,"line_end":835,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28976,"byte_end":28984,"line_start":836,"line_end":836,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28985,"byte_end":28988,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":28989,"byte_end":29076,"line_start":838,"line_end":838,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29077,"byte_end":29080,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29081,"byte_end":29090,"line_start":840,"line_end":840,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29091,"byte_end":29099,"line_start":841,"line_end":841,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29100,"byte_end":29103,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.into_owned())`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29104,"byte_end":29204,"line_start":843,"line_end":843,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29205,"byte_end":29208,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29209,"byte_end":29218,"line_start":845,"line_end":845,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29219,"byte_end":29227,"line_start":846,"line_end":846,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29228,"byte_end":29231,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29232,"byte_end":29241,"line_start":848,"line_end":848,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29242,"byte_end":29245,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29246,"byte_end":29255,"line_start":850,"line_end":850,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29256,"byte_end":29264,"line_start":851,"line_end":851,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29265,"byte_end":29268,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29269,"byte_end":29365,"line_start":853,"line_end":853,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29366,"byte_end":29369,"line_start":854,"line_end":854,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29370,"byte_end":29379,"line_start":855,"line_end":855,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29380,"byte_end":29388,"line_start":856,"line_end":856,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29389,"byte_end":29392,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.view())`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29393,"byte_end":29496,"line_start":858,"line_end":858,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29497,"byte_end":29500,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29501,"byte_end":29510,"line_start":860,"line_end":860,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29511,"byte_end":29520,"line_start":861,"line_end":861,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29521,"byte_end":29524,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayView<'b, A, D>`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29525,"byte_end":29572,"line_start":863,"line_end":863,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29573,"byte_end":29576,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29577,"byte_end":29585,"line_start":865,"line_end":865,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29586,"byte_end":29594,"line_start":866,"line_end":866,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29595,"byte_end":29598,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'b, A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29599,"byte_end":29624,"line_start":868,"line_end":868,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29625,"byte_end":29628,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29629,"byte_end":29638,"line_start":870,"line_end":870,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29639,"byte_end":29647,"line_start":871,"line_end":871,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29648,"byte_end":29651,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29652,"byte_end":29677,"line_start":873,"line_end":873,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29678,"byte_end":29681,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29682,"byte_end":29691,"line_start":875,"line_end":875,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29692,"byte_end":29700,"line_start":876,"line_end":876,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29701,"byte_end":29704,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29705,"byte_end":29730,"line_start":878,"line_end":878,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29731,"byte_end":29734,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29735,"byte_end":29744,"line_start":880,"line_end":880,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29745,"byte_end":29753,"line_start":881,"line_end":881,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29754,"byte_end":29757,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29758,"byte_end":29783,"line_start":883,"line_end":883,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29784,"byte_end":29787,"line_start":884,"line_end":884,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29788,"byte_end":29797,"line_start":885,"line_end":885,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29798,"byte_end":29806,"line_start":886,"line_end":886,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29807,"byte_end":29810,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()] or [`a.reborrow()`][ArrayView::reborrow()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29811,"byte_end":29879,"line_start":888,"line_end":888,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29880,"byte_end":29883,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29884,"byte_end":29893,"line_start":890,"line_end":890,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29894,"byte_end":29902,"line_start":891,"line_end":891,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29903,"byte_end":29906,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29907,"byte_end":29932,"line_start":893,"line_end":893,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29933,"byte_end":29936,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29937,"byte_end":29946,"line_start":895,"line_end":895,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29947,"byte_end":29956,"line_start":896,"line_end":896,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29957,"byte_end":29960,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayViewMut<'b, A, D>`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":29961,"byte_end":30011,"line_start":898,"line_end":898,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30012,"byte_end":30015,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30016,"byte_end":30024,"line_start":900,"line_end":900,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30025,"byte_end":30033,"line_start":901,"line_end":901,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30034,"byte_end":30037,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'b, A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30038,"byte_end":30066,"line_start":903,"line_end":903,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30067,"byte_end":30070,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30071,"byte_end":30080,"line_start":905,"line_end":905,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30081,"byte_end":30089,"line_start":906,"line_end":906,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30090,"byte_end":30093,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30094,"byte_end":30127,"line_start":908,"line_end":908,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30128,"byte_end":30131,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30132,"byte_end":30141,"line_start":910,"line_end":910,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30142,"byte_end":30150,"line_start":911,"line_end":911,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30151,"byte_end":30154,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30155,"byte_end":30188,"line_start":913,"line_end":913,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30189,"byte_end":30192,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30193,"byte_end":30202,"line_start":915,"line_end":915,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30203,"byte_end":30211,"line_start":916,"line_end":916,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30212,"byte_end":30215,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30216,"byte_end":30249,"line_start":918,"line_end":918,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30250,"byte_end":30253,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30254,"byte_end":30263,"line_start":920,"line_end":920,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30264,"byte_end":30272,"line_start":921,"line_end":921,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30273,"byte_end":30276,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ illegal","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30277,"byte_end":30288,"line_start":923,"line_end":923,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30289,"byte_end":30292,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30293,"byte_end":30302,"line_start":925,"line_end":925,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30303,"byte_end":30311,"line_start":926,"line_end":926,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30312,"byte_end":30315,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()] or [`a.reborrow()`][ArrayViewMut::reborrow()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30316,"byte_end":30395,"line_start":928,"line_end":928,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30396,"byte_end":30399,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30400,"byte_end":30409,"line_start":930,"line_end":930,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30410,"byte_end":30419,"line_start":931,"line_end":931,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30420,"byte_end":30423,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `D2`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30424,"byte_end":30474,"line_start":933,"line_end":933,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30475,"byte_end":30478,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30479,"byte_end":30487,"line_start":935,"line_end":935,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30488,"byte_end":30496,"line_start":936,"line_end":936,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30497,"byte_end":30500,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `D2` (e.g. converting from dynamic dim to const dim)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30501,"byte_end":30577,"line_start":938,"line_end":938,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30578,"byte_end":30581,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30582,"byte_end":30591,"line_start":940,"line_end":940,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30592,"byte_end":30612,"line_start":941,"line_end":941,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30613,"byte_end":30616,"line_start":942,"line_end":942,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dimensionality::<D2>()`][.into_dimensionality()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30617,"byte_end":30678,"line_start":943,"line_end":943,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30679,"byte_end":30682,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30683,"byte_end":30692,"line_start":945,"line_end":945,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30693,"byte_end":30702,"line_start":946,"line_end":946,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30703,"byte_end":30706,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `IxDyn`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30707,"byte_end":30760,"line_start":948,"line_end":948,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30761,"byte_end":30764,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30765,"byte_end":30773,"line_start":950,"line_end":950,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30774,"byte_end":30782,"line_start":951,"line_end":951,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30783,"byte_end":30786,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `IxDyn`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30787,"byte_end":30818,"line_start":953,"line_end":953,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30819,"byte_end":30822,"line_start":954,"line_end":954,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30823,"byte_end":30832,"line_start":955,"line_end":955,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30833,"byte_end":30853,"line_start":956,"line_end":956,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30854,"byte_end":30857,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dyn()`][.into_dyn()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30858,"byte_end":30891,"line_start":958,"line_end":958,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30892,"byte_end":30895,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30896,"byte_end":30905,"line_start":960,"line_end":960,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30906,"byte_end":30915,"line_start":961,"line_end":961,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30916,"byte_end":30919,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<B, D>`-->","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30920,"byte_end":30959,"line_start":963,"line_end":963,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30960,"byte_end":30963,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30964,"byte_end":30972,"line_start":965,"line_end":965,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30973,"byte_end":30981,"line_start":966,"line_end":966,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30982,"byte_end":30985,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ `Array<B, D>` (new element type)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":30986,"byte_end":31022,"line_start":968,"line_end":968,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31023,"byte_end":31026,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31027,"byte_end":31036,"line_start":970,"line_end":970,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31037,"byte_end":31057,"line_start":971,"line_end":971,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31058,"byte_end":31061,"line_start":972,"line_end":972,"column_start":1,"column_end":4}},{"value":"/ [`a.map(|x| x.do_your_conversion())`][.map()]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31062,"byte_end":31111,"line_start":973,"line_end":973,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31112,"byte_end":31115,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31116,"byte_end":31125,"line_start":975,"line_end":975,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31126,"byte_end":31135,"line_start":976,"line_end":976,"column_start":1,"column_end":10}},{"value":"/ </table>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31136,"byte_end":31148,"line_start":977,"line_end":977,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31149,"byte_end":31152,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Arrays and `Vec`s/Slices/Scalars","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31153,"byte_end":31213,"line_start":979,"line_end":979,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31214,"byte_end":31217,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ This is a table of the safe conversions between arrays and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31218,"byte_end":31280,"line_start":981,"line_end":981,"column_start":1,"column_end":63}},{"value":"/ `Vec`s/slices/scalars. Note that some of the return values are actually","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31281,"byte_end":31356,"line_start":982,"line_end":982,"column_start":1,"column_end":76}},{"value":"/ `Result`/`Option` wrappers around the indicated output types.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31357,"byte_end":31422,"line_start":983,"line_end":983,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31423,"byte_end":31426,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ Input | Output | Methods","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31427,"byte_end":31455,"line_start":985,"line_end":985,"column_start":1,"column_end":29}},{"value":"/ ------|--------|--------","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31456,"byte_end":31484,"line_start":986,"line_end":986,"column_start":1,"column_end":29}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, Ix1>` | [`::from_vec()`](#method.from_vec)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31485,"byte_end":31567,"line_start":987,"line_end":987,"column_start":1,"column_end":83}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, D>` | [`::from_shape_vec()`](#method.from_shape_vec)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31568,"byte_end":31660,"line_start":988,"line_end":988,"column_start":1,"column_end":93}},{"value":"/ `&[A]` | `ArrayView1<A>` | [`::from()`](type.ArrayView.html#method.from)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31661,"byte_end":31737,"line_start":989,"line_end":989,"column_start":1,"column_end":77}},{"value":"/ `&[A]` | `ArrayView<A, D>` | [`::from_shape()`](type.ArrayView.html#method.from_shape)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31738,"byte_end":31828,"line_start":990,"line_end":990,"column_start":1,"column_end":91}},{"value":"/ `&mut [A]` | `ArrayViewMut1<A>` | [`::from()`](type.ArrayViewMut.html#method.from)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31829,"byte_end":31915,"line_start":991,"line_end":991,"column_start":1,"column_end":87}},{"value":"/ `&mut [A]` | `ArrayViewMut<A, D>` | [`::from_shape()`](type.ArrayViewMut.html#method.from_shape)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":31916,"byte_end":32016,"line_start":992,"line_end":992,"column_start":1,"column_end":101}},{"value":"/ `&ArrayBase<S, Ix1>` | `Vec<A>` | [`.to_vec()`](#method.to_vec)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32017,"byte_end":32084,"line_start":993,"line_end":993,"column_start":1,"column_end":68}},{"value":"/ `Array<A, D>` | `Vec<A>` | [`.into_raw_vec()`](type.Array.html#method.into_raw_vec)<sup>[1](#into_raw_vec)</sup>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32085,"byte_end":32201,"line_start":994,"line_end":994,"column_start":1,"column_end":117}},{"value":"/ `&ArrayBase<S, D>` | `&[A]` | [`.as_slice()`](#method.as_slice)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order()`](#method.as_slice_memory_order)<sup>[3](#req_contig)</sup>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32202,"byte_end":32388,"line_start":995,"line_end":995,"column_start":1,"column_end":187}},{"value":"/ `&mut ArrayBase<S: DataMut, D>` | `&mut [A]` | [`.as_slice_mut()`](#method.as_slice_mut)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order_mut()`](#method.as_slice_memory_order_mut)<sup>[3](#req_contig)</sup>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32389,"byte_end":32608,"line_start":996,"line_end":996,"column_start":1,"column_end":220}},{"value":"/ `ArrayView<A, D>` | `&[A]` | [`.to_slice()`](type.ArrayView.html#method.to_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32609,"byte_end":32725,"line_start":997,"line_end":997,"column_start":1,"column_end":117}},{"value":"/ `ArrayViewMut<A, D>` | `&mut [A]` | [`.into_slice()`](type.ArrayViewMut.html#method.into_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32726,"byte_end":32856,"line_start":998,"line_end":998,"column_start":1,"column_end":131}},{"value":"/ `Array0<A>` | `A` | [`.into_scalar()`](type.Array.html#method.into_scalar)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32857,"byte_end":32935,"line_start":999,"line_end":999,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32936,"byte_end":32939,"line_start":1000,"line_end":1000,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"into_raw_vec\">1</a></sup>Returns the data in memory order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":32940,"byte_end":33016,"line_start":1001,"line_end":1001,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33017,"byte_end":33020,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig_std\">2</a></sup>Works only if the array is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33021,"byte_end":33092,"line_start":1003,"line_end":1003,"column_start":1,"column_end":72}},{"value":"/ contiguous and in standard order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33093,"byte_end":33130,"line_start":1004,"line_end":1004,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33131,"byte_end":33134,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig\">3</a></sup>Works only if the array is contiguous.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33135,"byte_end":33214,"line_start":1006,"line_end":1006,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33215,"byte_end":33218,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ The table above does not include all the constructors; it only shows","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33219,"byte_end":33291,"line_start":1008,"line_end":1008,"column_start":1,"column_end":73}},{"value":"/ conversions to/from `Vec`s/slices. See","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33292,"byte_end":33334,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}},{"value":"/ [below](#constructor-methods-for-owned-arrays) for more constructors.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33335,"byte_end":33408,"line_start":1010,"line_end":1010,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33409,"byte_end":33412,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ [ArrayView::reborrow()]: type.ArrayView.html#method.reborrow","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33413,"byte_end":33477,"line_start":1012,"line_end":1012,"column_start":1,"column_end":65}},{"value":"/ [ArrayViewMut::reborrow()]: type.ArrayViewMut.html#method.reborrow","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33478,"byte_end":33548,"line_start":1013,"line_end":1013,"column_start":1,"column_end":71}},{"value":"/ [.into_dimensionality()]: #method.into_dimensionality","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33549,"byte_end":33606,"line_start":1014,"line_end":1014,"column_start":1,"column_end":58}},{"value":"/ [.into_dyn()]: #method.into_dyn","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33607,"byte_end":33642,"line_start":1015,"line_end":1015,"column_start":1,"column_end":36}},{"value":"/ [.into_owned()]: #method.into_owned","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33643,"byte_end":33682,"line_start":1016,"line_end":1016,"column_start":1,"column_end":40}},{"value":"/ [.into_shared()]: #method.into_shared","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33683,"byte_end":33724,"line_start":1017,"line_end":1017,"column_start":1,"column_end":42}},{"value":"/ [.to_owned()]: #method.to_owned","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33725,"byte_end":33760,"line_start":1018,"line_end":1018,"column_start":1,"column_end":36}},{"value":"/ [.map()]: #method.map","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33761,"byte_end":33786,"line_start":1019,"line_end":1019,"column_start":1,"column_end":26}},{"value":"/ [.view()]: #method.view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33787,"byte_end":33814,"line_start":1020,"line_end":1020,"column_start":1,"column_end":28}},{"value":"/ [.view_mut()]: #method.view_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33815,"byte_end":33850,"line_start":1021,"line_end":1021,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33851,"byte_end":33854,"line_start":1022,"line_end":1022,"column_start":1,"column_end":4}},{"value":"/ ### Conversions from Nested `Vec`s/`Array`s","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33855,"byte_end":33902,"line_start":1023,"line_end":1023,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33903,"byte_end":33906,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ It's generally a good idea to avoid nested `Vec`/`Array` types, such as","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33907,"byte_end":33982,"line_start":1025,"line_end":1025,"column_start":1,"column_end":76}},{"value":"/ `Vec<Vec<A>>` or `Vec<Array2<A>>` because:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":33983,"byte_end":34029,"line_start":1026,"line_end":1026,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34030,"byte_end":34033,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ * they require extra heap allocations compared to a single `Array`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34034,"byte_end":34105,"line_start":1028,"line_end":1028,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34106,"byte_end":34109,"line_start":1029,"line_end":1029,"column_start":1,"column_end":4}},{"value":"/ * they can scatter data all over memory (because of multiple allocations),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34110,"byte_end":34188,"line_start":1030,"line_end":1030,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34189,"byte_end":34192,"line_start":1031,"line_end":1031,"column_start":1,"column_end":4}},{"value":"/ * they cause unnecessary indirection (traversing multiple pointers to reach","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34193,"byte_end":34272,"line_start":1032,"line_end":1032,"column_start":1,"column_end":80}},{"value":"/   the data),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34273,"byte_end":34289,"line_start":1033,"line_end":1033,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34290,"byte_end":34293,"line_start":1034,"line_end":1034,"column_start":1,"column_end":4}},{"value":"/ * they don't enforce consistent shape within the nested","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34294,"byte_end":34353,"line_start":1035,"line_end":1035,"column_start":1,"column_end":60}},{"value":"/   `Vec`s/`ArrayBase`s, and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34354,"byte_end":34384,"line_start":1036,"line_end":1036,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34385,"byte_end":34388,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ * they are generally more difficult to work with.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34389,"byte_end":34442,"line_start":1038,"line_end":1038,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34443,"byte_end":34446,"line_start":1039,"line_end":1039,"column_start":1,"column_end":4}},{"value":"/ The most common case where users might consider using nested","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34447,"byte_end":34511,"line_start":1040,"line_end":1040,"column_start":1,"column_end":65}},{"value":"/ `Vec`s/`Array`s is when creating an array by appending rows/subviews in a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34512,"byte_end":34589,"line_start":1041,"line_end":1041,"column_start":1,"column_end":78}},{"value":"/ loop, where the rows/subviews are computed within the loop. However, there","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34590,"byte_end":34668,"line_start":1042,"line_end":1042,"column_start":1,"column_end":79}},{"value":"/ are better ways than using nested `Vec`s/`Array`s.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34669,"byte_end":34723,"line_start":1043,"line_end":1043,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34724,"byte_end":34727,"line_start":1044,"line_end":1044,"column_start":1,"column_end":4}},{"value":"/ If you know ahead-of-time the shape of the final array, the cleanest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34728,"byte_end":34800,"line_start":1045,"line_end":1045,"column_start":1,"column_end":73}},{"value":"/ solution is to allocate the final array before the loop, and then assign","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34801,"byte_end":34877,"line_start":1046,"line_end":1046,"column_start":1,"column_end":77}},{"value":"/ the data to it within the loop, like this:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34878,"byte_end":34924,"line_start":1047,"line_end":1047,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34925,"byte_end":34928,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34929,"byte_end":34940,"line_start":1049,"line_end":1049,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34941,"byte_end":34980,"line_start":1050,"line_end":1050,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34981,"byte_end":34984,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ let mut arr = Array2::zeros((2, 3));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":34985,"byte_end":35025,"line_start":1052,"line_end":1052,"column_start":1,"column_end":41}},{"value":"/ for (i, mut row) in arr.axis_iter_mut(Axis(0)).enumerate() {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35026,"byte_end":35090,"line_start":1053,"line_end":1053,"column_start":1,"column_end":65}},{"value":"/     // Perform calculations and assign to `row`; this is a trivial example:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35091,"byte_end":35170,"line_start":1054,"line_end":1054,"column_start":1,"column_end":80}},{"value":"/     row.fill(i);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35171,"byte_end":35191,"line_start":1055,"line_end":1055,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35192,"byte_end":35197,"line_start":1056,"line_end":1056,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35198,"byte_end":35248,"line_start":1057,"line_end":1057,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35249,"byte_end":35256,"line_start":1058,"line_end":1058,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35257,"byte_end":35260,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ If you don't know ahead-of-time the shape of the final array, then the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35261,"byte_end":35335,"line_start":1060,"line_end":1060,"column_start":1,"column_end":75}},{"value":"/ cleanest solution is generally to append the data to a flat `Vec`, and then","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35336,"byte_end":35415,"line_start":1061,"line_end":1061,"column_start":1,"column_end":80}},{"value":"/ convert it to an `Array` at the end with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35416,"byte_end":35460,"line_start":1062,"line_end":1062,"column_start":1,"column_end":45}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec). You just have to be careful","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35461,"byte_end":35540,"line_start":1063,"line_end":1063,"column_start":1,"column_end":80}},{"value":"/ that the layout of the data (the order of the elements in the flat `Vec`)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35541,"byte_end":35618,"line_start":1064,"line_end":1064,"column_start":1,"column_end":78}},{"value":"/ is correct.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35619,"byte_end":35634,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35635,"byte_end":35638,"line_start":1066,"line_end":1066,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35639,"byte_end":35650,"line_start":1067,"line_end":1067,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35651,"byte_end":35684,"line_start":1068,"line_end":1068,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35685,"byte_end":35688,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ let ncols = 3;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35689,"byte_end":35707,"line_start":1070,"line_end":1070,"column_start":1,"column_end":19}},{"value":"/ let mut data = Vec::new();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35708,"byte_end":35738,"line_start":1071,"line_end":1071,"column_start":1,"column_end":31}},{"value":"/ let mut nrows = 0;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35739,"byte_end":35761,"line_start":1072,"line_end":1072,"column_start":1,"column_end":23}},{"value":"/ for i in 0..2 {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35762,"byte_end":35781,"line_start":1073,"line_end":1073,"column_start":1,"column_end":20}},{"value":"/     // Compute `row` and append it to `data`; this is a trivial example:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35782,"byte_end":35858,"line_start":1074,"line_end":1074,"column_start":1,"column_end":77}},{"value":"/     let row = vec![i; ncols];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35859,"byte_end":35892,"line_start":1075,"line_end":1075,"column_start":1,"column_end":34}},{"value":"/     data.extend_from_slice(&row);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35893,"byte_end":35930,"line_start":1076,"line_end":1076,"column_start":1,"column_end":38}},{"value":"/     nrows += 1;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35931,"byte_end":35950,"line_start":1077,"line_end":1077,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35951,"byte_end":35956,"line_start":1078,"line_end":1078,"column_start":1,"column_end":6}},{"value":"/ let arr = Array2::from_shape_vec((nrows, ncols), data)?;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":35957,"byte_end":36017,"line_start":1079,"line_end":1079,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36018,"byte_end":36068,"line_start":1080,"line_end":1080,"column_start":1,"column_end":51}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36069,"byte_end":36108,"line_start":1081,"line_end":1081,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36109,"byte_end":36116,"line_start":1082,"line_end":1082,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36117,"byte_end":36120,"line_start":1083,"line_end":1083,"column_start":1,"column_end":4}},{"value":"/ If neither of these options works for you, and you really need to convert","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36121,"byte_end":36198,"line_start":1084,"line_end":1084,"column_start":1,"column_end":78}},{"value":"/ nested `Vec`/`Array` instances to an `Array`, the cleanest solution is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36199,"byte_end":36273,"line_start":1085,"line_end":1085,"column_start":1,"column_end":75}},{"value":"/ generally to use","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36274,"byte_end":36294,"line_start":1086,"line_end":1086,"column_start":1,"column_end":21}},{"value":"/ [`Iterator::flatten()`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36295,"byte_end":36393,"line_start":1087,"line_end":1087,"column_start":1,"column_end":99}},{"value":"/ to get a flat `Vec`, and then convert the `Vec` to an `Array` with","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36394,"byte_end":36464,"line_start":1088,"line_end":1088,"column_start":1,"column_end":71}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec), like this:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36465,"byte_end":36527,"line_start":1089,"line_end":1089,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36528,"byte_end":36531,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36532,"byte_end":36543,"line_start":1091,"line_end":1091,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Array3};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36544,"byte_end":36585,"line_start":1092,"line_end":1092,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36586,"byte_end":36589,"line_start":1093,"line_end":1093,"column_start":1,"column_end":4}},{"value":"/ let nested: Vec<Array2<i32>> = vec![","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36590,"byte_end":36630,"line_start":1094,"line_end":1094,"column_start":1,"column_end":41}},{"value":"/     array![[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36631,"byte_end":36668,"line_start":1095,"line_end":1095,"column_start":1,"column_end":38}},{"value":"/     array![[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36669,"byte_end":36709,"line_start":1096,"line_end":1096,"column_start":1,"column_end":41}},{"value":"/ ];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36710,"byte_end":36716,"line_start":1097,"line_end":1097,"column_start":1,"column_end":7}},{"value":"/ let inner_shape = nested[0].dim();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36717,"byte_end":36755,"line_start":1098,"line_end":1098,"column_start":1,"column_end":39}},{"value":"/ let shape = (nested.len(), inner_shape.0, inner_shape.1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36756,"byte_end":36817,"line_start":1099,"line_end":1099,"column_start":1,"column_end":62}},{"value":"/ let flat: Vec<i32> = nested.iter().flatten().cloned().collect();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36818,"byte_end":36886,"line_start":1100,"line_end":1100,"column_start":1,"column_end":69}},{"value":"/ let arr = Array3::from_shape_vec(shape, flat)?;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36887,"byte_end":36938,"line_start":1101,"line_end":1101,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(arr, array![","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36939,"byte_end":36966,"line_start":1102,"line_end":1102,"column_start":1,"column_end":28}},{"value":"/     [[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36967,"byte_end":36998,"line_start":1103,"line_end":1103,"column_start":1,"column_end":32}},{"value":"/     [[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":36999,"byte_end":37033,"line_start":1104,"line_end":1104,"column_start":1,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37034,"byte_end":37041,"line_start":1105,"line_end":1105,"column_start":1,"column_end":8}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37042,"byte_end":37081,"line_start":1106,"line_end":1106,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37082,"byte_end":37089,"line_start":1107,"line_end":1107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37090,"byte_end":37093,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation assumes that the nested `Vec`s are all the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37094,"byte_end":37170,"line_start":1109,"line_end":1109,"column_start":1,"column_end":77}},{"value":"/ same shape and that the `Vec` is non-empty. Depending on your application,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37171,"byte_end":37249,"line_start":1110,"line_end":1110,"column_start":1,"column_end":79}},{"value":"/ it may be a good idea to add checks for these assumptions and possibly","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37250,"byte_end":37324,"line_start":1111,"line_end":1111,"column_start":1,"column_end":75}},{"value":"/ choose a different way to handle the empty case.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37325,"byte_end":37377,"line_start":1112,"line_end":1112,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":37378,"byte_end":37381,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":3495},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44986,"byte_end":44994,"line_start":1266,"line_end":1266,"column_start":10,"column_end":18},"name":"ArcArray","qualname":"::ArcArray","value":"ArrayBase<OwnedArcRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array where the data has shared ownership and is copy on write.","sig":null,"attributes":[{"value":"/ An array where the data has shared ownership and is copy on write.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":43905,"byte_end":43975,"line_start":1244,"line_end":1244,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":43976,"byte_end":43979,"line_start":1245,"line_end":1245,"column_start":1,"column_end":4}},{"value":"/ The `ArcArray<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":43980,"byte_end":44061,"line_start":1246,"line_end":1246,"column_start":1,"column_end":82}},{"value":"/ the dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44062,"byte_end":44085,"line_start":1247,"line_end":1247,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44086,"byte_end":44089,"line_start":1248,"line_end":1248,"column_start":1,"column_end":4}},{"value":"/ It can act as both an owner as the data as well as a shared reference (view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44090,"byte_end":44169,"line_start":1249,"line_end":1249,"column_start":1,"column_end":80}},{"value":"/ like).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44170,"byte_end":44180,"line_start":1250,"line_end":1250,"column_start":1,"column_end":11}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44181,"byte_end":44250,"line_start":1251,"line_end":1251,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](struct.ArrayBase.html#method.view_mut) or","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44251,"byte_end":44311,"line_start":1252,"line_end":1252,"column_start":1,"column_end":61}},{"value":"/ [`get_mut()`](struct.ArrayBase.html#method.get_mut), will break sharing and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44312,"byte_end":44391,"line_start":1253,"line_end":1253,"column_start":1,"column_end":80}},{"value":"/ require a clone of the data (if it is not uniquely held).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44392,"byte_end":44453,"line_start":1254,"line_end":1254,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44454,"byte_end":44457,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ `ArcArray` uses atomic reference counting like `Arc`, so it is `Send` and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44458,"byte_end":44535,"line_start":1256,"line_end":1256,"column_start":1,"column_end":78}},{"value":"/ `Sync` (when allowed by the element type of the array too).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44536,"byte_end":44599,"line_start":1257,"line_end":1257,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44600,"byte_end":44603,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44604,"byte_end":44684,"line_start":1259,"line_end":1259,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44685,"byte_end":44762,"line_start":1260,"line_end":1260,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44763,"byte_end":44766,"line_start":1261,"line_end":1261,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44767,"byte_end":44780,"line_start":1262,"line_end":1262,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44781,"byte_end":44784,"line_start":1263,"line_end":1263,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44785,"byte_end":44889,"line_start":1264,"line_end":1264,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":44890,"byte_end":44976,"line_start":1265,"line_end":1265,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":3498},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45862,"byte_end":45867,"line_start":1289,"line_end":1289,"column_start":10,"column_end":15},"name":"Array","qualname":"::Array","value":"ArrayBase<OwnedRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array that owns its data uniquely.","sig":null,"attributes":[{"value":"/ An array that owns its data uniquely.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45035,"byte_end":45076,"line_start":1268,"line_end":1268,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45077,"byte_end":45080,"line_start":1269,"line_end":1269,"column_start":1,"column_end":4}},{"value":"/ `Array` is the main n-dimensional array type, and it owns all its array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45081,"byte_end":45156,"line_start":1270,"line_end":1270,"column_start":1,"column_end":76}},{"value":"/ elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45157,"byte_end":45170,"line_start":1271,"line_end":1271,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45171,"byte_end":45174,"line_start":1272,"line_end":1272,"column_start":1,"column_end":4}},{"value":"/ The `Array<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45175,"byte_end":45253,"line_start":1273,"line_end":1273,"column_start":1,"column_end":79}},{"value":"/ the dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45254,"byte_end":45277,"line_start":1274,"line_end":1274,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45278,"byte_end":45281,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45282,"byte_end":45362,"line_start":1276,"line_end":1276,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45363,"byte_end":45440,"line_start":1277,"line_end":1277,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45441,"byte_end":45444,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45445,"byte_end":45458,"line_start":1279,"line_end":1279,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45459,"byte_end":45462,"line_start":1280,"line_end":1280,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45463,"byte_end":45567,"line_start":1281,"line_end":1281,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45568,"byte_end":45654,"line_start":1282,"line_end":1282,"column_start":1,"column_end":87}},{"value":"/ + Dimensionality-specific type alises","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45655,"byte_end":45696,"line_start":1283,"line_end":1283,"column_start":1,"column_end":42}},{"value":"/ [`Array1`](type.Array1.html),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45697,"byte_end":45730,"line_start":1284,"line_end":1284,"column_start":1,"column_end":34}},{"value":"/ [`Array2`](type.Array2.html),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45731,"byte_end":45764,"line_start":1285,"line_end":1285,"column_start":1,"column_end":34}},{"value":"/ [`Array3`](type.Array3.html), ...,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45765,"byte_end":45803,"line_start":1286,"line_end":1286,"column_start":1,"column_end":39}},{"value":"/ [`ArrayD`](type.ArrayD.html),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45804,"byte_end":45837,"line_start":1287,"line_end":1287,"column_start":1,"column_end":34}},{"value":"/ and so on.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45838,"byte_end":45852,"line_start":1288,"line_end":1288,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":3501},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46781,"byte_end":46789,"line_start":1310,"line_end":1310,"column_start":10,"column_end":18},"name":"CowArray","qualname":"::CowArray","value":"ArrayBase<CowRepr, D>","parent":null,"children":[],"decl_id":null,"docs":" An array with copy-on-write behavior.","sig":null,"attributes":[{"value":"/ An array with copy-on-write behavior.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45905,"byte_end":45946,"line_start":1291,"line_end":1291,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45947,"byte_end":45950,"line_start":1292,"line_end":1292,"column_start":1,"column_end":4}},{"value":"/ An `CowArray` represents either a uniquely owned array or a view of an","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":45951,"byte_end":46025,"line_start":1293,"line_end":1293,"column_start":1,"column_end":75}},{"value":"/ array. The `'a` corresponds to the lifetime of the view variant.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46026,"byte_end":46094,"line_start":1294,"line_end":1294,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46095,"byte_end":46098,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ This type is analogous to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46099,"byte_end":46128,"line_start":1296,"line_end":1296,"column_start":1,"column_end":30}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46129,"byte_end":46206,"line_start":1297,"line_end":1297,"column_start":1,"column_end":78}},{"value":"/ If a `CowArray` instance is the immutable view variant, then calling a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46207,"byte_end":46281,"line_start":1298,"line_end":1298,"column_start":1,"column_end":75}},{"value":"/ method for mutating elements in the array will cause it to be converted","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46282,"byte_end":46357,"line_start":1299,"line_end":1299,"column_start":1,"column_end":76}},{"value":"/ into the owned variant (by cloning all the elements) before the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46358,"byte_end":46425,"line_start":1300,"line_end":1300,"column_start":1,"column_end":68}},{"value":"/ modification is performed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46426,"byte_end":46456,"line_start":1301,"line_end":1301,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46457,"byte_end":46460,"line_start":1302,"line_end":1302,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46461,"byte_end":46534,"line_start":1303,"line_end":1303,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46535,"byte_end":46538,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ See also [`ArcArray`](type.ArcArray.html), which also provides","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46539,"byte_end":46605,"line_start":1305,"line_end":1305,"column_start":1,"column_end":67}},{"value":"/ copy-on-write behavior but has a reference-counted pointer to the data","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46606,"byte_end":46680,"line_start":1306,"line_end":1306,"column_start":1,"column_end":75}},{"value":"/ instead of either a view or a uniquely owned copy.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46681,"byte_end":46735,"line_start":1307,"line_end":1307,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46736,"byte_end":46739,"line_start":1308,"line_end":1308,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46740,"byte_end":46771,"line_start":1309,"line_end":1309,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":3505},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47311,"byte_end":47320,"line_start":1325,"line_end":1325,"column_start":10,"column_end":19},"name":"ArrayView","qualname":"::ArrayView","value":"ArrayBase<ViewRepr<&'a A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view.","sig":null,"attributes":[{"value":"/ A read-only array view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46833,"byte_end":46860,"line_start":1312,"line_end":1312,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46861,"byte_end":46864,"line_start":1313,"line_end":1313,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46865,"byte_end":46932,"line_start":1314,"line_end":1314,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46933,"byte_end":46979,"line_start":1315,"line_end":1315,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46980,"byte_end":46983,"line_start":1316,"line_end":1316,"column_start":1,"column_end":4}},{"value":"/ The `ArrayView<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":46984,"byte_end":47059,"line_start":1317,"line_end":1317,"column_start":1,"column_end":76}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47060,"byte_end":47128,"line_start":1318,"line_end":1318,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47129,"byte_end":47132,"line_start":1319,"line_end":1319,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47133,"byte_end":47206,"line_start":1320,"line_end":1320,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47207,"byte_end":47210,"line_start":1321,"line_end":1321,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayViewMut`](type.ArrayViewMut.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47211,"byte_end":47265,"line_start":1322,"line_end":1322,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47266,"byte_end":47269,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47270,"byte_end":47301,"line_start":1324,"line_end":1324,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":3509},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47841,"byte_end":47853,"line_start":1340,"line_end":1340,"column_start":10,"column_end":22},"name":"ArrayViewMut","qualname":"::ArrayViewMut","value":"ArrayBase<ViewRepr<&'a mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-write array view.","sig":null,"attributes":[{"value":"/ A read-write array view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47365,"byte_end":47393,"line_start":1327,"line_end":1327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47394,"byte_end":47397,"line_start":1328,"line_end":1328,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47398,"byte_end":47465,"line_start":1329,"line_end":1329,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47466,"byte_end":47512,"line_start":1330,"line_end":1330,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47513,"byte_end":47516,"line_start":1331,"line_end":1331,"column_start":1,"column_end":4}},{"value":"/ The `ArrayViewMut<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47517,"byte_end":47595,"line_start":1332,"line_end":1332,"column_start":1,"column_end":79}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47596,"byte_end":47664,"line_start":1333,"line_end":1333,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47665,"byte_end":47668,"line_start":1334,"line_end":1334,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47669,"byte_end":47742,"line_start":1335,"line_end":1335,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47743,"byte_end":47746,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayView`](type.ArrayView.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47747,"byte_end":47795,"line_start":1337,"line_end":1337,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47796,"byte_end":47799,"line_start":1338,"line_end":1338,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47800,"byte_end":47831,"line_start":1339,"line_end":1339,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":3513},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48852,"byte_end":48864,"line_start":1365,"line_end":1365,"column_start":10,"column_end":22},"name":"RawArrayView","qualname":"::RawArrayView","value":"ArrayBase<RawViewRepr<*const A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view without a lifetime.","sig":null,"attributes":[{"value":"/ A read-only array view without a lifetime.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47902,"byte_end":47948,"line_start":1342,"line_end":1342,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47949,"byte_end":47952,"line_start":1343,"line_end":1343,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayView`] but does not carry any lifetime or","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":47953,"byte_end":48024,"line_start":1344,"line_end":1344,"column_start":1,"column_end":72}},{"value":"/ ownership information, and its data cannot be read without an unsafe","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48025,"byte_end":48097,"line_start":1345,"line_end":1345,"column_start":1,"column_end":73}},{"value":"/ conversion into an [`ArrayView`]. The relationship between `RawArrayView`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48098,"byte_end":48175,"line_start":1346,"line_end":1346,"column_start":1,"column_end":78}},{"value":"/ and [`ArrayView`] is somewhat analogous to the relationship between `*const","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48176,"byte_end":48255,"line_start":1347,"line_end":1347,"column_start":1,"column_end":80}},{"value":"/ T` and `&T`, but `RawArrayView` has additional requirements that `*const T`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48256,"byte_end":48335,"line_start":1348,"line_end":1348,"column_start":1,"column_end":80}},{"value":"/ does not, such as non-nullness.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48336,"byte_end":48371,"line_start":1349,"line_end":1349,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48372,"byte_end":48375,"line_start":1350,"line_end":1350,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48376,"byte_end":48414,"line_start":1351,"line_end":1351,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48415,"byte_end":48418,"line_start":1352,"line_end":1352,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayView<A, D>` is parameterized by `A` for the element type and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48419,"byte_end":48496,"line_start":1353,"line_end":1353,"column_start":1,"column_end":78}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48497,"byte_end":48528,"line_start":1354,"line_end":1354,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48529,"byte_end":48532,"line_start":1355,"line_end":1355,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48533,"byte_end":48590,"line_start":1356,"line_end":1356,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48591,"byte_end":48633,"line_start":1357,"line_end":1357,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48634,"byte_end":48637,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayViewMut`](type.RawArrayViewMut.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48638,"byte_end":48698,"line_start":1359,"line_end":1359,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48699,"byte_end":48702,"line_start":1360,"line_end":1360,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48703,"byte_end":48716,"line_start":1361,"line_end":1361,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48717,"byte_end":48720,"line_start":1362,"line_end":1362,"column_start":1,"column_end":4}},{"value":"/ You can't use this type wih an arbitrary raw pointer; see","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48721,"byte_end":48782,"line_start":1363,"line_end":1363,"column_start":1,"column_end":62}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48783,"byte_end":48842,"line_start":1364,"line_end":1364,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":3516},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49885,"byte_end":49900,"line_start":1390,"line_end":1390,"column_start":10,"column_end":25},"name":"RawArrayViewMut","qualname":"::RawArrayViewMut","value":"ArrayBase<RawViewRepr<*mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable array view without a lifetime.","sig":null,"attributes":[{"value":"/ A mutable array view without a lifetime.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48911,"byte_end":48955,"line_start":1367,"line_end":1367,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48956,"byte_end":48959,"line_start":1368,"line_end":1368,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayViewMut`] but does not carry any lifetime or","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":48960,"byte_end":49034,"line_start":1369,"line_end":1369,"column_start":1,"column_end":75}},{"value":"/ ownership information, and its data cannot be read/written without an","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49035,"byte_end":49108,"line_start":1370,"line_end":1370,"column_start":1,"column_end":74}},{"value":"/ unsafe conversion into an [`ArrayViewMut`]. The relationship between","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49109,"byte_end":49181,"line_start":1371,"line_end":1371,"column_start":1,"column_end":73}},{"value":"/ `RawArrayViewMut` and [`ArrayViewMut`] is somewhat analogous to the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49182,"byte_end":49253,"line_start":1372,"line_end":1372,"column_start":1,"column_end":72}},{"value":"/ relationship between `*mut T` and `&mut T`, but `RawArrayViewMut` has","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49254,"byte_end":49327,"line_start":1373,"line_end":1373,"column_start":1,"column_end":74}},{"value":"/ additional requirements that `*mut T` does not, such as non-nullness.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49328,"byte_end":49401,"line_start":1374,"line_end":1374,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49402,"byte_end":49405,"line_start":1375,"line_end":1375,"column_start":1,"column_end":4}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49406,"byte_end":49450,"line_start":1376,"line_end":1376,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49451,"byte_end":49454,"line_start":1377,"line_end":1377,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayViewMut<A, D>` is parameterized by `A` for the element type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49455,"byte_end":49531,"line_start":1378,"line_end":1378,"column_start":1,"column_end":77}},{"value":"/ and `D` for the dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49532,"byte_end":49567,"line_start":1379,"line_end":1379,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49568,"byte_end":49571,"line_start":1380,"line_end":1380,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49572,"byte_end":49629,"line_start":1381,"line_end":1381,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49630,"byte_end":49672,"line_start":1382,"line_end":1382,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49673,"byte_end":49676,"line_start":1383,"line_end":1383,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayView`](type.RawArrayView.html).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49677,"byte_end":49731,"line_start":1384,"line_end":1384,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49732,"byte_end":49735,"line_start":1385,"line_end":1385,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49736,"byte_end":49749,"line_start":1386,"line_end":1386,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49750,"byte_end":49753,"line_start":1387,"line_end":1387,"column_start":1,"column_end":4}},{"value":"/ You can't use this type wih an arbitrary raw pointer; see","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49754,"byte_end":49815,"line_start":1388,"line_end":1388,"column_start":1,"column_end":62}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49816,"byte_end":49875,"line_start":1389,"line_end":1389,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6324},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50154,"byte_end":50166,"line_start":1399,"line_end":1399,"column_start":12,"column_end":24},"name":"OwnedArcRepr","qualname":"::OwnedArcRepr","value":"","parent":null,"children":[],"decl_id":null,"docs":" ArcArray's representation.","sig":null,"attributes":[{"value":"/ ArcArray's representation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":49976,"byte_end":50006,"line_start":1394,"line_end":1394,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50007,"byte_end":50010,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50011,"byte_end":50067,"line_start":1396,"line_end":1396,"column_start":1,"column_end":53}},{"value":"/ [`ArcArray`](type.ArcArray.html) for the array type!*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50068,"byte_end":50125,"line_start":1397,"line_end":1397,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6331},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50630,"byte_end":50641,"line_start":1414,"line_end":1414,"column_start":12,"column_end":23},"name":"RawViewRepr","qualname":"::RawViewRepr","value":"RawViewRepr {  }","parent":null,"children":[{"krate":0,"index":6333}],"decl_id":null,"docs":" Array pointer’s representation.","sig":null,"attributes":[{"value":"/ Array pointer’s representation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50303,"byte_end":50340,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50341,"byte_end":50344,"line_start":1408,"line_end":1408,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50345,"byte_end":50403,"line_start":1409,"line_end":1409,"column_start":1,"column_end":55}},{"value":"/ [`RawArrayView`](type.RawArrayView.html) /","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50404,"byte_end":50450,"line_start":1410,"line_end":1410,"column_start":1,"column_end":47}},{"value":"/ [`RawArrayViewMut`](type.RawArrayViewMut.html) for the array type!*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50451,"byte_end":50522,"line_start":1411,"line_end":1411,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6339},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51098,"byte_end":51106,"line_start":1432,"line_end":1432,"column_start":12,"column_end":20},"name":"ViewRepr","qualname":"::ViewRepr","value":"ViewRepr {  }","parent":null,"children":[{"krate":0,"index":6341}],"decl_id":null,"docs":" Array view’s representation.","sig":null,"attributes":[{"value":"/ Array view’s representation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50795,"byte_end":50829,"line_start":1425,"line_end":1425,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50830,"byte_end":50833,"line_start":1426,"line_end":1426,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50834,"byte_end":50892,"line_start":1427,"line_end":1427,"column_start":1,"column_end":55}},{"value":"/ [`ArrayView`](type.ArrayView.html)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50893,"byte_end":50931,"line_start":1428,"line_end":1428,"column_start":1,"column_end":39}},{"value":"/ / [`ArrayViewMut`](type.ArrayViewMut.html) for the array type!*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50932,"byte_end":50999,"line_start":1429,"line_end":1429,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3534},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51457,"byte_end":51461,"line_start":1449,"line_end":1449,"column_start":5,"column_end":9},"name":"View","qualname":"::CowRepr::View","value":"CowRepr::View(ViewRepr<&'a A>)","parent":{"krate":0,"index":3531},"children":[],"decl_id":null,"docs":" Borrowed data.\n","sig":null,"attributes":[{"value":"/ Borrowed data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51434,"byte_end":51452,"line_start":1448,"line_end":1448,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3537},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51504,"byte_end":51509,"line_start":1451,"line_end":1451,"column_start":5,"column_end":10},"name":"Owned","qualname":"::CowRepr::Owned","value":"CowRepr::Owned(OwnedRepr<A>)","parent":{"krate":0,"index":3531},"children":[],"decl_id":null,"docs":" Owned data.\n","sig":null,"attributes":[{"value":"/ Owned data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51484,"byte_end":51499,"line_start":1450,"line_end":1450,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3531},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51413,"byte_end":51420,"line_start":1447,"line_end":1447,"column_start":10,"column_end":17},"name":"CowRepr","qualname":"::CowRepr","value":"pub enum CowRepr<'a, A> { View(ViewRepr<&'a A>), Owned(OwnedRepr<A>), }","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3537}],"decl_id":null,"docs":" CowArray's representation.","sig":null,"attributes":[{"value":"/ CowArray's representation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51256,"byte_end":51286,"line_start":1443,"line_end":1443,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51287,"byte_end":51290,"line_start":1444,"line_end":1444,"column_start":1,"column_end":4}},{"value":"/ *Don't use this type directly—use the type alias","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51291,"byte_end":51345,"line_start":1445,"line_end":1445,"column_start":1,"column_end":53}},{"value":"/ [`CowArray`](type.CowArray.html) for the array type!*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51346,"byte_end":51403,"line_start":1446,"line_end":1446,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51627,"byte_end":51634,"line_start":1456,"line_end":1456,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowRepr>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `View` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `View` variant.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51561,"byte_end":51615,"line_start":1455,"line_end":1455,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51839,"byte_end":51847,"line_start":1464,"line_end":1464,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowRepr>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `Owned` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `Owned` variant.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51772,"byte_end":51827,"line_start":1463,"line_end":1463,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397274,"byte_end":397282,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ArrayBase<S, Ix1>>::from_vec","value":"pub fn from_vec(Vec<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from a vector (no copying needed).","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from a vector (no copying needed).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":396929,"byte_end":396998,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397003,"byte_end":397006,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397011,"byte_end":397069,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397074,"byte_end":397077,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397082,"byte_end":397093,"line_start":42,"line_end":42,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397098,"byte_end":397121,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397126,"byte_end":397129,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from(vec![1., 2., 3., 4.]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397134,"byte_end":397184,"line_start":45,"line_end":45,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397189,"byte_end":397196,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"use standard `from`\", since = \"0.13.0\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397201,"byte_end":397262,"line_start":47,"line_end":47,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398084,"byte_end":398092,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"linspace","qualname":"<ArrayBase<S, Ix1>>::linspace","value":"pub fn linspace(A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` evenly spaced elements from\n `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` evenly spaced elements from","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397337,"byte_end":397408,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397413,"byte_end":397481,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397486,"byte_end":397489,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that if `start > end`, the first element will still be `start`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397494,"byte_end":397566,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ and the following elements will be decreasing. This is different from","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397571,"byte_end":397644,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ the behavior of `std::ops::RangeInclusive`, which interprets `start >","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397649,"byte_end":397722,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ end` to mean that the range is empty.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397727,"byte_end":397768,"line_start":58,"line_end":58,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397773,"byte_end":397776,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397781,"byte_end":397856,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397861,"byte_end":397883,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397888,"byte_end":397891,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397896,"byte_end":397907,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397912,"byte_end":397943,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397948,"byte_end":397951,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let array = Array::linspace(0., 1., 5);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":397956,"byte_end":397999,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/ assert!(array == arr1(&[0.0, 0.25, 0.5, 0.75, 1.0]))","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398004,"byte_end":398060,"line_start":67,"line_end":67,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398065,"byte_end":398072,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398649,"byte_end":398654,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"range","qualname":"<ArrayBase<S, Ix1>>::range","value":"pub fn range(A, A, A) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `start` to `end`\n (exclusive), incrementing by `step`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `start` to `end`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398236,"byte_end":398306,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ (exclusive), incrementing by `step`. `A` must be a floating point type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398311,"byte_end":398386,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398391,"byte_end":398394,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398399,"byte_end":398457,"line_start":79,"line_end":79,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398462,"byte_end":398465,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398470,"byte_end":398481,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398486,"byte_end":398517,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398522,"byte_end":398525,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let array = Array::range(0., 5., 1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398530,"byte_end":398571,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ assert!(array == arr1(&[0., 1., 2., 3., 4.]))","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398576,"byte_end":398625,"line_start":85,"line_end":85,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398630,"byte_end":398637,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399636,"byte_end":399644,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"logspace","qualname":"<ArrayBase<S, Ix1>>::logspace","value":"pub fn logspace(A, A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` logarithmically spaced\n elements, with the starting value being `base.powf(start)` and the\n final one being `base.powf(end)`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` logarithmically spaced","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398797,"byte_end":398863,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ elements, with the starting value being `base.powf(start)` and the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398868,"byte_end":398938,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ final one being `base.powf(end)`. `A` must be a floating point type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":398943,"byte_end":399015,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399020,"byte_end":399023,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If `base` is negative, all values will be negative.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399028,"byte_end":399083,"line_start":98,"line_end":98,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399088,"byte_end":399091,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399096,"byte_end":399171,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399176,"byte_end":399198,"line_start":101,"line_end":101,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399203,"byte_end":399206,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399211,"byte_end":399222,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399227,"byte_end":399262,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399267,"byte_end":399298,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399303,"byte_end":399306,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399311,"byte_end":399345,"line_start":107,"line_end":107,"column_start":5,"column_end":39}},{"value":"/ let array = Array::logspace(10.0, 0.0, 3.0, 4);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399350,"byte_end":399401,"line_start":108,"line_end":108,"column_start":5,"column_end":56}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399406,"byte_end":399466,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399471,"byte_end":399474,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let array = Array::logspace(-10.0, 3.0, 0.0, 4);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399479,"byte_end":399531,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399536,"byte_end":399600,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399605,"byte_end":399612,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399617,"byte_end":399624,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400857,"byte_end":400866,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"geomspace","qualname":"<ArrayBase<S, Ix1>>::geomspace","value":"pub fn geomspace(A, A, usize) -> Option<Self> where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` geometrically spaced elements\n from `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` geometrically spaced elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399803,"byte_end":399876,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/ from `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399881,"byte_end":399954,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399959,"byte_end":399962,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `start` and `end` have different signs or if either","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":399967,"byte_end":400040,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ one is zero. Conceptually, this means that in order to obtain a `Some`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400045,"byte_end":400119,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ result, `end / start` must be positive.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400124,"byte_end":400167,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400172,"byte_end":400175,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400180,"byte_end":400255,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400260,"byte_end":400282,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400287,"byte_end":400290,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400295,"byte_end":400306,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400311,"byte_end":400346,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400351,"byte_end":400382,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400387,"byte_end":400390,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Option<()> {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400395,"byte_end":400429,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400434,"byte_end":400468,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/ let array = Array::geomspace(1e0, 1e3, 4)?;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400473,"byte_end":400520,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]), epsilon = 1e-12);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400525,"byte_end":400602,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400607,"byte_end":400610,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let array = Array::geomspace(-1e3, -1e0, 4)?;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400615,"byte_end":400664,"line_start":141,"line_end":141,"column_start":5,"column_end":54}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]), epsilon = 1e-12);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400669,"byte_end":400750,"line_start":142,"line_end":142,"column_start":5,"column_end":86}},{"value":"/ # }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400755,"byte_end":400762,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # Some(())","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400767,"byte_end":400781,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400786,"byte_end":400793,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400798,"byte_end":400803,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # example().unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400808,"byte_end":400833,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":400838,"byte_end":400845,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401283,"byte_end":401286,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"eye","qualname":"<ArrayBase<S, Ix2>>::eye","value":"pub fn eye(Ix) -> Self where S: DataMut, A: Clone + Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create an identity matrix of size `n` (square 2D array).","sig":null,"attributes":[{"value":"/ Create an identity matrix of size `n` (square 2D array).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401149,"byte_end":401209,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401214,"byte_end":401217,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n * n` would overflow `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401222,"byte_end":401271,"line_start":164,"line_end":164,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401863,"byte_end":401872,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"from_diag","qualname":"<ArrayBase<S, Ix2>>::from_diag","value":"pub fn from_diag<S2>(&ArrayBase<S2, Ix1>) -> Self where A: Clone + Zero,\nS: DataMut, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D matrix from its diagonal","sig":null,"attributes":[{"value":"/ Create a 2D matrix from its diagonal","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401512,"byte_end":401552,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401557,"byte_end":401560,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `diag.len() * diag.len()` would overflow `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401565,"byte_end":401632,"line_start":179,"line_end":179,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401637,"byte_end":401640,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401645,"byte_end":401656,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array2, arr1, arr2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401661,"byte_end":401699,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401704,"byte_end":401707,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let diag = arr1(&[1, 2]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401712,"byte_end":401741,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/ let array = Array2::from_diag(&diag);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401746,"byte_end":401787,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(array, arr2(&[[1, 0], [0, 2]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401792,"byte_end":401839,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401844,"byte_end":401851,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404453,"byte_end":404462,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<ArrayBase<S, D>>::from_elem","value":"pub fn from_elem<Sh>(Sh, A) -> Self where A: Clone, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with copies of `elem`, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with copies of `elem`, shape `shape`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403831,"byte_end":403888,"line_start":249,"line_end":249,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403893,"byte_end":403896,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403901,"byte_end":403974,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403979,"byte_end":403982,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403987,"byte_end":403994,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr3, ShapeBuilder};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403999,"byte_end":404044,"line_start":254,"line_end":254,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404049,"byte_end":404052,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 2, 2), 1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404057,"byte_end":404101,"line_start":256,"line_end":256,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404106,"byte_end":404109,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404114,"byte_end":404126,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404131,"byte_end":404161,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404166,"byte_end":404197,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/                 [[1., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404202,"byte_end":404232,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404237,"byte_end":404269,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404274,"byte_end":404280,"line_start":263,"line_end":263,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[4, 2, 1]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404285,"byte_end":404324,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404329,"byte_end":404332,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_elem((2, 2, 2).f(), 1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404337,"byte_end":404385,"line_start":266,"line_end":266,"column_start":5,"column_end":53}},{"value":"/ assert!(b.strides() == &[1, 2, 4]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404390,"byte_end":404429,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404434,"byte_end":404441,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404915,"byte_end":404920,"line_start":283,"line_end":283,"column_start":12,"column_end":17},"name":"zeros","qualname":"<ArrayBase<S, D>>::zeros","value":"pub fn zeros<Sh>(Sh) -> Self where A: Clone + Zero, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with zeros, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with zeros, shape `shape`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404771,"byte_end":404817,"line_start":280,"line_end":280,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404822,"byte_end":404825,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":404830,"byte_end":404903,"line_start":282,"line_end":282,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405216,"byte_end":405220,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"ones","qualname":"<ArrayBase<S, D>>::ones","value":"pub fn ones<Sh>(Sh) -> Self where A: Clone + One, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with ones, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with ones, shape `shape`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405073,"byte_end":405118,"line_start":291,"line_end":291,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405123,"byte_end":405126,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405131,"byte_end":405204,"line_start":293,"line_end":293,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405523,"byte_end":405530,"line_start":305,"line_end":305,"column_start":12,"column_end":19},"name":"default","qualname":"<ArrayBase<S, D>>::default","value":"pub fn default<Sh>(Sh) -> Self where A: Default, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with default values, shape `shape`","sig":null,"attributes":[{"value":"/ Create an array with default values, shape `shape`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405371,"byte_end":405425,"line_start":302,"line_end":302,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405430,"byte_end":405433,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405438,"byte_end":405511,"line_start":304,"line_end":304,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406209,"byte_end":406229,"line_start":323,"line_end":323,"column_start":12,"column_end":32},"name":"from_shape_simple_fn","qualname":"<ArrayBase<S, D>>::from_shape_simple_fn","value":"pub fn from_shape_simple_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim =\nD>, F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405690,"byte_end":405750,"line_start":313,"line_end":313,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405755,"byte_end":405758,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ `f` is called with no argument, and it should return the element to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405763,"byte_end":405834,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/ create. If the precise index of the element to create is needed,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405839,"byte_end":405907,"line_start":316,"line_end":316,"column_start":5,"column_end":73}},{"value":"/ use [`from_shape_fn`](ArrayBase::from_shape_fn) instead.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405912,"byte_end":405972,"line_start":317,"line_end":317,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405977,"byte_end":405980,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This constructor can be useful if the element order is not important,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":405985,"byte_end":406058,"line_start":319,"line_end":319,"column_start":5,"column_end":78}},{"value":"/ for example if they are identical or random.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406063,"byte_end":406111,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406116,"byte_end":406119,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406124,"byte_end":406197,"line_start":322,"line_end":322,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407222,"byte_end":407235,"line_start":354,"line_end":354,"column_start":12,"column_end":25},"name":"from_shape_fn","qualname":"<ArrayBase<S, D>>::from_shape_fn","value":"pub fn from_shape_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim = D>,\nF: FnMut(D::Pattern) -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406567,"byte_end":406627,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406632,"byte_end":406635,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ `f` is called with the index of the element to create; the elements are","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406640,"byte_end":406715,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406720,"byte_end":406751,"line_start":337,"line_end":337,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406756,"byte_end":406759,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406764,"byte_end":406837,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406842,"byte_end":406845,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406850,"byte_end":406857,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406862,"byte_end":406893,"line_start":342,"line_end":342,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406898,"byte_end":406901,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ // Create a table of i × j (with i and j from 1 to 3)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406906,"byte_end":406965,"line_start":344,"line_end":344,"column_start":5,"column_end":62}},{"value":"/ let ij_table = Array::from_shape_fn((3, 3), |(i, j)| (1 + i) * (1 + j));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":406970,"byte_end":407046,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407051,"byte_end":407054,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407059,"byte_end":407074,"line_start":347,"line_end":347,"column_start":5,"column_end":20}},{"value":"/     ij_table,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407079,"byte_end":407096,"line_start":348,"line_end":348,"column_start":5,"column_end":22}},{"value":"/     arr2(&[[1, 2, 3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407101,"byte_end":407126,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/            [2, 4, 6],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407131,"byte_end":407156,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/            [3, 6, 9]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407161,"byte_end":407187,"line_start":351,"line_end":351,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407192,"byte_end":407198,"line_start":352,"line_end":352,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407203,"byte_end":407210,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408998,"byte_end":409012,"line_start":404,"line_end":404,"column_start":12,"column_end":26},"name":"from_shape_vec","qualname":"<ArrayBase<S, D>>::from_shape_vec","value":"pub fn from_shape_vec<Sh>(Sh, Vec<A>) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with the given shape from a vector. (No cloning of\n elements needed.)","sig":null,"attributes":[{"value":"/ Create an array with the given shape from a vector. (No cloning of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407830,"byte_end":407900,"line_start":371,"line_end":371,"column_start":5,"column_end":75}},{"value":"/ elements needed.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407905,"byte_end":407926,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407931,"byte_end":407934,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407939,"byte_end":407947,"line_start":374,"line_end":374,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407952,"byte_end":407955,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ For a contiguous c- or f-order shape, the following applies:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":407960,"byte_end":408024,"line_start":376,"line_end":376,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408029,"byte_end":408032,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ **Errors** if `shape` does not correspond to the number of elements in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408037,"byte_end":408111,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ `v` or if the shape/strides would result in overflowing `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408116,"byte_end":408184,"line_start":379,"line_end":379,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408189,"byte_end":408192,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408197,"byte_end":408205,"line_start":381,"line_end":381,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408210,"byte_end":408213,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ For custom strides, the following applies:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408218,"byte_end":408264,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408269,"byte_end":408272,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ **Errors** if strides and dimensions can point out of bounds of `v`, if","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408277,"byte_end":408352,"line_start":385,"line_end":385,"column_start":5,"column_end":80}},{"value":"/ strides allow multiple indices to point to the same element, or if the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408357,"byte_end":408431,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ shape/strides would result in overflowing `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408436,"byte_end":408490,"line_start":387,"line_end":387,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408495,"byte_end":408498,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408503,"byte_end":408510,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408515,"byte_end":408538,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/ use ndarray::ShapeBuilder; // Needed for .strides() method","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408543,"byte_end":408605,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408610,"byte_end":408632,"line_start":392,"line_end":392,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408637,"byte_end":408640,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_shape_vec((2, 2), vec![1., 2., 3., 4.]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408645,"byte_end":408709,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/ assert!(a.is_ok());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408714,"byte_end":408737,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408742,"byte_end":408745,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_shape_vec((2, 2).strides((1, 2)),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408750,"byte_end":408807,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/                               vec![1., 2., 3., 4.]).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408812,"byte_end":408877,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408882,"byte_end":408894,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/     b == arr2(&[[1., 3.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408899,"byte_end":408928,"line_start":400,"line_end":400,"column_start":5,"column_end":34}},{"value":"/                 [2., 4.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408933,"byte_end":408963,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408968,"byte_end":408974,"line_start":402,"line_end":402,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":408979,"byte_end":408986,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410808,"byte_end":410832,"line_start":449,"line_end":449,"column_start":19,"column_end":43},"name":"from_shape_vec_unchecked","qualname":"<ArrayBase<S, D>>::from_shape_vec_unchecked","value":"pub unsafe fn from_shape_vec_unchecked<Sh>(Sh, Vec<A>) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an array from a vector and interpret it according to the\n provided shape and strides. (No cloning of elements needed.)","sig":null,"attributes":[{"value":"/ Creates an array from a vector and interpret it according to the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":409796,"byte_end":409864,"line_start":426,"line_end":426,"column_start":5,"column_end":73}},{"value":"/ provided shape and strides. (No cloning of elements needed.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":409869,"byte_end":409933,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":409938,"byte_end":409941,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":409946,"byte_end":409958,"line_start":429,"line_end":429,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":409963,"byte_end":409966,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the following conditions are met:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":409971,"byte_end":410036,"line_start":431,"line_end":431,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410041,"byte_end":410044,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ 1. The ndim of `dim` and `strides` must be the same.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410049,"byte_end":410105,"line_start":433,"line_end":433,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410110,"byte_end":410113,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ 2. The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410118,"byte_end":410191,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410196,"byte_end":410199,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ 3. For axes with length > 1, the stride must be nonnegative.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410204,"byte_end":410268,"line_start":437,"line_end":437,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410273,"byte_end":410276,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ 4. If the array will be empty (any axes are zero-length), the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410281,"byte_end":410346,"line_start":439,"line_end":439,"column_start":5,"column_end":70}},{"value":"/    difference between the least address and greatest address accessible","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410351,"byte_end":410426,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/    by moving along all axes must be ≤ `v.len()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410431,"byte_end":410485,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410490,"byte_end":410493,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/    If the array will not be empty, the difference between the least","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410498,"byte_end":410569,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/    address and greatest address accessible by moving along all axes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410574,"byte_end":410645,"line_start":444,"line_end":444,"column_start":5,"column_end":76}},{"value":"/    must be < `v.len()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410650,"byte_end":410677,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410682,"byte_end":410685,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ 5. The strides must not allow any element to be referenced by two different","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410690,"byte_end":410769,"line_start":447,"line_end":447,"column_start":5,"column_end":84}},{"value":"/    indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":410774,"byte_end":410789,"line_start":448,"line_end":448,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412627,"byte_end":412640,"line_start":491,"line_end":491,"column_start":19,"column_end":32},"name":"uninitialized","qualname":"<ArrayBase<S, D>>::uninitialized","value":"pub unsafe fn uninitialized<Sh>(Sh) -> Self where A: Copy,\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411442,"byte_end":411504,"line_start":468,"line_end":468,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411509,"byte_end":411512,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Prefer to use [`maybe_uninit()`](ArrayBase::maybe_uninit) if possible, because it is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411517,"byte_end":411605,"line_start":470,"line_end":470,"column_start":5,"column_end":93}},{"value":"/ easier to use correctly.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411610,"byte_end":411638,"line_start":471,"line_end":471,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411643,"byte_end":411646,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411651,"byte_end":411724,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411729,"byte_end":411732,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411737,"byte_end":411751,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411756,"byte_end":411759,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Accessing uninitalized values is undefined behaviour. You must overwrite *all* the elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411764,"byte_end":411859,"line_start":477,"line_end":477,"column_start":5,"column_end":100}},{"value":"/ in the array after it is created; for example using","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411864,"byte_end":411919,"line_start":478,"line_end":478,"column_start":5,"column_end":60}},{"value":"/ [`raw_view_mut`](ArrayBase::raw_view_mut) or other low-level element access.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":411924,"byte_end":412004,"line_start":479,"line_end":479,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412009,"byte_end":412012,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ The contents of the array is indeterminate before initialization and it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412017,"byte_end":412092,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ is an error to perform operations that use the previous values. For","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412097,"byte_end":412168,"line_start":482,"line_end":482,"column_start":5,"column_end":76}},{"value":"/ example it would not be legal to use `a += 1.;` on such an array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412173,"byte_end":412242,"line_start":483,"line_end":483,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412247,"byte_end":412250,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ This constructor is limited to elements where `A: Copy` (no destructors)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412255,"byte_end":412331,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ to avoid users shooting themselves too hard in the foot.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412336,"byte_end":412396,"line_start":486,"line_end":486,"column_start":5,"column_end":65}},{"value":"/ ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412401,"byte_end":412405,"line_start":487,"line_end":487,"column_start":5,"column_end":9}},{"value":"/ (Also note that the constructors `from_shape_vec` and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412410,"byte_end":412467,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/ `from_shape_vec_unchecked` allow the user yet more control, in the sense","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412472,"byte_end":412548,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ that Arrays can be created from arbitrary vectors.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412553,"byte_end":412608,"line_start":490,"line_end":490,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415318,"byte_end":415330,"line_start":570,"line_end":570,"column_start":12,"column_end":24},"name":"maybe_uninit","qualname":"<ArrayBase<S, D>>::maybe_uninit","value":"pub fn maybe_uninit<Sh>(Sh) -> Self where Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413064,"byte_end":413126,"line_start":509,"line_end":509,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413131,"byte_end":413134,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ The uninitialized elements of type `A` are represented by the type `MaybeUninit<A>`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413139,"byte_end":413227,"line_start":511,"line_end":511,"column_start":5,"column_end":93}},{"value":"/ an easier way to handle uninit values correctly.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413232,"byte_end":413284,"line_start":512,"line_end":512,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413289,"byte_end":413292,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Only *when* the array is completely initialized with valid elements, can it be","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413297,"byte_end":413379,"line_start":514,"line_end":514,"column_start":5,"column_end":87}},{"value":"/ converted to an array of `A` elements using [`.assume_init()`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413384,"byte_end":413451,"line_start":515,"line_end":515,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413456,"byte_end":413459,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413464,"byte_end":413537,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413542,"byte_end":413545,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413550,"byte_end":413564,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413569,"byte_end":413572,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ The whole of the array must be initialized before it is converted","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413577,"byte_end":413646,"line_start":521,"line_end":521,"column_start":5,"column_end":74}},{"value":"/ using [`.assume_init()`] or otherwise traversed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413651,"byte_end":413703,"line_start":522,"line_end":522,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413708,"byte_end":413711,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413716,"byte_end":413732,"line_start":524,"line_end":524,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413737,"byte_end":413740,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ It is possible to assign individual values through `*elt = MaybeUninit::new(value)`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413745,"byte_end":413832,"line_start":526,"line_end":526,"column_start":5,"column_end":92}},{"value":"/ and so on.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413837,"byte_end":413851,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413856,"byte_end":413859,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ [`.assume_init()`]: ArrayBase::assume_init","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413864,"byte_end":413910,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413915,"byte_end":413918,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413923,"byte_end":413930,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{s, Array2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413935,"byte_end":413964,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413969,"byte_end":413990,"line_start":533,"line_end":533,"column_start":5,"column_end":26}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":413995,"byte_end":414017,"line_start":534,"line_end":534,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414022,"byte_end":414025,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ // Example Task: Let's create a column shifted copy of the input","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414030,"byte_end":414098,"line_start":536,"line_end":536,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414103,"byte_end":414106,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ fn shift_by_two(a: &Array2<f32>) -> Array2<f32> {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414111,"byte_end":414164,"line_start":538,"line_end":538,"column_start":5,"column_end":58}},{"value":"/     // create an uninitialized array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414169,"byte_end":414209,"line_start":539,"line_end":539,"column_start":5,"column_end":45}},{"value":"/     let mut b = Array2::maybe_uninit(a.dim());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414214,"byte_end":414264,"line_start":540,"line_end":540,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414269,"byte_end":414272,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // two first columns in b are two last in a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414277,"byte_end":414328,"line_start":542,"line_end":542,"column_start":5,"column_end":56}},{"value":"/     // rest of columns in b are the initial columns in a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414333,"byte_end":414393,"line_start":543,"line_end":543,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414398,"byte_end":414401,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     assign_to(a.slice(s![.., -2..]), b.slice_mut(s![.., ..2]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414406,"byte_end":414473,"line_start":545,"line_end":545,"column_start":5,"column_end":72}},{"value":"/     assign_to(a.slice(s![.., 2..]), b.slice_mut(s![.., ..-2]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414478,"byte_end":414545,"line_start":546,"line_end":546,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414550,"byte_end":414553,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/     // Now we can promise that `b` is safe to use with all operations","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414558,"byte_end":414631,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/     unsafe {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414636,"byte_end":414652,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/         b.assume_init()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414657,"byte_end":414684,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414689,"byte_end":414698,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414703,"byte_end":414708,"line_start":552,"line_end":552,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414713,"byte_end":414716,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ use ndarray::{IntoNdProducer, AssignElem};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414721,"byte_end":414767,"line_start":554,"line_end":554,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414772,"byte_end":414775,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ // This function clones elements from the first input to the second;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414780,"byte_end":414852,"line_start":556,"line_end":556,"column_start":5,"column_end":77}},{"value":"/ // the two producers must have the same shape","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414857,"byte_end":414906,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/ fn assign_to<'a, P1, P2, A>(from: P1, to: P2)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414911,"byte_end":414960,"line_start":558,"line_end":558,"column_start":5,"column_end":54}},{"value":"/     where P1: IntoNdProducer<Item = &'a A>,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":414965,"byte_end":415012,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/           P2: IntoNdProducer<Dim = P1::Dim>,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415017,"byte_end":415065,"line_start":560,"line_end":560,"column_start":5,"column_end":53}},{"value":"/           P2::Item: AssignElem<A>,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415070,"byte_end":415108,"line_start":561,"line_end":561,"column_start":5,"column_end":43}},{"value":"/           A: Clone + 'a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415113,"byte_end":415140,"line_start":562,"line_end":562,"column_start":5,"column_end":32}},{"value":"/ {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415145,"byte_end":415150,"line_start":563,"line_end":563,"column_start":5,"column_end":10}},{"value":"/     Zip::from(from)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415155,"byte_end":415178,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/         .apply_assign_into(to, A::clone);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415183,"byte_end":415228,"line_start":565,"line_end":565,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415233,"byte_end":415238,"line_start":566,"line_end":566,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415243,"byte_end":415246,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # shift_by_two(&Array2::zeros((8, 8)));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415251,"byte_end":415294,"line_start":568,"line_end":568,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":415299,"byte_end":415306,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":416928,"byte_end":416931,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"len","qualname":"<ArrayBase<S, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of elements in the array.\n","sig":null,"attributes":[{"value":"/ Return the total number of elements in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":416863,"byte_end":416916,"line_start":40,"line_end":40,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417224,"byte_end":417230,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"len_of","qualname":"<ArrayBase<S, D>>::len_of","value":"pub fn len_of(&Self, Axis) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of `axis`.","sig":null,"attributes":[{"value":"/ Return the length of `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":416985,"byte_end":417017,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417022,"byte_end":417025,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417030,"byte_end":417103,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417108,"byte_end":417153,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417158,"byte_end":417161,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417166,"byte_end":417212,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417360,"byte_end":417368,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArrayBase<S, D>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the array has any elements\n","sig":null,"attributes":[{"value":"/ Return whether the array has any elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417303,"byte_end":417348,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417488,"byte_end":417492,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"ndim","qualname":"<ArrayBase<S, D>>::ndim","value":"pub fn ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of dimensions (axes) in the array\n","sig":null,"attributes":[{"value":"/ Return the number of dimensions (axes) in the array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417421,"byte_end":417476,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417718,"byte_end":417721,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"dim","qualname":"<ArrayBase<S, D>>::dim","value":"pub fn dim(&Self) -> D::Pattern","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array in its “pattern” form,\n an integer in the one-dimensional case, tuple in the n-dimensional cases\n and so on.\n","sig":null,"attributes":[{"value":"/ Return the shape of the array in its “pattern” form,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417546,"byte_end":417606,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/ an integer in the one-dimensional case, tuple in the n-dimensional cases","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417611,"byte_end":417687,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ and so on.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417692,"byte_end":417706,"line_start":67,"line_end":67,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418303,"byte_end":418310,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<ArrayBase<S, D>>::raw_dim","value":"pub fn raw_dim(&Self) -> D","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as it stored in the array.","sig":null,"attributes":[{"value":"/ Return the shape of the array as it stored in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417796,"byte_end":417856,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417861,"byte_end":417864,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This is primarily useful for passing to other `ArrayBase`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417869,"byte_end":417930,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ functions, such as when creating another array of the same","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":417935,"byte_end":417997,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ shape and dimensionality.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418002,"byte_end":418031,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418036,"byte_end":418039,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418044,"byte_end":418051,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418056,"byte_end":418079,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418084,"byte_end":418087,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 3), 5.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418092,"byte_end":418133,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418138,"byte_end":418141,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Create an array of zeros that's the same shape and dimensionality as `a`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418146,"byte_end":418226,"line_start":83,"line_end":83,"column_start":5,"column_end":85}},{"value":"/ let b = Array::<f64, _>::zeros(a.raw_dim());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418231,"byte_end":418279,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418284,"byte_end":418291,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419370,"byte_end":419375,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"shape","qualname":"<ArrayBase<S, D>>::shape","value":"pub fn shape(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as a slice.","sig":null,"attributes":[{"value":"/ Return the shape of the array as a slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418361,"byte_end":418406,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418411,"byte_end":418414,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that you probably don't want to use this to create an array of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418419,"byte_end":418494,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ same shape as another array because creating an array with e.g.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418499,"byte_end":418566,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/ [`Array::zeros()`](ArrayBase::zeros) using a shape of type `&[usize]`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418571,"byte_end":418644,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/ results in a dynamic-dimensional array. If you want to create an array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418649,"byte_end":418723,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ that has the same shape and dimensionality as another array, use","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418728,"byte_end":418796,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/ [`.raw_dim()`](ArrayBase::raw_dim) instead:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418801,"byte_end":418848,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418853,"byte_end":418856,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418861,"byte_end":418872,"line_start":99,"line_end":99,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, Array2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418877,"byte_end":418910,"line_start":100,"line_end":100,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418915,"byte_end":418918,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let a = Array2::<i32>::zeros((3, 4));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418923,"byte_end":418964,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ let shape = a.shape();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":418969,"byte_end":418995,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(shape, &[3, 4]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419000,"byte_end":419031,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419036,"byte_end":419039,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // Since `a.shape()` returned `&[usize]`, we get an `ArrayD` instance:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419044,"byte_end":419118,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ let b = Array::zeros(shape);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419123,"byte_end":419155,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.clone().into_dyn(), b);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419160,"byte_end":419200,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419205,"byte_end":419208,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // To get the same dimension type, use `.raw_dim()` instead:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419213,"byte_end":419277,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ let c = Array::zeros(a.raw_dim());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419282,"byte_end":419320,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a, c);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419325,"byte_end":419346,"line_start":112,"line_end":112,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419351,"byte_end":419358,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419492,"byte_end":419499,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"strides","qualname":"<ArrayBase<S, D>>::strides","value":"pub fn strides(&Self) -> &[isize]","parent":null,"children":[],"decl_id":null,"docs":" Return the strides of the array as a slice.\n","sig":null,"attributes":[{"value":"/ Return the strides of the array as a slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419433,"byte_end":419480,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419933,"byte_end":419942,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"stride_of","qualname":"<ArrayBase<S, D>>::stride_of","value":"pub fn stride_of(&Self, Axis) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the stride of `axis`.","sig":null,"attributes":[{"value":"/ Return the stride of `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419694,"byte_end":419726,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419731,"byte_end":419734,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419739,"byte_end":419812,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419817,"byte_end":419862,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419867,"byte_end":419870,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":419875,"byte_end":419921,"line_start":130,"line_end":130,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420126,"byte_end":420130,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"view","qualname":"<ArrayBase<S, D>>::view","value":"pub fn view(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a read-only view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-only view of the array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420074,"byte_end":420114,"line_start":136,"line_end":136,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420393,"byte_end":420401,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"view_mut","qualname":"<ArrayBase<S, D>>::view_mut","value":"pub fn view_mut(&mut Self) -> ArrayViewMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-write view of the array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420340,"byte_end":420381,"line_start":145,"line_end":145,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421902,"byte_end":421910,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<ArrayBase<S, D>>::to_owned","value":"pub fn to_owned(&Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an uniquely owned copy of the array.","sig":null,"attributes":[{"value":"/ Return an uniquely owned copy of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420603,"byte_end":420650,"line_start":154,"line_end":154,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420655,"byte_end":420658,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ If the input array is contiguous and its strides are positive, then the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420663,"byte_end":420738,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ output array will have the same memory layout. Otherwise, the layout of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420743,"byte_end":420818,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ the output array is unspecified. If you need a particular layout, you","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420823,"byte_end":420896,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ can allocate a new array with the desired memory layout and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420901,"byte_end":420964,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ [`.assign()`](#method.assign) the data. Alternatively, you can collect","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":420969,"byte_end":421043,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ an iterator, like this for a result in standard layout:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421048,"byte_end":421107,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421112,"byte_end":421115,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421120,"byte_end":421127,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421132,"byte_end":421162,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2).f(), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421167,"byte_end":421244,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ # let owned = {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421249,"byte_end":421268,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim(), arr.iter().cloned().collect()).unwrap()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421273,"byte_end":421353,"line_start":167,"line_end":167,"column_start":5,"column_end":85}},{"value":"/ # };","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421358,"byte_end":421366,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.is_standard_layout());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421371,"byte_end":421413,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421418,"byte_end":421447,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421452,"byte_end":421459,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421464,"byte_end":421467,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ or this for a result in column-major (Fortran) layout:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421472,"byte_end":421530,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421535,"byte_end":421538,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421543,"byte_end":421550,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421555,"byte_end":421585,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421590,"byte_end":421663,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/ # let owned = {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421668,"byte_end":421687,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim().f(), arr.t().iter().cloned().collect()).unwrap()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421692,"byte_end":421780,"line_start":179,"line_end":179,"column_start":5,"column_end":93}},{"value":"/ # };","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421785,"byte_end":421793,"line_start":180,"line_end":180,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.t().is_standard_layout());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421798,"byte_end":421844,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421849,"byte_end":421878,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":421883,"byte_end":421890,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422384,"byte_end":422393,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"to_shared","qualname":"<ArrayBase<S, D>>::to_shared","value":"pub fn to_shared(&Self) -> ArcArray<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422320,"byte_end":422372,"line_start":201,"line_end":201,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422690,"byte_end":422700,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<ArrayBase<S, D>>::into_owned","value":"pub fn into_owned(Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a uniquely owned array, cloning the array elements\n if necessary.\n","sig":null,"attributes":[{"value":"/ Turn the array into a uniquely owned array, cloning the array elements","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422582,"byte_end":422656,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ if necessary.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422661,"byte_end":422678,"line_start":212,"line_end":212,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422918,"byte_end":422929,"line_start":223,"line_end":223,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<ArrayBase<S, D>>::into_shared","value":"pub fn into_shared(Self) -> ArcArray<A, D> where S: DataOwned","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a shared ownership (copy on write) array,\n without any copying.\n","sig":null,"attributes":[{"value":"/ Turn the array into a shared ownership (copy on write) array,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422812,"byte_end":422877,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/ without any copying.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":422882,"byte_end":422906,"line_start":222,"line_end":222,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423288,"byte_end":423293,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"first","qualname":"<ArrayBase<S, D>>::first","value":"pub fn first(&Self) -> Option<&A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first element of the array, or `None` if it\n is empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the first element of the array, or `None` if it","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423184,"byte_end":423258,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ is empty.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423263,"byte_end":423276,"line_start":237,"line_end":237,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423589,"byte_end":423598,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<ArrayBase<S, D>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first element of the array, or\n `None` if it is empty.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first element of the array, or","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423477,"byte_end":423546,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ `None` if it is empty.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423551,"byte_end":423577,"line_start":250,"line_end":250,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424067,"byte_end":424071,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArrayBase<S, D>>::iter","value":"pub fn iter(&Self) -> Iter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of references to the elements of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423801,"byte_end":423867,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423872,"byte_end":423875,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423880,"byte_end":423947,"line_start":264,"line_end":264,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":423952,"byte_end":424008,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424013,"byte_end":424016,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&A`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424021,"byte_end":424055,"line_start":267,"line_end":267,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424503,"byte_end":424511,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArrayBase<S, D>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of mutable references to the elements of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424225,"byte_end":424299,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424304,"byte_end":424307,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424312,"byte_end":424379,"line_start":278,"line_end":278,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424384,"byte_end":424440,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424445,"byte_end":424448,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&mut A`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424453,"byte_end":424491,"line_start":281,"line_end":281,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424979,"byte_end":424991,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"indexed_iter","qualname":"<ArrayBase<S, D>>::indexed_iter","value":"pub fn indexed_iter(&Self) -> IndexedIter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and references to the elements of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424628,"byte_end":424706,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424711,"byte_end":424714,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424719,"byte_end":424786,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424791,"byte_end":424847,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424852,"byte_end":424855,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &A)`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424860,"byte_end":424908,"line_start":294,"line_end":294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424913,"byte_end":424916,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ See also [`Zip::indexed`](struct.Zip.html)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":424921,"byte_end":424967,"line_start":296,"line_end":296,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425431,"byte_end":425447,"line_start":310,"line_end":310,"column_start":12,"column_end":28},"name":"indexed_iter_mut","qualname":"<ArrayBase<S, D>>::indexed_iter_mut","value":"pub fn indexed_iter_mut(&mut Self) -> IndexedIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and mutable references to the elements of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425127,"byte_end":425213,"line_start":304,"line_end":304,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425218,"byte_end":425221,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425226,"byte_end":425293,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425298,"byte_end":425354,"line_start":307,"line_end":307,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425359,"byte_end":425362,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &mut A)`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425367,"byte_end":425419,"line_start":309,"line_end":309,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426064,"byte_end":426069,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBase<S, D>>::slice","value":"pub fn slice<Do>(&Self, &SliceInfo<D::SliceArg, Do>) -> ArrayView<, A, Do>\nwhere Do: Dimension, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425600,"byte_end":425638,"line_start":317,"line_end":317,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425643,"byte_end":425646,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425651,"byte_end":425704,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425709,"byte_end":425756,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425761,"byte_end":425764,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425769,"byte_end":425809,"line_start":322,"line_end":322,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425814,"byte_end":425879,"line_start":323,"line_end":323,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425884,"byte_end":425887,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425892,"byte_end":425961,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":425966,"byte_end":426052,"line_start":326,"line_end":326,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426719,"byte_end":426728,"line_start":345,"line_end":345,"column_start":12,"column_end":21},"name":"slice_mut","qualname":"<ArrayBase<S, D>>::slice_mut","value":"pub fn slice_mut<Do>(&mut Self, &SliceInfo<D::SliceArg, Do>)\n-> ArrayViewMut<, A, Do> where Do: Dimension, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced read-write view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced read-write view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426244,"byte_end":426293,"line_start":335,"line_end":335,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426298,"byte_end":426301,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426306,"byte_end":426359,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426364,"byte_end":426411,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426416,"byte_end":426419,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426424,"byte_end":426464,"line_start":340,"line_end":340,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426469,"byte_end":426534,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426539,"byte_end":426542,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426547,"byte_end":426616,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426621,"byte_end":426707,"line_start":344,"line_end":344,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427874,"byte_end":427889,"line_start":378,"line_end":378,"column_start":12,"column_end":27},"name":"multi_slice_mut","qualname":"<ArrayBase<S, D>>::multi_slice_mut","value":"pub fn multi_slice_mut<'a, M>(&'a mut Self, M) -> M::Output where\nM: MultiSlice, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return multiple disjoint, sliced, mutable views of the array.","sig":null,"attributes":[{"value":"/ Return multiple disjoint, sliced, mutable views of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426917,"byte_end":426982,"line_start":353,"line_end":353,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426987,"byte_end":426990,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":426995,"byte_end":427048,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427053,"byte_end":427100,"line_start":356,"line_end":356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427105,"byte_end":427108,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427113,"byte_end":427153,"line_start":358,"line_end":358,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427158,"byte_end":427223,"line_start":359,"line_end":359,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427228,"byte_end":427231,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427236,"byte_end":427281,"line_start":361,"line_end":361,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427286,"byte_end":427289,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427294,"byte_end":427389,"line_start":363,"line_end":363,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427394,"byte_end":427449,"line_start":364,"line_end":364,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427454,"byte_end":427528,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427533,"byte_end":427536,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427541,"byte_end":427554,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427559,"byte_end":427562,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427567,"byte_end":427574,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, s};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427579,"byte_end":427606,"line_start":370,"line_end":370,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427611,"byte_end":427614,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427619,"byte_end":427665,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/ let (mut edges, mut middle) = a.multi_slice_mut((s![.., ..;2], s![.., 1]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427670,"byte_end":427749,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/ edges.fill(1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427754,"byte_end":427772,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/ middle.fill(0);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427777,"byte_end":427796,"line_start":375,"line_end":375,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(a, arr2(&[[1, 0, 1], [1, 0, 1]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427801,"byte_end":427850,"line_start":376,"line_end":376,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":427855,"byte_end":427862,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428550,"byte_end":428560,"line_start":396,"line_end":396,"column_start":12,"column_end":22},"name":"slice_move","qualname":"<ArrayBase<S, D>>::slice_move","value":"pub fn slice_move<Do>(Self, &SliceInfo<D::SliceArg, Do>) -> ArrayBase<S, Do>\nwhere Do: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Slice the array, possibly changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array, possibly changing the number of dimensions.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428060,"byte_end":428124,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428129,"byte_end":428132,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428137,"byte_end":428190,"line_start":388,"line_end":388,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428195,"byte_end":428242,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428247,"byte_end":428250,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428255,"byte_end":428295,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428300,"byte_end":428365,"line_start":392,"line_end":392,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428370,"byte_end":428373,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428378,"byte_end":428447,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":428452,"byte_end":428538,"line_start":395,"line_end":395,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430384,"byte_end":430398,"line_start":442,"line_end":442,"column_start":12,"column_end":26},"name":"slice_collapse","qualname":"<ArrayBase<S, D>>::slice_collapse","value":"pub fn slice_collapse(&mut Self, &D::SliceArg)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place without changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array in place without changing the number of dimensions.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":429678,"byte_end":429749,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":429754,"byte_end":429757,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that [`&SliceInfo`](struct.SliceInfo.html) (produced by the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":429762,"byte_end":429830,"line_start":430,"line_end":430,"column_start":5,"column_end":73}},{"value":"/ [`s![]`](macro.s!.html) macro) will usually coerce into `&D::SliceArg`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":429835,"byte_end":429909,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ automatically, but in some cases (e.g. if `D` is `IxDyn`), you may need","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":429914,"byte_end":429989,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ to call `.as_ref()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":429994,"byte_end":430018,"line_start":433,"line_end":433,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430023,"byte_end":430026,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430031,"byte_end":430084,"line_start":435,"line_end":435,"column_start":5,"column_end":58}},{"value":"/ See also [`D::SliceArg`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430089,"byte_end":430118,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430123,"byte_end":430126,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430131,"byte_end":430196,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430201,"byte_end":430204,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430209,"byte_end":430278,"line_start":440,"line_end":440,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `indices` does not match the number of array axes.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":430283,"byte_end":430372,"line_start":441,"line_end":441,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":3816},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431271,"byte_end":431281,"line_start":463,"line_end":463,"column_start":12,"column_end":22},"name":"slice_axis","qualname":"<ArrayBase<S, D>>::slice_axis","value":"pub fn slice_axis(&Self, Axis, Slice) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a view of the array, sliced along the specified axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431066,"byte_end":431130,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431135,"byte_end":431138,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431143,"byte_end":431212,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431217,"byte_end":431259,"line_start":462,"line_end":462,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431694,"byte_end":431708,"line_start":476,"line_end":476,"column_start":12,"column_end":26},"name":"slice_axis_mut","qualname":"<ArrayBase<S, D>>::slice_axis_mut","value":"pub fn slice_axis_mut(&mut Self, Axis, Slice) -> ArrayViewMut<, A, D> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of the array, sliced along the specified axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431481,"byte_end":431553,"line_start":472,"line_end":472,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431558,"byte_end":431561,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431566,"byte_end":431635,"line_start":474,"line_end":474,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431640,"byte_end":431682,"line_start":475,"line_end":475,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432129,"byte_end":432147,"line_start":489,"line_end":489,"column_start":12,"column_end":30},"name":"slice_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_axis_inplace","value":"pub fn slice_axis_inplace(&mut Self, Axis, Slice)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place along the specified axis.","sig":null,"attributes":[{"value":"/ Slice the array in place along the specified axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431934,"byte_end":431988,"line_start":485,"line_end":485,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":431993,"byte_end":431996,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432001,"byte_end":432070,"line_start":487,"line_end":487,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432075,"byte_end":432117,"line_start":488,"line_end":488,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432994,"byte_end":432997,"line_start":519,"line_end":519,"column_start":12,"column_end":15},"name":"get","qualname":"<ArrayBase<S, D>>::get","value":"pub fn get<I>(&Self, I) -> Option<&A> where I: NdIndex<D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the element at `index`, or return `None`\n if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Return a reference to the element at `index`, or return `None`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432499,"byte_end":432565,"line_start":501,"line_end":501,"column_start":5,"column_end":71}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432570,"byte_end":432604,"line_start":502,"line_end":502,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432609,"byte_end":432612,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Arrays also support indexing syntax: `array[index]`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432617,"byte_end":432673,"line_start":504,"line_end":504,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432678,"byte_end":432681,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432686,"byte_end":432693,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432698,"byte_end":432720,"line_start":507,"line_end":507,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432725,"byte_end":432728,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432733,"byte_end":432761,"line_start":509,"line_end":509,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432766,"byte_end":432796,"line_start":510,"line_end":510,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432801,"byte_end":432804,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432809,"byte_end":432821,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/     a.get((0, 1)) == Some(&2.) &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432826,"byte_end":432863,"line_start":513,"line_end":513,"column_start":5,"column_end":42}},{"value":"/     a.get((0, 2)) == None &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432868,"byte_end":432900,"line_start":514,"line_end":514,"column_start":5,"column_end":37}},{"value":"/     a[(0, 1)] == 2. &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432905,"byte_end":432931,"line_start":515,"line_end":515,"column_start":5,"column_end":31}},{"value":"/     a[[0, 1]] == 2.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432936,"byte_end":432959,"line_start":516,"line_end":516,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432964,"byte_end":432970,"line_start":517,"line_end":517,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":432975,"byte_end":432982,"line_start":518,"line_end":518,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3825},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":433570,"byte_end":433577,"line_start":539,"line_end":539,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ArrayBase<S, D>>::get_mut","value":"pub fn get_mut<I>(&mut Self, I) -> Option<&mut A> where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element at `index`, or return `None`\n if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element at `index`, or return `None`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":433445,"byte_end":433519,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":433524,"byte_end":433558,"line_start":538,"line_end":538,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434471,"byte_end":434475,"line_start":570,"line_end":570,"column_start":19,"column_end":23},"name":"uget","qualname":"<ArrayBase<S, D>>::uget","value":"pub unsafe fn uget<I>(&Self, I) -> &A where S: Data, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434170,"byte_end":434209,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434214,"byte_end":434217,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Return a reference to the element at `index`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434222,"byte_end":434271,"line_start":562,"line_end":562,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434276,"byte_end":434279,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434284,"byte_end":434345,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434350,"byte_end":434353,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434358,"byte_end":434370,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434375,"byte_end":434378,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434383,"byte_end":434438,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434443,"byte_end":434452,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435222,"byte_end":435230,"line_start":595,"line_end":595,"column_start":19,"column_end":27},"name":"uget_mut","qualname":"<ArrayBase<S, D>>::uget_mut","value":"pub unsafe fn uget_mut<I>(&mut Self, I) -> &mut A where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434720,"byte_end":434759,"line_start":580,"line_end":580,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434764,"byte_end":434767,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Return a mutable reference to the element at `index`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434772,"byte_end":434829,"line_start":582,"line_end":582,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434834,"byte_end":434837,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ **Note:** Only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434842,"byte_end":434903,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434908,"byte_end":434911,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434916,"byte_end":434928,"line_start":586,"line_end":586,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434933,"byte_end":434936,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434941,"byte_end":434973,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434978,"byte_end":434981,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ 1. the index is in-bounds and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":434986,"byte_end":435019,"line_start":590,"line_end":590,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435024,"byte_end":435027,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435032,"byte_end":435107,"line_start":592,"line_end":592,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435112,"byte_end":435189,"line_start":593,"line_end":593,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435194,"byte_end":435203,"line_start":594,"line_end":594,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435696,"byte_end":435700,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"swap","qualname":"<ArrayBase<S, D>>::swap","value":"pub fn swap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements at indices `index1` and `index2`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435536,"byte_end":435587,"line_start":606,"line_end":606,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435592,"byte_end":435595,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435600,"byte_end":435625,"line_start":608,"line_end":608,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435630,"byte_end":435633,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an index is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435638,"byte_end":435684,"line_start":610,"line_end":610,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436462,"byte_end":436467,"line_start":637,"line_end":637,"column_start":19,"column_end":24},"name":"uswap","qualname":"<ArrayBase<S, D>>::uswap","value":"pub unsafe fn uswap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements *unchecked* at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements *unchecked* at indices `index1` and `index2`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":435965,"byte_end":436028,"line_start":623,"line_end":623,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436033,"byte_end":436036,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436041,"byte_end":436066,"line_start":625,"line_end":625,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436071,"byte_end":436074,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436079,"byte_end":436140,"line_start":627,"line_end":627,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436145,"byte_end":436148,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436153,"byte_end":436165,"line_start":629,"line_end":629,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436170,"byte_end":436173,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436178,"byte_end":436210,"line_start":631,"line_end":631,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436215,"byte_end":436218,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ 1. both `index1 and `index2` are in-bounds and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436223,"byte_end":436273,"line_start":633,"line_end":633,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436278,"byte_end":436281,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436286,"byte_end":436361,"line_start":635,"line_end":635,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":436366,"byte_end":436443,"line_start":636,"line_end":636,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438012,"byte_end":438022,"line_start":684,"line_end":684,"column_start":12,"column_end":22},"name":"index_axis","qualname":"<ArrayBase<S, D>>::index_axis","value":"pub fn index_axis(&Self, Axis, usize) -> ArrayView<, A, D::Smaller> where\nS: Data, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a view restricted to `index` along the axis, with the axis\n removed.","sig":null,"attributes":[{"value":"/ Returns a view restricted to `index` along the axis, with the axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437228,"byte_end":437298,"line_start":663,"line_end":663,"column_start":5,"column_end":75}},{"value":"/ removed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437303,"byte_end":437315,"line_start":664,"line_end":664,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437320,"byte_end":437323,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437328,"byte_end":437383,"line_start":666,"line_end":666,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437388,"byte_end":437391,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437396,"byte_end":437449,"line_start":668,"line_end":668,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437454,"byte_end":437457,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437462,"byte_end":437469,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayView, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437474,"byte_end":437515,"line_start":671,"line_end":671,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437520,"byte_end":437523,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2. ],    // ... axis 0, row 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437528,"byte_end":437581,"line_start":673,"line_end":673,"column_start":5,"column_end":58}},{"value":"/                [3., 4. ],    // --- axis 0, row 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437586,"byte_end":437639,"line_start":674,"line_end":674,"column_start":5,"column_end":58}},{"value":"/                [5., 6. ]]);  // ... axis 0, row 2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437644,"byte_end":437697,"line_start":675,"line_end":675,"column_start":5,"column_end":58}},{"value":"/ //               .   \\","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437702,"byte_end":437728,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/ //                .   axis 1, column 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437733,"byte_end":437775,"line_start":677,"line_end":677,"column_start":5,"column_end":47}},{"value":"/ //                 axis 1, column 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437780,"byte_end":437819,"line_start":678,"line_end":678,"column_start":5,"column_end":44}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437824,"byte_end":437836,"line_start":679,"line_end":679,"column_start":5,"column_end":17}},{"value":"/     a.index_axis(Axis(0), 1) == ArrayView::from(&[3., 4.]) &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437841,"byte_end":437906,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/     a.index_axis(Axis(1), 1) == ArrayView::from(&[2., 4., 6.])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437911,"byte_end":437977,"line_start":681,"line_end":681,"column_start":5,"column_end":71}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437982,"byte_end":437988,"line_start":682,"line_end":682,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":437993,"byte_end":438000,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438899,"byte_end":438913,"line_start":716,"line_end":716,"column_start":12,"column_end":26},"name":"index_axis_mut","qualname":"<ArrayBase<S, D>>::index_axis_mut","value":"pub fn index_axis_mut(&mut Self, Axis, usize) -> ArrayViewMut<, A, D::Smaller>\nwhere S: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view restricted to `index` along the axis, with the\n axis removed.","sig":null,"attributes":[{"value":"/ Returns a mutable view restricted to `index` along the axis, with the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438204,"byte_end":438277,"line_start":692,"line_end":692,"column_start":5,"column_end":78}},{"value":"/ axis removed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438282,"byte_end":438299,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438304,"byte_end":438307,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438312,"byte_end":438365,"line_start":695,"line_end":695,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438370,"byte_end":438373,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438378,"byte_end":438385,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, aview2, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438390,"byte_end":438428,"line_start":698,"line_end":698,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438433,"byte_end":438436,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2. ],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438441,"byte_end":438474,"line_start":700,"line_end":700,"column_start":5,"column_end":38}},{"value":"/                    [3., 4. ]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438479,"byte_end":438514,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/ //                   .   \\","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438519,"byte_end":438549,"line_start":702,"line_end":702,"column_start":5,"column_end":35}},{"value":"/ //                    .   axis 1, column 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438554,"byte_end":438600,"line_start":703,"line_end":703,"column_start":5,"column_end":51}},{"value":"/ //                     axis 1, column 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438605,"byte_end":438648,"line_start":704,"line_end":704,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438653,"byte_end":438656,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438661,"byte_end":438666,"line_start":706,"line_end":706,"column_start":5,"column_end":10}},{"value":"/     let mut column1 = a.index_axis_mut(Axis(1), 1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438671,"byte_end":438726,"line_start":707,"line_end":707,"column_start":5,"column_end":60}},{"value":"/     column1 += 10.;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438731,"byte_end":438754,"line_start":708,"line_end":708,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438759,"byte_end":438764,"line_start":709,"line_end":709,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438769,"byte_end":438772,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438777,"byte_end":438789,"line_start":711,"line_end":711,"column_start":5,"column_end":17}},{"value":"/     a == aview2(&[[1., 12.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438794,"byte_end":438826,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/                   [3., 14.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438831,"byte_end":438864,"line_start":713,"line_end":713,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438869,"byte_end":438875,"line_start":714,"line_end":714,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":438880,"byte_end":438887,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439368,"byte_end":439383,"line_start":729,"line_end":729,"column_start":12,"column_end":27},"name":"index_axis_move","qualname":"<ArrayBase<S, D>>::index_axis_move","value":"pub fn index_axis_move(Self, Axis, usize) -> ArrayBase<S, D::Smaller> where\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439109,"byte_end":439180,"line_start":724,"line_end":724,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439185,"byte_end":439188,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ See [`.index_axis()`](#method.index_axis) and [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439193,"byte_end":439290,"line_start":726,"line_end":726,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439295,"byte_end":439298,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439303,"byte_end":439356,"line_start":728,"line_end":728,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439913,"byte_end":439926,"line_start":747,"line_end":747,"column_start":12,"column_end":25},"name":"collapse_axis","qualname":"<ArrayBase<S, D>>::collapse_axis","value":"pub fn collapse_axis(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Selects `index` along the axis, collapsing the axis into length one.","sig":null,"attributes":[{"value":"/ Selects `index` along the axis, collapsing the axis into length one.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439763,"byte_end":439835,"line_start":744,"line_end":744,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439840,"byte_end":439843,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":439848,"byte_end":439901,"line_start":746,"line_end":746,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440831,"byte_end":440837,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"select","qualname":"<ArrayBase<S, D>>::select","value":"pub fn select(&Self, Axis, &[Ix]) -> Array<A, D> where A: Copy, S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select arbitrary subviews corresponding to `indices`\n and and copy them into a new array.","sig":null,"attributes":[{"value":"/ Along `axis`, select arbitrary subviews corresponding to `indices`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440184,"byte_end":440254,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ and and copy them into a new array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440259,"byte_end":440298,"line_start":754,"line_end":754,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440303,"byte_end":440306,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or an element of `indices` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440311,"byte_end":440380,"line_start":756,"line_end":756,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440385,"byte_end":440388,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440393,"byte_end":440400,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440405,"byte_end":440435,"line_start":759,"line_end":759,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440440,"byte_end":440443,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let x = arr2(&[[0., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440448,"byte_end":440476,"line_start":761,"line_end":761,"column_start":5,"column_end":33}},{"value":"/                [2., 3.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440481,"byte_end":440509,"line_start":762,"line_end":762,"column_start":5,"column_end":33}},{"value":"/                [4., 5.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440514,"byte_end":440542,"line_start":763,"line_end":763,"column_start":5,"column_end":33}},{"value":"/                [6., 7.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440547,"byte_end":440575,"line_start":764,"line_end":764,"column_start":5,"column_end":33}},{"value":"/                [8., 9.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440580,"byte_end":440610,"line_start":765,"line_end":765,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440615,"byte_end":440618,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let r = x.select(Axis(0), &[0, 4, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440623,"byte_end":440665,"line_start":767,"line_end":767,"column_start":5,"column_end":47}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440670,"byte_end":440682,"line_start":768,"line_end":768,"column_start":5,"column_end":17}},{"value":"/         r == arr2(&[[0., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440687,"byte_end":440720,"line_start":769,"line_end":769,"column_start":5,"column_end":38}},{"value":"/                     [8., 9.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440725,"byte_end":440758,"line_start":770,"line_end":770,"column_start":5,"column_end":38}},{"value":"/                     [6., 7.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440763,"byte_end":440797,"line_start":771,"line_end":771,"column_start":5,"column_end":39}},{"value":"/);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440802,"byte_end":440807,"line_start":772,"line_end":772,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":440812,"byte_end":440819,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442431,"byte_end":442438,"line_start":819,"line_end":819,"column_start":12,"column_end":19},"name":"genrows","qualname":"<ArrayBase<S, D>>::genrows","value":"pub fn genrows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array. For a 2D array these are the regular rows.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441381,"byte_end":441453,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ rows of the array. For a 2D array these are the regular rows.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441458,"byte_end":441523,"line_start":794,"line_end":794,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441528,"byte_end":441531,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(n - 1))` where *n* is `self.ndim()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441536,"byte_end":441611,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441616,"byte_end":441619,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441624,"byte_end":441693,"line_start":798,"line_end":798,"column_start":5,"column_end":69}},{"value":"/ it has *a* × *b* × *c* × ... × *l* rows each of length *m*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441698,"byte_end":441765,"line_start":799,"line_end":799,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441770,"byte_end":441773,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each row is 3 elements long","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441778,"byte_end":441846,"line_start":801,"line_end":801,"column_start":5,"column_end":71}},{"value":"/ and there are 2 × 2 = 4 rows in total.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441851,"byte_end":441894,"line_start":802,"line_end":802,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441899,"byte_end":441902,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441907,"byte_end":441963,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441968,"byte_end":441971,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441976,"byte_end":441983,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, Axis, arr1};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":441988,"byte_end":442024,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442029,"byte_end":442032,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],    // -- row 0, 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442037,"byte_end":442088,"line_start":809,"line_end":809,"column_start":5,"column_end":56}},{"value":"/                 [ 3,  4,  5]],   // -- row 0, 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442093,"byte_end":442144,"line_start":810,"line_end":810,"column_start":5,"column_end":56}},{"value":"/                [[ 6,  7,  8],    // -- row 1, 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442149,"byte_end":442200,"line_start":811,"line_end":811,"column_start":5,"column_end":56}},{"value":"/                 [ 9, 10, 11]]]); // -- row 1, 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442205,"byte_end":442256,"line_start":812,"line_end":812,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442261,"byte_end":442264,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ // `genrows` will yield the four generalized rows of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442269,"byte_end":442336,"line_start":814,"line_end":814,"column_start":5,"column_end":72}},{"value":"/ for row in a.genrows() {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442341,"byte_end":442369,"line_start":815,"line_end":815,"column_start":5,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442374,"byte_end":442397,"line_start":816,"line_end":816,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442402,"byte_end":442407,"line_start":817,"line_end":817,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442412,"byte_end":442419,"line_start":818,"line_end":818,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442868,"byte_end":442879,"line_start":834,"line_end":834,"column_start":12,"column_end":23},"name":"genrows_mut","qualname":"<ArrayBase<S, D>>::genrows_mut","value":"pub fn genrows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442646,"byte_end":442718,"line_start":830,"line_end":830,"column_start":5,"column_end":77}},{"value":"/ rows of the array and yields mutable array views.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442723,"byte_end":442776,"line_start":831,"line_end":831,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442781,"byte_end":442784,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":442789,"byte_end":442856,"line_start":833,"line_end":833,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3847},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444159,"byte_end":444169,"line_start":871,"line_end":871,"column_start":12,"column_end":22},"name":"gencolumns","qualname":"<ArrayBase<S, D>>::gencolumns","value":"pub fn gencolumns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443104,"byte_end":443176,"line_start":845,"line_end":845,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443181,"byte_end":443252,"line_start":846,"line_end":846,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443257,"byte_end":443260,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(0))`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443265,"byte_end":443309,"line_start":848,"line_end":848,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443314,"byte_end":443317,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443322,"byte_end":443391,"line_start":850,"line_end":850,"column_start":5,"column_end":69}},{"value":"/ it has *b* × *c* × ... × *l* × *m* columns each of length *a*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443396,"byte_end":443466,"line_start":851,"line_end":851,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443471,"byte_end":443474,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each column is 2 elements long","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443479,"byte_end":443550,"line_start":853,"line_end":853,"column_start":5,"column_end":74}},{"value":"/ and there are 2 × 3 = 6 columns in total.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443555,"byte_end":443601,"line_start":854,"line_end":854,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443606,"byte_end":443609,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443614,"byte_end":443670,"line_start":856,"line_end":856,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443675,"byte_end":443678,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443683,"byte_end":443690,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, Axis, arr1};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443695,"byte_end":443731,"line_start":859,"line_end":859,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443736,"byte_end":443739,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ // The generalized columns of a 3D array:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443744,"byte_end":443789,"line_start":861,"line_end":861,"column_start":5,"column_end":50}},{"value":"/ // are directed along the 0th axis: 0 and 6, 1 and 7 and so on...","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443794,"byte_end":443863,"line_start":862,"line_end":862,"column_start":5,"column_end":74}},{"value":"/ let a = arr3(&[[[ 0,  1,  2], [ 3,  4,  5]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443868,"byte_end":443916,"line_start":863,"line_end":863,"column_start":5,"column_end":53}},{"value":"/                [[ 6,  7,  8], [ 9, 10, 11]]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443921,"byte_end":443971,"line_start":864,"line_end":864,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443976,"byte_end":443979,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ // Here `gencolumns` will yield the six generalized columns of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":443984,"byte_end":444061,"line_start":866,"line_end":866,"column_start":5,"column_end":82}},{"value":"/ for row in a.gencolumns() {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444066,"byte_end":444097,"line_start":867,"line_end":867,"column_start":5,"column_end":36}},{"value":"/     /* loop body */","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444102,"byte_end":444125,"line_start":868,"line_end":868,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444130,"byte_end":444135,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444140,"byte_end":444147,"line_start":870,"line_end":870,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444515,"byte_end":444529,"line_start":882,"line_end":882,"column_start":12,"column_end":26},"name":"gencolumns_mut","qualname":"<ArrayBase<S, D>>::gencolumns_mut","value":"pub fn gencolumns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444290,"byte_end":444362,"line_start":878,"line_end":878,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444367,"byte_end":444423,"line_start":879,"line_end":879,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444428,"byte_end":444431,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444436,"byte_end":444503,"line_start":881,"line_end":881,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445803,"byte_end":445808,"line_start":917,"line_end":917,"column_start":12,"column_end":17},"name":"lanes","qualname":"<ArrayBase<S, D>>::lanes","value":"pub fn lanes(&Self, Axis) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444667,"byte_end":444734,"line_start":889,"line_end":889,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444739,"byte_end":444779,"line_start":890,"line_end":890,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444784,"byte_end":444787,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ When the pointing in the direction of the first axis, they are *columns*,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444792,"byte_end":444869,"line_start":892,"line_end":892,"column_start":5,"column_end":82}},{"value":"/ in the direction of the last axis *rows*; in general they are all","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444874,"byte_end":444943,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/ *lanes* and are one dimensional.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444948,"byte_end":444984,"line_start":894,"line_end":894,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444989,"byte_end":444992,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":444997,"byte_end":445053,"line_start":896,"line_end":896,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445058,"byte_end":445061,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445066,"byte_end":445073,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, aview1, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445078,"byte_end":445116,"line_start":899,"line_end":899,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445121,"byte_end":445124,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445129,"byte_end":445162,"line_start":901,"line_end":901,"column_start":5,"column_end":38}},{"value":"/                 [ 3,  4,  5]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445167,"byte_end":445201,"line_start":902,"line_end":902,"column_start":5,"column_end":39}},{"value":"/                [[ 6,  7,  8],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445206,"byte_end":445239,"line_start":903,"line_end":903,"column_start":5,"column_end":38}},{"value":"/                 [ 9, 10, 11]]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445244,"byte_end":445280,"line_start":904,"line_end":904,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445285,"byte_end":445288,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let inner0 = a.lanes(Axis(0));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445293,"byte_end":445327,"line_start":906,"line_end":906,"column_start":5,"column_end":39}},{"value":"/ let inner1 = a.lanes(Axis(1));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445332,"byte_end":445366,"line_start":907,"line_end":907,"column_start":5,"column_end":39}},{"value":"/ let inner2 = a.lanes(Axis(2));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445371,"byte_end":445405,"line_start":908,"line_end":908,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445410,"byte_end":445413,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ // The first lane for axis 0 is [0, 6]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445418,"byte_end":445460,"line_start":910,"line_end":910,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner0.into_iter().next().unwrap(), aview1(&[0, 6]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445465,"byte_end":445533,"line_start":911,"line_end":911,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 1 is [0, 3]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445538,"byte_end":445580,"line_start":912,"line_end":912,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner1.into_iter().next().unwrap(), aview1(&[0, 3]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445585,"byte_end":445653,"line_start":913,"line_end":913,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 2 is [0, 1, 2]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445658,"byte_end":445703,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(inner2.into_iter().next().unwrap(), aview1(&[0, 1, 2]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445708,"byte_end":445779,"line_start":915,"line_end":915,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445784,"byte_end":445791,"line_start":916,"line_end":916,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446145,"byte_end":446154,"line_start":928,"line_end":928,"column_start":12,"column_end":21},"name":"lanes_mut","qualname":"<ArrayBase<S, D>>::lanes_mut","value":"pub fn lanes_mut(&mut Self, Axis) -> LanesMut<, A, D::Smaller> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":445938,"byte_end":446005,"line_start":924,"line_end":924,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446010,"byte_end":446050,"line_start":925,"line_end":925,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446055,"byte_end":446058,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut1<A>` (1D read-write array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446063,"byte_end":446133,"line_start":927,"line_end":927,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446585,"byte_end":446595,"line_start":942,"line_end":942,"column_start":12,"column_end":22},"name":"outer_iter","qualname":"<ArrayBase<S, D>>::outer_iter","value":"pub fn outer_iter(&Self) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446301,"byte_end":446367,"line_start":935,"line_end":935,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446372,"byte_end":446400,"line_start":936,"line_end":936,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446405,"byte_end":446408,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter(Axis(0))`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446413,"byte_end":446461,"line_start":938,"line_end":938,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446466,"byte_end":446469,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446474,"byte_end":446548,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"allow(deprecated)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446553,"byte_end":446573,"line_start":941,"line_end":941,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447031,"byte_end":447045,"line_start":957,"line_end":957,"column_start":12,"column_end":26},"name":"outer_iter_mut","qualname":"<ArrayBase<S, D>>::outer_iter_mut","value":"pub fn outer_iter_mut(&mut Self) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446739,"byte_end":446805,"line_start":950,"line_end":950,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446810,"byte_end":446838,"line_start":951,"line_end":951,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446843,"byte_end":446846,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter_mut(Axis(0))`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446851,"byte_end":446903,"line_start":953,"line_end":953,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446908,"byte_end":446911,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>` (read-write array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446916,"byte_end":446994,"line_start":955,"line_end":955,"column_start":5,"column_end":83}},{"value":"allow(deprecated)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":446999,"byte_end":447019,"line_start":956,"line_end":956,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447834,"byte_end":447843,"line_start":980,"line_end":980,"column_start":12,"column_end":21},"name":"axis_iter","qualname":"<ArrayBase<S, D>>::axis_iter","value":"pub fn axis_iter(&Self, Axis) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447203,"byte_end":447252,"line_start":965,"line_end":965,"column_start":5,"column_end":54}},{"value":"/ and yields each subview along it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447257,"byte_end":447294,"line_start":966,"line_end":966,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447299,"byte_end":447302,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ For example, in a 3 × 4 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447307,"byte_end":447379,"line_start":968,"line_end":968,"column_start":5,"column_end":75}},{"value":"/ the iterator element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447384,"byte_end":447408,"line_start":969,"line_end":969,"column_start":5,"column_end":29}},{"value":"/ is a 3 × 4 subview (and there are 5 in total), as shown","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447413,"byte_end":447473,"line_start":970,"line_end":970,"column_start":5,"column_end":64}},{"value":"/ in the picture below.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447478,"byte_end":447503,"line_start":971,"line_end":971,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447508,"byte_end":447511,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447516,"byte_end":447590,"line_start":973,"line_end":973,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447595,"byte_end":447598,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447603,"byte_end":447658,"line_start":975,"line_end":975,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447663,"byte_end":447666,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447671,"byte_end":447713,"line_start":977,"line_end":977,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447718,"byte_end":447721,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ <img src=\"https://rust-ndarray.github.io/ndarray/images/axis_iter_3_4_5.svg\" height=\"250px\">","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":447726,"byte_end":447822,"line_start":979,"line_end":979,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448267,"byte_end":448280,"line_start":995,"line_end":995,"column_start":12,"column_end":25},"name":"axis_iter_mut","qualname":"<ArrayBase<S, D>>::axis_iter_mut","value":"pub fn axis_iter_mut(&mut Self, Axis) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each mutable subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448002,"byte_end":448051,"line_start":988,"line_end":988,"column_start":5,"column_end":54}},{"value":"/ and yields each mutable subview along it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448056,"byte_end":448101,"line_start":989,"line_end":989,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448106,"byte_end":448109,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448114,"byte_end":448167,"line_start":991,"line_end":991,"column_start":5,"column_end":58}},{"value":"/ (read-write array view).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448172,"byte_end":448200,"line_start":992,"line_end":992,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448205,"byte_end":448208,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448213,"byte_end":448255,"line_start":994,"line_end":994,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449515,"byte_end":449531,"line_start":1030,"line_end":1030,"column_start":12,"column_end":28},"name":"axis_chunks_iter","qualname":"<ArrayBase<S, D>>::axis_chunks_iter","value":"pub fn axis_chunks_iter(&Self, Axis, usize) -> AxisChunksIter<, A, D> where\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448456,"byte_end":448526,"line_start":1003,"line_end":1003,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping views along that axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448531,"byte_end":448582,"line_start":1004,"line_end":1004,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448587,"byte_end":448590,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448595,"byte_end":448636,"line_start":1006,"line_end":1006,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448641,"byte_end":448644,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ The last view may have less elements if `size` does not divide","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448649,"byte_end":448715,"line_start":1008,"line_end":1008,"column_start":5,"column_end":71}},{"value":"/ the axis' dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448720,"byte_end":448744,"line_start":1009,"line_end":1009,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448749,"byte_end":448752,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448757,"byte_end":448820,"line_start":1011,"line_end":1011,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448825,"byte_end":448828,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448833,"byte_end":448840,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448845,"byte_end":448868,"line_start":1014,"line_end":1014,"column_start":5,"column_end":28}},{"value":"/ use ndarray::{arr3, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448873,"byte_end":448903,"line_start":1015,"line_end":1015,"column_start":5,"column_end":35}},{"value":"/ use std::iter::FromIterator;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448908,"byte_end":448940,"line_start":1016,"line_end":1016,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448945,"byte_end":448948,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_iter(0..28).into_shape((2, 7, 2)).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":448953,"byte_end":449020,"line_start":1018,"line_end":1018,"column_start":5,"column_end":72}},{"value":"/ let mut iter = a.axis_chunks_iter(Axis(1), 2);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449025,"byte_end":449075,"line_start":1019,"line_end":1019,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449080,"byte_end":449083,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ // first iteration yields a 2 × 2 × 2 view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449088,"byte_end":449136,"line_start":1021,"line_end":1021,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(iter.next().unwrap(),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449141,"byte_end":449177,"line_start":1022,"line_end":1022,"column_start":5,"column_end":41}},{"value":"/            arr3(&[[[ 0,  1], [ 2, 3]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449182,"byte_end":449224,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/                   [[14, 15], [16, 17]]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449229,"byte_end":449275,"line_start":1024,"line_end":1024,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449280,"byte_end":449283,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ // however the last element is a 2 × 1 × 2 view since 7 % 2 == 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449288,"byte_end":449358,"line_start":1026,"line_end":1026,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next_back().unwrap(), arr3(&[[[12, 13]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449363,"byte_end":449423,"line_start":1027,"line_end":1027,"column_start":5,"column_end":65}},{"value":"/                                              [[26, 27]]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449428,"byte_end":449491,"line_start":1028,"line_end":1028,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449496,"byte_end":449503,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449971,"byte_end":449991,"line_start":1043,"line_end":1043,"column_start":12,"column_end":32},"name":"axis_chunks_iter_mut","qualname":"<ArrayBase<S, D>>::axis_chunks_iter_mut","value":"pub fn axis_chunks_iter_mut(&mut Self, Axis, usize)\n-> AxisChunksIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping read-write views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449689,"byte_end":449759,"line_start":1037,"line_end":1037,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping read-write views along that axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449764,"byte_end":449826,"line_start":1038,"line_end":1038,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449831,"byte_end":449834,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D>`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449839,"byte_end":449883,"line_start":1040,"line_end":1040,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449888,"byte_end":449891,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":449896,"byte_end":449959,"line_start":1042,"line_end":1042,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450674,"byte_end":450686,"line_start":1061,"line_end":1061,"column_start":12,"column_end":24},"name":"exact_chunks","qualname":"<ArrayBase<S, D>>::exact_chunks","value":"pub fn exact_chunks<E>(&Self, E) -> ExactChunks<, A, D> where\nE: IntoDimension<Dim = D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450166,"byte_end":450217,"line_start":1050,"line_end":1050,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450222,"byte_end":450225,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450230,"byte_end":450299,"line_start":1052,"line_end":1052,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450304,"byte_end":450376,"line_start":1053,"line_end":1053,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450381,"byte_end":450384,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450389,"byte_end":450463,"line_start":1055,"line_end":1055,"column_start":5,"column_end":79}},{"value":"/ `chunk_size`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450468,"byte_end":450485,"line_start":1056,"line_end":1056,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450490,"byte_end":450493,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450498,"byte_end":450557,"line_start":1058,"line_end":1058,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450562,"byte_end":450631,"line_start":1059,"line_end":1059,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450636,"byte_end":450662,"line_start":1060,"line_end":1060,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452040,"byte_end":452056,"line_start":1101,"line_end":1101,"column_start":12,"column_end":28},"name":"exact_chunks_mut","qualname":"<ArrayBase<S, D>>::exact_chunks_mut","value":"pub fn exact_chunks_mut<E>(&mut Self, E) -> ExactChunksMut<, A, D> where\nE: IntoDimension<Dim = D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450866,"byte_end":450917,"line_start":1069,"line_end":1069,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450922,"byte_end":450925,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":450930,"byte_end":450999,"line_start":1071,"line_end":1071,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451004,"byte_end":451076,"line_start":1072,"line_end":1072,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451081,"byte_end":451084,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayViewMut<A, D>` with exactly","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451089,"byte_end":451152,"line_start":1074,"line_end":1074,"column_start":5,"column_end":68}},{"value":"/ the dimension `chunk_size`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451157,"byte_end":451188,"line_start":1075,"line_end":1075,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451193,"byte_end":451196,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451201,"byte_end":451260,"line_start":1077,"line_end":1077,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451265,"byte_end":451334,"line_start":1078,"line_end":1078,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451339,"byte_end":451365,"line_start":1079,"line_end":1079,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451370,"byte_end":451373,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451378,"byte_end":451389,"line_start":1081,"line_end":1081,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451394,"byte_end":451417,"line_start":1082,"line_end":1082,"column_start":5,"column_end":28}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451422,"byte_end":451444,"line_start":1083,"line_end":1083,"column_start":5,"column_end":27}},{"value":"/ let mut a = Array::zeros((6, 7));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451449,"byte_end":451486,"line_start":1084,"line_end":1084,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451491,"byte_end":451494,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ // Fill each 2 × 2 chunk with the index of where it appeared in iteration","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451499,"byte_end":451577,"line_start":1086,"line_end":1086,"column_start":5,"column_end":82}},{"value":"/ for (i, mut chunk) in a.exact_chunks_mut((2, 2)).into_iter().enumerate() {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451582,"byte_end":451660,"line_start":1087,"line_end":1087,"column_start":5,"column_end":83}},{"value":"/     chunk.fill(i);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451665,"byte_end":451687,"line_start":1088,"line_end":1088,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451692,"byte_end":451697,"line_start":1089,"line_end":1089,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451702,"byte_end":451705,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ // The resulting array is:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451710,"byte_end":451740,"line_start":1091,"line_end":1091,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451745,"byte_end":451760,"line_start":1092,"line_end":1092,"column_start":5,"column_end":20}},{"value":"/   a,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451765,"byte_end":451773,"line_start":1093,"line_end":1093,"column_start":5,"column_end":13}},{"value":"/   arr2(&[[0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451778,"byte_end":451813,"line_start":1094,"line_end":1094,"column_start":5,"column_end":40}},{"value":"/          [0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451818,"byte_end":451853,"line_start":1095,"line_end":1095,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451858,"byte_end":451893,"line_start":1096,"line_end":1096,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451898,"byte_end":451933,"line_start":1097,"line_end":1097,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451938,"byte_end":451973,"line_start":1098,"line_end":1098,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":451978,"byte_end":452016,"line_start":1099,"line_end":1099,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452021,"byte_end":452028,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":455876,"byte_end":455883,"line_start":1145,"line_end":1145,"column_start":12,"column_end":19},"name":"windows","qualname":"<ArrayBase<S, D>>::windows","value":"pub fn windows<E>(&Self, E) -> Windows<, A, D> where E: IntoDimension<Dim =\nD>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a window producer and iterable.","sig":null,"attributes":[{"value":"/ Return a window producer and iterable.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452253,"byte_end":452295,"line_start":1109,"line_end":1109,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452300,"byte_end":452303,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ The windows are all distinct overlapping views of size `window_size`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452308,"byte_end":452380,"line_start":1111,"line_end":1111,"column_start":5,"column_end":77}},{"value":"/ that fit into the array's shape.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452385,"byte_end":452421,"line_start":1112,"line_end":1112,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452426,"byte_end":452429,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ Will yield over no elements if window size is larger","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452434,"byte_end":452490,"line_start":1114,"line_end":1114,"column_start":5,"column_end":61}},{"value":"/ than the actual array size of any dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452495,"byte_end":452543,"line_start":1115,"line_end":1115,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452548,"byte_end":452551,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The produced element is an `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452556,"byte_end":452631,"line_start":1117,"line_end":1117,"column_start":5,"column_end":80}},{"value":"/ `window_size`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452636,"byte_end":452654,"line_start":1118,"line_end":1118,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452659,"byte_end":452662,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `window_size` is zero.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452667,"byte_end":452728,"line_start":1120,"line_end":1120,"column_start":5,"column_end":66}},{"value":"/ (**Panics** if `D` is `IxDyn` and `window_size` does not match the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452733,"byte_end":452803,"line_start":1121,"line_end":1121,"column_start":5,"column_end":75}},{"value":"/ number of array axes.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452808,"byte_end":452834,"line_start":1122,"line_end":1122,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452839,"byte_end":452842,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ This is an illustration of the 2×2 windows in a 3×4 array:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452847,"byte_end":452911,"line_start":1124,"line_end":1124,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452916,"byte_end":452919,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452924,"byte_end":452935,"line_start":1126,"line_end":1126,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452940,"byte_end":452970,"line_start":1127,"line_end":1127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452975,"byte_end":452978,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/      │   ┏━━━━━┳━━━━━┱─────┬─────┐   ┌─────┲━━━━━┳━━━━━┱─────┐   ┌─────┬─────┲━━━━━┳━━━━━┓","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":452983,"byte_end":453229,"line_start":1129,"line_end":1129,"column_start":5,"column_end":99}},{"value":"/      ▼   ┃ a₀₀ ┃ a₀₁ ┃     │     │   │     ┃ a₀₁ ┃ a₀₂ ┃     │   │     │     ┃ a₀₂ ┃ a₀₃ ┃","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":453234,"byte_end":453384,"line_start":1130,"line_end":1130,"column_start":5,"column_end":99}},{"value":"/ Axis(0)  ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":453389,"byte_end":453633,"line_start":1131,"line_end":1131,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":453638,"byte_end":453786,"line_start":1132,"line_end":1132,"column_start":5,"column_end":99}},{"value":"/          ┡━━━━━╇━━━━━╃─────┼─────┤   ├─────╄━━━━━╇━━━━━╃─────┤   ├─────┼─────╄━━━━━╇━━━━━┩","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":453791,"byte_end":454035,"line_start":1133,"line_end":1133,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":454040,"byte_end":454164,"line_start":1134,"line_end":1134,"column_start":5,"column_end":99}},{"value":"/          └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":454169,"byte_end":454413,"line_start":1135,"line_end":1135,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":454418,"byte_end":454421,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/          ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":454426,"byte_end":454670,"line_start":1137,"line_end":1137,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":454675,"byte_end":454799,"line_start":1138,"line_end":1138,"column_start":5,"column_end":99}},{"value":"/          ┢━━━━━╈━━━━━╅─────┼─────┤   ├─────╆━━━━━╈━━━━━╅─────┤   ├─────┼─────╆━━━━━╈━━━━━┪","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":454804,"byte_end":455048,"line_start":1139,"line_end":1139,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":455053,"byte_end":455201,"line_start":1140,"line_end":1140,"column_start":5,"column_end":99}},{"value":"/          ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":455206,"byte_end":455450,"line_start":1141,"line_end":1141,"column_start":5,"column_end":99}},{"value":"/          ┃ a₂₀ ┃ a₂₁ ┃     │     │   │     ┃ a₂₁ ┃ a₂₂ ┃     │   │     │     ┃ a₂₂ ┃ a₂₃ ┃","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":455455,"byte_end":455603,"line_start":1142,"line_end":1142,"column_start":5,"column_end":99}},{"value":"/          ┗━━━━━┻━━━━━┹─────┴─────┘   └─────┺━━━━━┻━━━━━┹─────┘   └─────┴─────┺━━━━━┻━━━━━┛","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":455608,"byte_end":455852,"line_start":1143,"line_end":1143,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":455857,"byte_end":455864,"line_start":1144,"line_end":1144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456541,"byte_end":456545,"line_start":1165,"line_end":1165,"column_start":12,"column_end":16},"name":"diag","qualname":"<ArrayBase<S, D>>::diag","value":"pub fn diag(&Self) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an view of the diagonal elements of the array.","sig":null,"attributes":[{"value":"/ Return an view of the diagonal elements of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456328,"byte_end":456385,"line_start":1161,"line_end":1161,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456390,"byte_end":456393,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ The diagonal is simply the sequence indexed by *(0, 0, .., 0)*,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456398,"byte_end":456465,"line_start":1163,"line_end":1163,"column_start":5,"column_end":72}},{"value":"/ *(1, 1, ..., 1)* etc as long as all axes have elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456470,"byte_end":456529,"line_start":1164,"line_end":1164,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456731,"byte_end":456739,"line_start":1173,"line_end":1173,"column_start":12,"column_end":20},"name":"diag_mut","qualname":"<ArrayBase<S, D>>::diag_mut","value":"pub fn diag_mut(&mut Self) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view over the diagonal elements of the array.\n","sig":null,"attributes":[{"value":"/ Return a read-write view over the diagonal elements of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456650,"byte_end":456719,"line_start":1172,"line_end":1172,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456921,"byte_end":456930,"line_start":1181,"line_end":1181,"column_start":12,"column_end":21},"name":"into_diag","qualname":"<ArrayBase<S, D>>::into_diag","value":"pub fn into_diag(Self) -> ArrayBase<S, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" Return the diagonal as a one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the diagonal as a one-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":456858,"byte_end":456909,"line_start":1180,"line_end":1180,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":458171,"byte_end":458189,"line_start":1222,"line_end":1222,"column_start":12,"column_end":30},"name":"is_standard_layout","qualname":"<ArrayBase<S, D>>::is_standard_layout","value":"pub fn is_standard_layout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the array data is laid out in contiguous “C order” in\n memory (where the last index is the most rapidly varying).","sig":null,"attributes":[{"value":"/ Return `true` if the array data is laid out in contiguous “C order” in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":457884,"byte_end":457962,"line_start":1217,"line_end":1217,"column_start":5,"column_end":79}},{"value":"/ memory (where the last index is the most rapidly varying).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":457967,"byte_end":458029,"line_start":1218,"line_end":1218,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":458034,"byte_end":458037,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ Return `false` otherwise, i.e the array is possibly not","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":458042,"byte_end":458101,"line_start":1220,"line_end":1220,"column_start":5,"column_end":64}},{"value":"/ contiguous in memory, it has custom strides, etc.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":458106,"byte_end":458159,"line_start":1221,"line_end":1221,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460042,"byte_end":460060,"line_start":1272,"line_end":1272,"column_start":12,"column_end":30},"name":"as_standard_layout","qualname":"<ArrayBase<S, D>>::as_standard_layout","value":"pub fn as_standard_layout(&Self) -> CowArray<, A, D> where S: Data<Elem = A>,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Return a standard-layout array containing the data, cloning if\n necessary.","sig":null,"attributes":[{"value":"/ Return a standard-layout array containing the data, cloning if","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459197,"byte_end":459263,"line_start":1250,"line_end":1250,"column_start":5,"column_end":71}},{"value":"/ necessary.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459268,"byte_end":459282,"line_start":1251,"line_end":1251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459287,"byte_end":459290,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ If `self` is in standard layout, a COW view of the data is returned","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459295,"byte_end":459366,"line_start":1253,"line_end":1253,"column_start":5,"column_end":76}},{"value":"/ without cloning. Otherwise, the data is cloned, and the returned array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459371,"byte_end":459445,"line_start":1254,"line_end":1254,"column_start":5,"column_end":79}},{"value":"/ owns the cloned data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459450,"byte_end":459475,"line_start":1255,"line_end":1255,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459480,"byte_end":459483,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459488,"byte_end":459495,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459500,"byte_end":459524,"line_start":1258,"line_end":1258,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459529,"byte_end":459532,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ let standard = Array2::<f64>::zeros((3, 4));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459537,"byte_end":459585,"line_start":1260,"line_end":1260,"column_start":5,"column_end":53}},{"value":"/ assert!(standard.is_standard_layout());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459590,"byte_end":459633,"line_start":1261,"line_end":1261,"column_start":5,"column_end":48}},{"value":"/ let cow_view = standard.as_standard_layout();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459638,"byte_end":459687,"line_start":1262,"line_end":1262,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_view.is_view());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459692,"byte_end":459724,"line_start":1263,"line_end":1263,"column_start":5,"column_end":37}},{"value":"/ assert!(cow_view.is_standard_layout());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459729,"byte_end":459772,"line_start":1264,"line_end":1264,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459777,"byte_end":459780,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ let fortran = standard.reversed_axes();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459785,"byte_end":459828,"line_start":1266,"line_end":1266,"column_start":5,"column_end":48}},{"value":"/ assert!(!fortran.is_standard_layout());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459833,"byte_end":459876,"line_start":1267,"line_end":1267,"column_start":5,"column_end":48}},{"value":"/ let cow_owned = fortran.as_standard_layout();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459881,"byte_end":459930,"line_start":1268,"line_end":1268,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_owned.is_owned());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459935,"byte_end":459969,"line_start":1269,"line_end":1269,"column_start":5,"column_end":39}},{"value":"/ assert!(cow_owned.is_standard_layout());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":459974,"byte_end":460018,"line_start":1270,"line_end":1270,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460023,"byte_end":460030,"line_start":1271,"line_end":1271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461116,"byte_end":461122,"line_start":1302,"line_end":1302,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArrayBase<S, D>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A","parent":null,"children":[],"decl_id":null,"docs":" Return a pointer to the first element in the array.","sig":null,"attributes":[{"value":"/ Return a pointer to the first element in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460723,"byte_end":460778,"line_start":1292,"line_end":1292,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460783,"byte_end":460786,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ Raw access to array elements needs to follow the strided indexing","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460791,"byte_end":460860,"line_start":1294,"line_end":1294,"column_start":5,"column_end":74}},{"value":"/ scheme: an element at multi-index *I* in an array with strides *S* is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460865,"byte_end":460938,"line_start":1295,"line_end":1295,"column_start":5,"column_end":78}},{"value":"/ located at offset","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460943,"byte_end":460964,"line_start":1296,"line_end":1296,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460969,"byte_end":460972,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ *Σ<sub>0 ≤ k < d</sub> I<sub>k</sub> × S<sub>k</sub>*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":460977,"byte_end":461038,"line_start":1298,"line_end":1298,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461043,"byte_end":461046,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ where *d* is `self.ndim()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461051,"byte_end":461082,"line_start":1300,"line_end":1300,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461087,"byte_end":461104,"line_start":1301,"line_end":1301,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461290,"byte_end":461300,"line_start":1308,"line_end":1308,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ArrayBase<S, D>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable pointer to the first element in the array.\n","sig":null,"attributes":[{"value":"/ Return a mutable pointer to the first element in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461193,"byte_end":461256,"line_start":1306,"line_end":1306,"column_start":5,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461261,"byte_end":461278,"line_start":1307,"line_end":1307,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461509,"byte_end":461517,"line_start":1318,"line_end":1318,"column_start":12,"column_end":20},"name":"raw_view","qualname":"<ArrayBase<S, D>>::raw_view","value":"pub fn raw_view(&Self) -> RawArrayView<A, D>","parent":null,"children":[],"decl_id":null,"docs":" Return a raw view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461448,"byte_end":461483,"line_start":1316,"line_end":1316,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461488,"byte_end":461497,"line_start":1317,"line_end":1317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461716,"byte_end":461728,"line_start":1324,"line_end":1324,"column_start":12,"column_end":24},"name":"raw_view_mut","qualname":"<ArrayBase<S, D>>::raw_view_mut","value":"pub fn raw_view_mut(&mut Self) -> RawArrayViewMut<A, D> where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a raw mutable view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw mutable view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461647,"byte_end":461690,"line_start":1322,"line_end":1322,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461695,"byte_end":461704,"line_start":1323,"line_end":1323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462240,"byte_end":462248,"line_start":1337,"line_end":1337,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ArrayBase<S, D>>::as_slice","value":"pub fn as_slice(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":461955,"byte_end":462039,"line_start":1332,"line_end":1332,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462044,"byte_end":462072,"line_start":1333,"line_end":1333,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462077,"byte_end":462080,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the element order in the slice","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462085,"byte_end":462160,"line_start":1335,"line_end":1335,"column_start":5,"column_end":80}},{"value":"/ corresponds to the logical order of the array’s elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462165,"byte_end":462228,"line_start":1336,"line_end":1336,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462610,"byte_end":462622,"line_start":1350,"line_end":1350,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<ArrayBase<S, D>>::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> Option<&mut [A]> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462481,"byte_end":462565,"line_start":1348,"line_end":1348,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462570,"byte_end":462598,"line_start":1349,"line_end":1349,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463236,"byte_end":463257,"line_start":1369,"line_end":1369,"column_start":12,"column_end":33},"name":"as_slice_memory_order","qualname":"<ArrayBase<S, D>>::as_slice_memory_order","value":"pub fn as_slice_memory_order(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462904,"byte_end":462965,"line_start":1362,"line_end":1362,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":462970,"byte_end":462998,"line_start":1363,"line_end":1363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463003,"byte_end":463006,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the elements in the slice","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463011,"byte_end":463081,"line_start":1365,"line_end":1365,"column_start":5,"column_end":75}},{"value":"/ have whatever order the elements have in memory.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463086,"byte_end":463138,"line_start":1366,"line_end":1366,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463143,"byte_end":463146,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ Implementation notes: Does not yet support negatively strided arrays.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463151,"byte_end":463224,"line_start":1368,"line_end":1368,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3882},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463591,"byte_end":463616,"line_start":1382,"line_end":1382,"column_start":12,"column_end":37},"name":"as_slice_memory_order_mut","qualname":"<ArrayBase<S, D>>::as_slice_memory_order_mut","value":"pub fn as_slice_memory_order_mut(&mut Self) -> Option<&mut [A]> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463485,"byte_end":463546,"line_start":1380,"line_end":1380,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463551,"byte_end":463579,"line_start":1381,"line_end":1381,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464489,"byte_end":464499,"line_start":1410,"line_end":1410,"column_start":12,"column_end":22},"name":"into_shape","qualname":"<ArrayBase<S, D>>::into_shape","value":"pub fn into_shape<E>(Self, E) -> Result<ArrayBase<S, E::Dim>, ShapeError>\nwhere E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Transform the array into `shape`; any shape with the same number of\n elements is accepted, but the source array or view must be in standard\n or column-major (Fortran) layout.","sig":null,"attributes":[{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463893,"byte_end":463964,"line_start":1394,"line_end":1394,"column_start":5,"column_end":76}},{"value":"/ elements is accepted, but the source array or view must be in standard","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":463969,"byte_end":464043,"line_start":1395,"line_end":1395,"column_start":5,"column_end":79}},{"value":"/ or column-major (Fortran) layout.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464048,"byte_end":464085,"line_start":1396,"line_end":1396,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464090,"byte_end":464093,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ **Errors** if the shapes don't have the same number of elements.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464098,"byte_end":464170,"line_start":1398,"line_end":1398,"column_start":5,"column_end":77}},{"value":"/ **Errors** if the input array is not c- or f-contiguous.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464175,"byte_end":464235,"line_start":1399,"line_end":1399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464240,"byte_end":464243,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464248,"byte_end":464255,"line_start":1401,"line_end":1401,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464260,"byte_end":464294,"line_start":1402,"line_end":1402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464299,"byte_end":464302,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464307,"byte_end":464319,"line_start":1404,"line_end":1404,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 2., 3., 4.]).into_shape((2, 2)).unwrap()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464324,"byte_end":464385,"line_start":1405,"line_end":1405,"column_start":5,"column_end":66}},{"value":"/     == aview2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464390,"byte_end":464419,"line_start":1406,"line_end":1406,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464424,"byte_end":464454,"line_start":1407,"line_end":1407,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464459,"byte_end":464465,"line_start":1408,"line_end":1408,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":464470,"byte_end":464477,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":466114,"byte_end":466121,"line_start":1458,"line_end":1458,"column_start":12,"column_end":19},"name":"reshape","qualname":"<ArrayBase<S, D>>::reshape","value":"pub fn reshape<E>(&Self, E) -> ArrayBase<S, E::Dim> where S: DataShared +\nDataOwned, A: Clone, E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for\n other arrays and array views.*","sig":null,"attributes":[{"value":"/ *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465481,"byte_end":465547,"line_start":1438,"line_end":1438,"column_start":5,"column_end":71}},{"value":"/ other arrays and array views.*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465552,"byte_end":465586,"line_start":1439,"line_end":1439,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465591,"byte_end":465594,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465599,"byte_end":465670,"line_start":1441,"line_end":1441,"column_start":5,"column_end":76}},{"value":"/ elements is accepted.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465675,"byte_end":465700,"line_start":1442,"line_end":1442,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465705,"byte_end":465708,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ May clone all elements if needed to arrange elements in standard","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465713,"byte_end":465781,"line_start":1444,"line_end":1444,"column_start":5,"column_end":73}},{"value":"/ layout (and break sharing).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465786,"byte_end":465817,"line_start":1445,"line_end":1445,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465822,"byte_end":465825,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465830,"byte_end":465872,"line_start":1447,"line_end":1447,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465877,"byte_end":465880,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465885,"byte_end":465892,"line_start":1449,"line_end":1449,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{rcarr1, rcarr2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465897,"byte_end":465931,"line_start":1450,"line_end":1450,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465936,"byte_end":465939,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465944,"byte_end":465956,"line_start":1452,"line_end":1452,"column_start":5,"column_end":17}},{"value":"/     rcarr1(&[1., 2., 3., 4.]).reshape((2, 2))","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":465961,"byte_end":466010,"line_start":1453,"line_end":1453,"column_start":5,"column_end":54}},{"value":"/     == rcarr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":466015,"byte_end":466044,"line_start":1454,"line_end":1454,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":466049,"byte_end":466079,"line_start":1455,"line_end":1455,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":466084,"byte_end":466090,"line_start":1456,"line_end":1456,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":466095,"byte_end":466102,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467367,"byte_end":467375,"line_start":1496,"line_end":1496,"column_start":12,"column_end":20},"name":"into_dyn","qualname":"<ArrayBase<S, D>>::into_dyn","value":"pub fn into_dyn(Self) -> ArrayBase<S, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" Convert any array or array view to a dynamic dimensional array or\n array view (respectively).","sig":null,"attributes":[{"value":"/ Convert any array or array view to a dynamic dimensional array or","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467065,"byte_end":467134,"line_start":1487,"line_end":1487,"column_start":5,"column_end":74}},{"value":"/ array view (respectively).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467139,"byte_end":467169,"line_start":1488,"line_end":1488,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467174,"byte_end":467177,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467182,"byte_end":467189,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayD};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467194,"byte_end":467226,"line_start":1491,"line_end":1491,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467231,"byte_end":467234,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ let array: ArrayD<i32> = arr2(&[[1, 2],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467239,"byte_end":467282,"line_start":1493,"line_end":1493,"column_start":5,"column_end":48}},{"value":"/                                 [3, 4]]).into_dyn();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467287,"byte_end":467343,"line_start":1494,"line_end":1494,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467348,"byte_end":467355,"line_start":1495,"line_end":1495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468076,"byte_end":468095,"line_start":1518,"line_end":1518,"column_start":12,"column_end":31},"name":"into_dimensionality","qualname":"<ArrayBase<S, D>>::into_dimensionality","value":"pub fn into_dimensionality<D2>(Self) -> Result<ArrayBase<S, D2>, ShapeError>\nwhere D2: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Convert an array or array view to another with the same type, but\n different dimensionality type. Errors if the dimensions don't agree.","sig":null,"attributes":[{"value":"/ Convert an array or array view to another with the same type, but","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467588,"byte_end":467657,"line_start":1505,"line_end":1505,"column_start":5,"column_end":74}},{"value":"/ different dimensionality type. Errors if the dimensions don't agree.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467662,"byte_end":467734,"line_start":1506,"line_end":1506,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467739,"byte_end":467742,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467747,"byte_end":467754,"line_start":1508,"line_end":1508,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{ArrayD, Ix2, IxDyn};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467759,"byte_end":467797,"line_start":1509,"line_end":1509,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467802,"byte_end":467805,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ // Create a dynamic dimensionality array and convert it to an Array2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467810,"byte_end":467882,"line_start":1511,"line_end":1511,"column_start":5,"column_end":77}},{"value":"/ // (Ix2 dimension type).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467887,"byte_end":467915,"line_start":1512,"line_end":1512,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467920,"byte_end":467923,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ let array = ArrayD::<f64>::zeros(IxDyn(&[10, 10]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467928,"byte_end":467983,"line_start":1514,"line_end":1514,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467988,"byte_end":467991,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ assert!(array.into_dimensionality::<Ix2>().is_ok());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":467996,"byte_end":468052,"line_start":1516,"line_end":1516,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468057,"byte_end":468064,"line_start":1517,"line_end":1517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469653,"byte_end":469662,"line_start":1564,"line_end":1564,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<ArrayBase<S, D>>::broadcast","value":"pub fn broadcast<E>(&Self, E) -> Option<ArrayView<, A, E::Dim>> where\nE: IntoDimension, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Act like a larger size and/or shape array by *broadcasting*\n into a larger shape, if possible.","sig":null,"attributes":[{"value":"/ Act like a larger size and/or shape array by *broadcasting*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468599,"byte_end":468662,"line_start":1535,"line_end":1535,"column_start":5,"column_end":68}},{"value":"/ into a larger shape, if possible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468667,"byte_end":468704,"line_start":1536,"line_end":1536,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468709,"byte_end":468712,"line_start":1537,"line_end":1537,"column_start":5,"column_end":8}},{"value":"/ Return `None` if shapes can not be broadcast together.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468717,"byte_end":468775,"line_start":1538,"line_end":1538,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468780,"byte_end":468783,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ ***Background***","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468788,"byte_end":468808,"line_start":1540,"line_end":1540,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468813,"byte_end":468816,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/  * Two axes are compatible if they are equal, or one of them is 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468821,"byte_end":468891,"line_start":1542,"line_end":1542,"column_start":5,"column_end":75}},{"value":"/  * In this instance, only the axes of the smaller side (self) can be 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468896,"byte_end":468971,"line_start":1543,"line_end":1543,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468976,"byte_end":468979,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ Compare axes beginning with the *last* axis of each shape.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":468984,"byte_end":469046,"line_start":1545,"line_end":1545,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469051,"byte_end":469054,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ For example (1, 2, 4) can be broadcast into (7, 6, 2, 4)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469059,"byte_end":469119,"line_start":1547,"line_end":1547,"column_start":5,"column_end":65}},{"value":"/ because its axes are either equal or 1 (or missing);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469124,"byte_end":469180,"line_start":1548,"line_end":1548,"column_start":5,"column_end":61}},{"value":"/ while (2, 2) can *not* be broadcast into (2, 4).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469185,"byte_end":469237,"line_start":1549,"line_end":1549,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469242,"byte_end":469245,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ The implementation creates a view with strides set to zero for the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469250,"byte_end":469320,"line_start":1551,"line_end":1551,"column_start":5,"column_end":75}},{"value":"/ axes that are to be repeated.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469325,"byte_end":469358,"line_start":1552,"line_end":1552,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469363,"byte_end":469366,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ The broadcasting documentation for Numpy has more information.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469371,"byte_end":469437,"line_start":1554,"line_end":1554,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469442,"byte_end":469445,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469450,"byte_end":469457,"line_start":1556,"line_end":1556,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469462,"byte_end":469496,"line_start":1557,"line_end":1557,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469501,"byte_end":469504,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469509,"byte_end":469521,"line_start":1559,"line_end":1559,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 0.]).broadcast((10, 2)).unwrap()","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469526,"byte_end":469579,"line_start":1560,"line_end":1560,"column_start":5,"column_end":58}},{"value":"/     == aview2(&[[1., 0.]; 10])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469584,"byte_end":469618,"line_start":1561,"line_end":1561,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469623,"byte_end":469629,"line_start":1562,"line_end":1562,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":469634,"byte_end":469641,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472622,"byte_end":472631,"line_start":1645,"line_end":1645,"column_start":12,"column_end":21},"name":"swap_axes","qualname":"<ArrayBase<S, D>>::swap_axes","value":"pub fn swap_axes(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap axes `ax` and `bx`.","sig":null,"attributes":[{"value":"/ Swap axes `ax` and `bx`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472209,"byte_end":472237,"line_start":1629,"line_end":1629,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472242,"byte_end":472245,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472250,"byte_end":472323,"line_start":1631,"line_end":1631,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472328,"byte_end":472344,"line_start":1632,"line_end":1632,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472349,"byte_end":472352,"line_start":1633,"line_end":1633,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axes are out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472357,"byte_end":472402,"line_start":1634,"line_end":1634,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472407,"byte_end":472410,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472415,"byte_end":472422,"line_start":1636,"line_end":1636,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472427,"byte_end":472449,"line_start":1637,"line_end":1637,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472454,"byte_end":472457,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2., 3.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472462,"byte_end":472500,"line_start":1639,"line_end":1639,"column_start":5,"column_end":43}},{"value":"/ a.swap_axes(0, 1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472505,"byte_end":472527,"line_start":1640,"line_end":1640,"column_start":5,"column_end":27}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472532,"byte_end":472544,"line_start":1641,"line_end":1641,"column_start":5,"column_end":17}},{"value":"/     a == arr2(&[[1.], [2.], [3.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472549,"byte_end":472587,"line_start":1642,"line_end":1642,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472592,"byte_end":472598,"line_start":1643,"line_end":1643,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472603,"byte_end":472610,"line_start":1644,"line_end":1644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473515,"byte_end":473528,"line_start":1672,"line_end":1672,"column_start":12,"column_end":25},"name":"permuted_axes","qualname":"<ArrayBase<S, D>>::permuted_axes","value":"pub fn permuted_axes<T>(Self, T) -> ArrayBase<S, D> where T: IntoDimension<Dim\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Permute the axes.","sig":null,"attributes":[{"value":"/ Permute the axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472768,"byte_end":472789,"line_start":1650,"line_end":1650,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472794,"byte_end":472797,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472802,"byte_end":472875,"line_start":1652,"line_end":1652,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472880,"byte_end":472896,"line_start":1653,"line_end":1653,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472901,"byte_end":472904,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/ *i* in the *j*-th place in the axes sequence means `self`'s *i*-th axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472909,"byte_end":472984,"line_start":1655,"line_end":1655,"column_start":5,"column_end":80}},{"value":"/ becomes `self.permuted_axes()`'s *j*-th axis","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":472989,"byte_end":473037,"line_start":1656,"line_end":1656,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473042,"byte_end":473045,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the axes are out of bounds, if an axis is missing,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473050,"byte_end":473125,"line_start":1658,"line_end":1658,"column_start":5,"column_end":80}},{"value":"/ or if an axis is repeated more than once.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473130,"byte_end":473175,"line_start":1659,"line_end":1659,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473180,"byte_end":473183,"line_start":1660,"line_end":1660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473188,"byte_end":473202,"line_start":1661,"line_end":1661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473207,"byte_end":473210,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473215,"byte_end":473222,"line_start":1663,"line_end":1663,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Array3};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473227,"byte_end":473259,"line_start":1664,"line_end":1664,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473264,"byte_end":473267,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[0, 1], [2, 3]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473272,"byte_end":473308,"line_start":1666,"line_end":1666,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.view().permuted_axes([1, 0]), a.t());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473313,"byte_end":473367,"line_start":1667,"line_end":1667,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473372,"byte_end":473375,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<u8>::zeros((1, 2, 3));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473380,"byte_end":473423,"line_start":1669,"line_end":1669,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(b.permuted_axes([1, 0, 2]).shape(), &[2, 1, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473428,"byte_end":473491,"line_start":1670,"line_end":1670,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":473496,"byte_end":473503,"line_start":1671,"line_end":1671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3898},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474748,"byte_end":474761,"line_start":1707,"line_end":1707,"column_start":12,"column_end":25},"name":"reversed_axes","qualname":"<ArrayBase<S, D>>::reversed_axes","value":"pub fn reversed_axes(Self) -> ArrayBase<S, D>","parent":null,"children":[],"decl_id":null,"docs":" Transpose the array by reversing axes.","sig":null,"attributes":[{"value":"/ Transpose the array by reversing axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474569,"byte_end":474611,"line_start":1703,"line_end":1703,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474616,"byte_end":474619,"line_start":1704,"line_end":1704,"column_start":5,"column_end":8}},{"value":"/ Transposition reverses the order of the axes (dimensions and strides)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474624,"byte_end":474697,"line_start":1705,"line_end":1705,"column_start":5,"column_end":78}},{"value":"/ while retaining the same data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474702,"byte_end":474736,"line_start":1706,"line_end":1706,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475115,"byte_end":475116,"line_start":1718,"line_end":1718,"column_start":12,"column_end":13},"name":"t","qualname":"<ArrayBase<S, D>>::t","value":"pub fn t(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a transposed view of the array.","sig":null,"attributes":[{"value":"/ Return a transposed view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474901,"byte_end":474943,"line_start":1713,"line_end":1713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474948,"byte_end":474951,"line_start":1714,"line_end":1714,"column_start":5,"column_end":8}},{"value":"/ This is a shorthand for `self.view().reversed_axes()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":474956,"byte_end":475014,"line_start":1715,"line_end":1715,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475019,"byte_end":475022,"line_start":1716,"line_end":1716,"column_start":5,"column_end":8}},{"value":"/ See also the more general methods `.reversed_axes()` and `.swap_axes()`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475027,"byte_end":475103,"line_start":1717,"line_end":1717,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475302,"byte_end":475306,"line_start":1726,"line_end":1726,"column_start":12,"column_end":16},"name":"axes","qualname":"<ArrayBase<S, D>>::axes","value":"pub fn axes(&Self) -> Axes<, D>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the length and stride of each axis.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the length and stride of each axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475227,"byte_end":475290,"line_start":1725,"line_end":1725,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475678,"byte_end":475693,"line_start":1739,"line_end":1739,"column_start":12,"column_end":27},"name":"max_stride_axis","qualname":"<ArrayBase<S, D>>::max_stride_axis","value":"pub fn max_stride_axis(&Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return the axis with the greatest stride (by absolute value),\n preferring axes with len > 1.\n","sig":null,"attributes":[{"value":"/ Return the axis with the greatest stride (by absolute value),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475563,"byte_end":475628,"line_start":1737,"line_end":1737,"column_start":5,"column_end":70}},{"value":"/ preferring axes with len > 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475633,"byte_end":475666,"line_start":1738,"line_end":1738,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475874,"byte_end":475885,"line_start":1746,"line_end":1746,"column_start":12,"column_end":23},"name":"invert_axis","qualname":"<ArrayBase<S, D>>::invert_axis","value":"pub fn invert_axis(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Reverse the stride of `axis`.","sig":null,"attributes":[{"value":"/ Reverse the stride of `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475770,"byte_end":475803,"line_start":1743,"line_end":1743,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475808,"byte_end":475811,"line_start":1744,"line_end":1744,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":475816,"byte_end":475862,"line_start":1745,"line_end":1745,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477675,"byte_end":477685,"line_start":1792,"line_end":1792,"column_start":12,"column_end":22},"name":"merge_axes","qualname":"<ArrayBase<S, D>>::merge_axes","value":"pub fn merge_axes(&mut Self, Axis, Axis) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If possible, merge in the axis `take` to `into`.","sig":null,"attributes":[{"value":"/ If possible, merge in the axis `take` to `into`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476208,"byte_end":476260,"line_start":1757,"line_end":1757,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476265,"byte_end":476268,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ Returns `true` iff the axes are now merged.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476273,"byte_end":476320,"line_start":1759,"line_end":1759,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476325,"byte_end":476328,"line_start":1760,"line_end":1760,"column_start":5,"column_end":8}},{"value":"/ This method merges the axes if movement along the two original axes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476333,"byte_end":476404,"line_start":1761,"line_end":1761,"column_start":5,"column_end":76}},{"value":"/ (moving fastest along the `into` axis) can be equivalently represented","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476409,"byte_end":476483,"line_start":1762,"line_end":1762,"column_start":5,"column_end":79}},{"value":"/ as movement along one (merged) axis. Merging the axes preserves this","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476488,"byte_end":476560,"line_start":1763,"line_end":1763,"column_start":5,"column_end":77}},{"value":"/ order in the merged axis. If `take` and `into` are the same axis, then","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476565,"byte_end":476639,"line_start":1764,"line_end":1764,"column_start":5,"column_end":79}},{"value":"/ the axis is \"merged\" if its length is ≤ 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476644,"byte_end":476692,"line_start":1765,"line_end":1765,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476697,"byte_end":476700,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ If the return value is `true`, then the following hold:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476705,"byte_end":476764,"line_start":1767,"line_end":1767,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476769,"byte_end":476772,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `into` axis is the product of the original","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476777,"byte_end":476847,"line_start":1769,"line_end":1769,"column_start":5,"column_end":75}},{"value":"/   lengths of the two axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476852,"byte_end":476882,"line_start":1770,"line_end":1770,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476887,"byte_end":476890,"line_start":1771,"line_end":1771,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `take` axis is 0 if the product of the original","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476895,"byte_end":476970,"line_start":1772,"line_end":1772,"column_start":5,"column_end":80}},{"value":"/   lengths of the two axes is 0, and 1 otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":476975,"byte_end":477027,"line_start":1773,"line_end":1773,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477032,"byte_end":477035,"line_start":1774,"line_end":1774,"column_start":5,"column_end":8}},{"value":"/ If the return value is `false`, then merging is not possible, and the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477040,"byte_end":477113,"line_start":1775,"line_end":1775,"column_start":5,"column_end":78}},{"value":"/ original shape and strides have been preserved.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477118,"byte_end":477169,"line_start":1776,"line_end":1776,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477174,"byte_end":477177,"line_start":1777,"line_end":1777,"column_start":5,"column_end":8}},{"value":"/ Note that the ordering constraint means that if it's possible to merge","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477182,"byte_end":477256,"line_start":1778,"line_end":1778,"column_start":5,"column_end":79}},{"value":"/ `take` into `into`, it's usually not possible to merge `into` into","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477261,"byte_end":477331,"line_start":1779,"line_end":1779,"column_start":5,"column_end":75}},{"value":"/ `take`, and vice versa.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477336,"byte_end":477363,"line_start":1780,"line_end":1780,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477368,"byte_end":477371,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477376,"byte_end":477383,"line_start":1782,"line_end":1782,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477388,"byte_end":477412,"line_start":1783,"line_end":1783,"column_start":5,"column_end":29}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477417,"byte_end":477439,"line_start":1784,"line_end":1784,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477444,"byte_end":477447,"line_start":1785,"line_end":1785,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros((2, 3, 4));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477452,"byte_end":477500,"line_start":1786,"line_end":1786,"column_start":5,"column_end":53}},{"value":"/ assert!(a.merge_axes(Axis(1), Axis(2)));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477505,"byte_end":477549,"line_start":1787,"line_end":1787,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 12]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477554,"byte_end":477593,"line_start":1788,"line_end":1788,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477598,"byte_end":477605,"line_start":1789,"line_end":1789,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477610,"byte_end":477613,"line_start":1790,"line_end":1790,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an axis is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477618,"byte_end":477663,"line_start":1791,"line_end":1791,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478563,"byte_end":478574,"line_start":1817,"line_end":1817,"column_start":12,"column_end":23},"name":"insert_axis","qualname":"<ArrayBase<S, D>>::insert_axis","value":"pub fn insert_axis(Self, Axis) -> ArrayBase<S, D::Larger>","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis at `axis` and return the result.","sig":null,"attributes":[{"value":"/ Insert new array axis at `axis` and return the result.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477807,"byte_end":477865,"line_start":1796,"line_end":1796,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477870,"byte_end":477873,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477878,"byte_end":477885,"line_start":1798,"line_end":1798,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array3, Axis, arr1, arr2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477890,"byte_end":477934,"line_start":1799,"line_end":1799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477939,"byte_end":477942,"line_start":1800,"line_end":1800,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a row vector (2-D).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":477947,"byte_end":477998,"line_start":1801,"line_end":1801,"column_start":5,"column_end":56}},{"value":"/ let a = arr1(&[1, 2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478003,"byte_end":478032,"line_start":1802,"line_end":1802,"column_start":5,"column_end":34}},{"value":"/ let row = a.insert_axis(Axis(0));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478037,"byte_end":478074,"line_start":1803,"line_end":1803,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(row, arr2(&[[1, 2, 3]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478079,"byte_end":478119,"line_start":1804,"line_end":1804,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478124,"byte_end":478127,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a column vector (2-D).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478132,"byte_end":478186,"line_start":1806,"line_end":1806,"column_start":5,"column_end":59}},{"value":"/ let b = arr1(&[1, 2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478191,"byte_end":478220,"line_start":1807,"line_end":1807,"column_start":5,"column_end":34}},{"value":"/ let col = b.insert_axis(Axis(1));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478225,"byte_end":478262,"line_start":1808,"line_end":1808,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(col, arr2(&[[1], [2], [3]]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478267,"byte_end":478311,"line_start":1809,"line_end":1809,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478316,"byte_end":478319,"line_start":1810,"line_end":1810,"column_start":5,"column_end":8}},{"value":"/ // The new axis always has length 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478324,"byte_end":478364,"line_start":1811,"line_end":1811,"column_start":5,"column_end":45}},{"value":"/ let b = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478369,"byte_end":478413,"line_start":1812,"line_end":1812,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.insert_axis(Axis(2)).shape(), &[3, 4, 1, 5]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478418,"byte_end":478480,"line_start":1813,"line_end":1813,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478485,"byte_end":478492,"line_start":1814,"line_end":1814,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478497,"byte_end":478500,"line_start":1815,"line_end":1815,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478505,"byte_end":478551,"line_start":1816,"line_end":1816,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479229,"byte_end":479240,"line_start":1839,"line_end":1839,"column_start":12,"column_end":23},"name":"remove_axis","qualname":"<ArrayBase<S, D>>::remove_axis","value":"pub fn remove_axis(Self, Axis) -> ArrayBase<S, D::Smaller> where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Remove array axis `axis` and return the result.","sig":null,"attributes":[{"value":"/ Remove array axis `axis` and return the result.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":478947,"byte_end":478998,"line_start":1833,"line_end":1833,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479003,"byte_end":479006,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.index-axis_move(axis, 0)` and makes most sense to use if the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479011,"byte_end":479099,"line_start":1835,"line_end":1835,"column_start":5,"column_end":93}},{"value":"/ axis to remove is of length 1.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479104,"byte_end":479138,"line_start":1836,"line_end":1836,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479143,"byte_end":479146,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds or its length is zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479151,"byte_end":479217,"line_start":1838,"line_end":1838,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":480018,"byte_end":480024,"line_start":1865,"line_end":1865,"column_start":12,"column_end":18},"name":"assign","qualname":"<ArrayBase<S, D>>::assign","value":"pub fn assign<E: Dimension, S2>(&mut Self, &ArrayBase<S2, E>) where\nS: DataMut, A: Clone, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from `rhs`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from `rhs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479802,"byte_end":479860,"line_start":1860,"line_end":1860,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479865,"byte_end":479868,"line_start":1861,"line_end":1861,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479873,"byte_end":479945,"line_start":1862,"line_end":1862,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479950,"byte_end":479953,"line_start":1863,"line_end":1863,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":479958,"byte_end":480006,"line_start":1864,"line_end":1864,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":480302,"byte_end":480306,"line_start":1875,"line_end":1875,"column_start":12,"column_end":16},"name":"fill","qualname":"<ArrayBase<S, D>>::fill","value":"pub fn fill(&mut Self, A) where S: DataMut, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from element `x`.\n","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from element `x`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":480226,"byte_end":480290,"line_start":1874,"line_end":1874,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482432,"byte_end":482444,"line_start":1942,"line_end":1942,"column_start":12,"column_end":24},"name":"zip_mut_with","qualname":"<ArrayBase<S, D>>::zip_mut_with","value":"pub fn zip_mut_with<B, S2, E, F>(&mut Self, &ArrayBase<S2, E>, F) where\nS: DataMut, S2: Data<Elem = B>, E: Dimension, F: FnMut(&mut A, &B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Traverse two arrays in unspecified order, in lock step,\n calling the closure `f` on each element pair.","sig":null,"attributes":[{"value":"/ Traverse two arrays in unspecified order, in lock step,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482147,"byte_end":482206,"line_start":1935,"line_end":1935,"column_start":5,"column_end":64}},{"value":"/ calling the closure `f` on each element pair.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482211,"byte_end":482260,"line_start":1936,"line_end":1936,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482265,"byte_end":482268,"line_start":1937,"line_end":1937,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482273,"byte_end":482345,"line_start":1938,"line_end":1938,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482350,"byte_end":482353,"line_start":1939,"line_end":1939,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482358,"byte_end":482406,"line_start":1940,"line_end":1940,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":482411,"byte_end":482420,"line_start":1941,"line_end":1941,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3934},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":483206,"byte_end":483210,"line_start":1964,"line_end":1964,"column_start":12,"column_end":16},"name":"fold","qualname":"<ArrayBase<S, D>>::fold","value":"pub fn fold<'a, F, B>(&'a Self, B, F) -> B where F: FnMut(B, &'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Traverse the array elements and apply a fold,\n returning the resulting value.","sig":null,"attributes":[{"value":"/ Traverse the array elements and apply a fold,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":483049,"byte_end":483098,"line_start":1960,"line_end":1960,"column_start":5,"column_end":54}},{"value":"/ returning the resulting value.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":483103,"byte_end":483137,"line_start":1961,"line_end":1961,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":483142,"byte_end":483145,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":483150,"byte_end":483194,"line_start":1963,"line_end":1963,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484878,"byte_end":484881,"line_start":2017,"line_end":2017,"column_start":12,"column_end":15},"name":"map","qualname":"<ArrayBase<S, D>>::map","value":"pub fn map<'a, B, F>(&'a Self, F) -> Array<B, D> where F: FnMut(&'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by reference on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by reference on each element and create a new array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484380,"byte_end":484444,"line_start":1999,"line_end":1999,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484449,"byte_end":484473,"line_start":2000,"line_end":2000,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484478,"byte_end":484481,"line_start":2001,"line_end":2001,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484486,"byte_end":484530,"line_start":2002,"line_end":2002,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484535,"byte_end":484538,"line_start":2003,"line_end":2003,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484543,"byte_end":484593,"line_start":2004,"line_end":2004,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484598,"byte_end":484601,"line_start":2005,"line_end":2005,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484606,"byte_end":484613,"line_start":2006,"line_end":2006,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484618,"byte_end":484640,"line_start":2007,"line_end":2007,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484645,"byte_end":484648,"line_start":2008,"line_end":2008,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484653,"byte_end":484682,"line_start":2009,"line_end":2009,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484687,"byte_end":484718,"line_start":2010,"line_end":2010,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484723,"byte_end":484735,"line_start":2011,"line_end":2011,"column_start":5,"column_end":17}},{"value":"/     a.map(|x| *x >= 1.0)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484740,"byte_end":484768,"line_start":2012,"line_end":2012,"column_start":5,"column_end":33}},{"value":"/     == arr2(&[[false, true],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484773,"byte_end":484805,"line_start":2013,"line_end":2013,"column_start":5,"column_end":37}},{"value":"/               [false, true]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484810,"byte_end":484843,"line_start":2014,"line_end":2014,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484848,"byte_end":484854,"line_start":2015,"line_end":2015,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":484859,"byte_end":484866,"line_start":2016,"line_end":2016,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":485746,"byte_end":485753,"line_start":2043,"line_end":2043,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<ArrayBase<S, D>>::map_mut","value":"pub fn map_mut<'a, B, F>(&'a mut Self, F) -> Array<B, D> where\nF: FnMut(&'a mut A) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Call `f` on a mutable reference of each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` on a mutable reference of each element and create a new array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":485511,"byte_end":485585,"line_start":2037,"line_end":2037,"column_start":5,"column_end":79}},{"value":"/ with the new values.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":485590,"byte_end":485614,"line_start":2038,"line_end":2038,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":485619,"byte_end":485622,"line_start":2039,"line_end":2039,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":485627,"byte_end":485671,"line_start":2040,"line_end":2040,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":485676,"byte_end":485679,"line_start":2041,"line_end":2041,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":485684,"byte_end":485734,"line_start":2042,"line_end":2042,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486890,"byte_end":486894,"line_start":2078,"line_end":2078,"column_start":12,"column_end":16},"name":"mapv","qualname":"<ArrayBase<S, D>>::mapv","value":"pub fn mapv<B, F>(&Self, F) -> Array<B, D> where F: FnMut(A) -> B, A: Clone,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element and create a new array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486401,"byte_end":486465,"line_start":2061,"line_end":2061,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486470,"byte_end":486494,"line_start":2062,"line_end":2062,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486499,"byte_end":486502,"line_start":2063,"line_end":2063,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486507,"byte_end":486551,"line_start":2064,"line_end":2064,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486556,"byte_end":486559,"line_start":2065,"line_end":2065,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486564,"byte_end":486614,"line_start":2066,"line_end":2066,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486619,"byte_end":486622,"line_start":2067,"line_end":2067,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486627,"byte_end":486634,"line_start":2068,"line_end":2068,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486639,"byte_end":486661,"line_start":2069,"line_end":2069,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486666,"byte_end":486669,"line_start":2070,"line_end":2070,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486674,"byte_end":486703,"line_start":2071,"line_end":2071,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486708,"byte_end":486739,"line_start":2072,"line_end":2072,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486744,"byte_end":486756,"line_start":2073,"line_end":2073,"column_start":5,"column_end":17}},{"value":"/     a.mapv(f32::abs) == arr2(&[[0., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486761,"byte_end":486805,"line_start":2074,"line_end":2074,"column_start":5,"column_end":49}},{"value":"/                                [1., 2.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486810,"byte_end":486855,"line_start":2075,"line_end":2075,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486860,"byte_end":486866,"line_start":2076,"line_end":2076,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":486871,"byte_end":486878,"line_start":2077,"line_end":2077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3953},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487232,"byte_end":487241,"line_start":2091,"line_end":2091,"column_start":12,"column_end":21},"name":"mapv_into","qualname":"<ArrayBase<S, D>>::mapv_into","value":"pub fn mapv_into<F>(Self, F) -> Self where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element, update the array with the new values\n and return it.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element, update the array with the new values","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487061,"byte_end":487140,"line_start":2087,"line_end":2087,"column_start":5,"column_end":84}},{"value":"/ and return it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487145,"byte_end":487163,"line_start":2088,"line_end":2088,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487168,"byte_end":487171,"line_start":2089,"line_end":2089,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487176,"byte_end":487220,"line_start":2090,"line_end":2090,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3955},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487554,"byte_end":487565,"line_start":2104,"line_end":2104,"column_start":12,"column_end":23},"name":"map_inplace","qualname":"<ArrayBase<S, D>>::map_inplace","value":"pub fn map_inplace<F>(&mut Self, F) where S: DataMut, F: FnMut(&mut A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by mutable reference on each element.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by mutable reference on each element.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487403,"byte_end":487485,"line_start":2101,"line_end":2101,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487490,"byte_end":487493,"line_start":2102,"line_end":2102,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487498,"byte_end":487542,"line_start":2103,"line_end":2103,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488324,"byte_end":488336,"line_start":2133,"line_end":2133,"column_start":12,"column_end":24},"name":"mapv_inplace","qualname":"<ArrayBase<S, D>>::mapv_inplace","value":"pub fn mapv_inplace<F>(&mut Self, F) where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by **v**alue on each element.\n The array is updated with the new values.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by **v**alue on each element.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487698,"byte_end":487772,"line_start":2112,"line_end":2112,"column_start":5,"column_end":79}},{"value":"/ The array is updated with the new values.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487777,"byte_end":487822,"line_start":2113,"line_end":2113,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487827,"byte_end":487830,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487835,"byte_end":487879,"line_start":2115,"line_end":2115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487884,"byte_end":487887,"line_start":2116,"line_end":2116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487892,"byte_end":487899,"line_start":2117,"line_end":2117,"column_start":5,"column_end":12}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487904,"byte_end":487939,"line_start":2118,"line_end":2118,"column_start":5,"column_end":40}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487944,"byte_end":487966,"line_start":2119,"line_end":2119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487971,"byte_end":487974,"line_start":2120,"line_end":2120,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":487979,"byte_end":488013,"line_start":2121,"line_end":2121,"column_start":5,"column_end":39}},{"value":"/ let mut a = arr2(&[[ 0., 1.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488018,"byte_end":488051,"line_start":2122,"line_end":2122,"column_start":5,"column_end":38}},{"value":"/                    [-1., 2.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488056,"byte_end":488091,"line_start":2123,"line_end":2123,"column_start":5,"column_end":40}},{"value":"/ a.mapv_inplace(f32::exp);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488096,"byte_end":488125,"line_start":2124,"line_end":2124,"column_start":5,"column_end":34}},{"value":"/ assert_abs_diff_eq!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488130,"byte_end":488154,"line_start":2125,"line_end":2125,"column_start":5,"column_end":29}},{"value":"/     a,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488159,"byte_end":488169,"line_start":2126,"line_end":2126,"column_start":5,"column_end":15}},{"value":"/     arr2(&[[1.00000, 2.71828],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488174,"byte_end":488208,"line_start":2127,"line_end":2127,"column_start":5,"column_end":39}},{"value":"/            [0.36788, 7.38906]]),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488213,"byte_end":488249,"line_start":2128,"line_end":2128,"column_start":5,"column_end":41}},{"value":"/     epsilon = 1e-5,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488254,"byte_end":488277,"line_start":2129,"line_end":2129,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488282,"byte_end":488288,"line_start":2130,"line_end":2130,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488293,"byte_end":488300,"line_start":2131,"line_end":2131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488305,"byte_end":488312,"line_start":2132,"line_end":2132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488673,"byte_end":488678,"line_start":2146,"line_end":2146,"column_start":12,"column_end":17},"name":"visit","qualname":"<ArrayBase<S, D>>::visit","value":"pub fn visit<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Visit each element in the array by calling `f` by reference\n on each element.","sig":null,"attributes":[{"value":"/ Visit each element in the array by calling `f` by reference","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488516,"byte_end":488579,"line_start":2142,"line_end":2142,"column_start":5,"column_end":68}},{"value":"/ on each element.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488584,"byte_end":488604,"line_start":2143,"line_end":2143,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488609,"byte_end":488612,"line_start":2144,"line_end":2144,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488617,"byte_end":488661,"line_start":2145,"line_end":2145,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3964},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489105,"byte_end":489114,"line_start":2163,"line_end":2163,"column_start":12,"column_end":21},"name":"fold_axis","qualname":"<ArrayBase<S, D>>::fold_axis","value":"pub fn fold_axis<B, F>(&Self, Axis, B, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(&B, &A) -> B, B: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Fold along an axis.","sig":null,"attributes":[{"value":"/ Fold along an axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488835,"byte_end":488858,"line_start":2155,"line_end":2155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488863,"byte_end":488866,"line_start":2156,"line_end":2156,"column_start":5,"column_end":8}},{"value":"/ Combine the elements of each subview with the previous using the `fold`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488871,"byte_end":488946,"line_start":2157,"line_end":2157,"column_start":5,"column_end":80}},{"value":"/ function and initial value `init`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488951,"byte_end":488989,"line_start":2158,"line_end":2158,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":488994,"byte_end":488997,"line_start":2159,"line_end":2159,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489002,"byte_end":489038,"line_start":2160,"line_end":2160,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489043,"byte_end":489046,"line_start":2161,"line_end":2161,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489051,"byte_end":489093,"line_start":2162,"line_end":2162,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489798,"byte_end":489806,"line_start":2185,"line_end":2185,"column_start":12,"column_end":20},"name":"map_axis","qualname":"<ArrayBase<S, D>>::map_axis","value":"pub fn map_axis<'a, B, F>(&'a Self, Axis, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(ArrayView1) -> B, A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489514,"byte_end":489586,"line_start":2177,"line_end":2177,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489591,"byte_end":489625,"line_start":2178,"line_end":2178,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489630,"byte_end":489633,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489638,"byte_end":489682,"line_start":2180,"line_end":2180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489687,"byte_end":489690,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489695,"byte_end":489731,"line_start":2182,"line_end":2182,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489736,"byte_end":489739,"line_start":2183,"line_end":2183,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":489744,"byte_end":489786,"line_start":2184,"line_end":2184,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490962,"byte_end":490974,"line_start":2216,"line_end":2216,"column_start":12,"column_end":24},"name":"map_axis_mut","qualname":"<ArrayBase<S, D>>::map_axis_mut","value":"pub fn map_axis_mut<'a, B, F>(&'a mut Self, Axis, F) -> Array<B, D::Smaller>\nwhere D: RemoveAxis, F: FnMut(ArrayViewMut1) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.\n 1-dimensional lanes are passed as mutable references to the reducer,\n allowing for side-effects.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490566,"byte_end":490638,"line_start":2206,"line_end":2206,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490643,"byte_end":490677,"line_start":2207,"line_end":2207,"column_start":5,"column_end":39}},{"value":"/ 1-dimensional lanes are passed as mutable references to the reducer,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490682,"byte_end":490754,"line_start":2208,"line_end":2208,"column_start":5,"column_end":77}},{"value":"/ allowing for side-effects.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490759,"byte_end":490789,"line_start":2209,"line_end":2209,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490794,"byte_end":490797,"line_start":2210,"line_end":2210,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490802,"byte_end":490846,"line_start":2211,"line_end":2211,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490851,"byte_end":490854,"line_start":2212,"line_end":2212,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490859,"byte_end":490895,"line_start":2213,"line_end":2213,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490900,"byte_end":490903,"line_start":2214,"line_end":2214,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":490908,"byte_end":490950,"line_start":2215,"line_end":2215,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492765,"byte_end":492788,"line_start":2269,"line_end":2269,"column_start":12,"column_end":35},"name":"accumulate_axis_inplace","qualname":"<ArrayBase<S, D>>::accumulate_axis_inplace","value":"pub fn accumulate_axis_inplace<F>(&mut Self, Axis, F) where\nF: FnMut(&A, &mut A) -> (), S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Iterates over pairs of consecutive elements along the axis.","sig":null,"attributes":[{"value":"/ Iterates over pairs of consecutive elements along the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":491841,"byte_end":491904,"line_start":2241,"line_end":2241,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":491909,"byte_end":491912,"line_start":2242,"line_end":2242,"column_start":5,"column_end":8}},{"value":"/ The first argument to the closure is an element, and the second","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":491917,"byte_end":491984,"line_start":2243,"line_end":2243,"column_start":5,"column_end":72}},{"value":"/ argument is the next element along the axis. Iteration is guaranteed to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":491989,"byte_end":492064,"line_start":2244,"line_end":2244,"column_start":5,"column_end":80}},{"value":"/ proceed in order along the specified axis, but in all other respects","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492069,"byte_end":492141,"line_start":2245,"line_end":2245,"column_start":5,"column_end":77}},{"value":"/ the iteration order is unspecified.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492146,"byte_end":492185,"line_start":2246,"line_end":2246,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492190,"byte_end":492193,"line_start":2247,"line_end":2247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492198,"byte_end":492211,"line_start":2248,"line_end":2248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492216,"byte_end":492219,"line_start":2249,"line_end":2249,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used to compute the cumulative sum along an","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492224,"byte_end":492296,"line_start":2250,"line_end":2250,"column_start":5,"column_end":77}},{"value":"/ axis:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492301,"byte_end":492310,"line_start":2251,"line_end":2251,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492315,"byte_end":492318,"line_start":2252,"line_end":2252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492323,"byte_end":492330,"line_start":2253,"line_end":2253,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{array, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492335,"byte_end":492366,"line_start":2254,"line_end":2254,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492371,"byte_end":492374,"line_start":2255,"line_end":2255,"column_start":5,"column_end":8}},{"value":"/ let mut arr = array![","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492379,"byte_end":492404,"line_start":2256,"line_end":2256,"column_start":5,"column_end":30}},{"value":"/     [[1, 2], [3, 4], [5, 6]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492409,"byte_end":492442,"line_start":2257,"line_end":2257,"column_start":5,"column_end":38}},{"value":"/     [[7, 8], [9, 10], [11, 12]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492447,"byte_end":492483,"line_start":2258,"line_end":2258,"column_start":5,"column_end":41}},{"value":"/ ];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492488,"byte_end":492494,"line_start":2259,"line_end":2259,"column_start":5,"column_end":11}},{"value":"/ arr.accumulate_axis_inplace(Axis(1), |&prev, curr| *curr += prev);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492499,"byte_end":492569,"line_start":2260,"line_end":2260,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492574,"byte_end":492589,"line_start":2261,"line_end":2261,"column_start":5,"column_end":20}},{"value":"/     arr,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492594,"byte_end":492606,"line_start":2262,"line_end":2262,"column_start":5,"column_end":17}},{"value":"/     array![","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492611,"byte_end":492626,"line_start":2263,"line_end":2263,"column_start":5,"column_end":20}},{"value":"/         [[1, 2], [4, 6], [9, 12]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492631,"byte_end":492669,"line_start":2264,"line_end":2264,"column_start":5,"column_end":43}},{"value":"/         [[7, 8], [16, 18], [27, 30]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492674,"byte_end":492715,"line_start":2265,"line_end":2265,"column_start":5,"column_end":46}},{"value":"/     ],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492720,"byte_end":492730,"line_start":2266,"line_end":2266,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492735,"byte_end":492741,"line_start":2267,"line_end":2267,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":492746,"byte_end":492753,"line_start":2268,"line_end":2268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494493,"byte_end":494504,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<Array<A, Ix0>>::into_scalar","value":"pub fn into_scalar(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the single element in the array without cloning it.","sig":null,"attributes":[{"value":"/ Returns the single element in the array without cloning it.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494105,"byte_end":494168,"line_start":10,"line_end":10,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494173,"byte_end":494176,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494181,"byte_end":494188,"line_start":12,"line_end":12,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494193,"byte_end":494225,"line_start":13,"line_end":13,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494230,"byte_end":494233,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494238,"byte_end":494277,"line_start":15,"line_end":15,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494282,"byte_end":494317,"line_start":16,"line_end":16,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494322,"byte_end":494337,"line_start":17,"line_end":17,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494342,"byte_end":494345,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494350,"byte_end":494389,"line_start":19,"line_end":19,"column_start":5,"column_end":44}},{"value":"/ let scalar: Foo = array.into_scalar();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494394,"byte_end":494436,"line_start":20,"line_end":20,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, Foo);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494441,"byte_end":494469,"line_start":21,"line_end":21,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494474,"byte_end":494481,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3991},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495815,"byte_end":495827,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"into_raw_vec","qualname":"<Array<A, D>>::into_raw_vec","value":"pub fn into_raw_vec(Self) -> Vec<A>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector of the elements in the array, in the way they are\n stored internally.","sig":null,"attributes":[{"value":"/ Return a vector of the elements in the array, in the way they are","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495538,"byte_end":495607,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ stored internally.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495612,"byte_end":495634,"line_start":53,"line_end":53,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495639,"byte_end":495642,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the array is in standard memory layout, the logical element order","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495647,"byte_end":495719,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ of the array (`.iter()` order) and of the returned vector will be the same.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495724,"byte_end":495803,"line_start":56,"line_end":56,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4010},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":497248,"byte_end":497259,"line_start":39,"line_end":39,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ArrayBase<S, D>>::assume_init","value":"pub unsafe fn assume_init(Self)\n-> ArrayBase<<S as RawDataSubst<A>>::Output, D>","parent":null,"children":[],"decl_id":null,"docs":" **Promise** that the array's elements are all fully initialized, and convert\n the array from element type `MaybeUninit<A>` to `A`.","sig":null,"attributes":[{"value":"/ **Promise** that the array's elements are all fully initialized, and convert","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496632,"byte_end":496712,"line_start":27,"line_end":27,"column_start":5,"column_end":85}},{"value":"/ the array from element type `MaybeUninit<A>` to `A`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496717,"byte_end":496773,"line_start":28,"line_end":28,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496778,"byte_end":496781,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For example, it can convert an `Array<MaybeUninit<f64>, D>` to `Array<f64, D>`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496786,"byte_end":496869,"line_start":30,"line_end":30,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496874,"byte_end":496877,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496882,"byte_end":496895,"line_start":32,"line_end":32,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496900,"byte_end":496903,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Safe to use if all the array's elements have been initialized.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496908,"byte_end":496974,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496979,"byte_end":496982,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that for owned and shared ownership arrays, the promise must include all of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496987,"byte_end":497075,"line_start":36,"line_end":36,"column_start":5,"column_end":93}},{"value":"/ array's storage; it is for example possible to slice these in place, but that must","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":497080,"byte_end":497166,"line_start":37,"line_end":37,"column_start":5,"column_end":91}},{"value":"/ only be done after all elements have been initialized.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":497171,"byte_end":497229,"line_start":38,"line_end":38,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4037},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_1d.rs","byte_start":498754,"byte_end":498760,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<ArrayBase<S, Ix1>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<A> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an vector with the elements of the one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return an vector with the elements of the one-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_1d.rs","byte_start":498674,"byte_end":498742,"line_start":17,"line_end":17,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4043},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499781,"byte_end":499784,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"row","qualname":"<ArrayBase<S, Ix2>>::row","value":"pub fn row(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of row `index`.","sig":null,"attributes":[{"value":"/ Return an array view of row `index`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499515,"byte_end":499555,"line_start":17,"line_end":17,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499560,"byte_end":499563,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499568,"byte_end":499611,"line_start":19,"line_end":19,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499616,"byte_end":499619,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499624,"byte_end":499631,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499636,"byte_end":499659,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499664,"byte_end":499707,"line_start":23,"line_end":23,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.row(0), array![1., 2.]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499712,"byte_end":499757,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499762,"byte_end":499769,"line_start":25,"line_end":25,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500224,"byte_end":500231,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"row_mut","qualname":"<ArrayBase<S, Ix2>>::row_mut","value":"pub fn row_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of row `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of row `index`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499908,"byte_end":499955,"line_start":33,"line_end":33,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499960,"byte_end":499963,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499968,"byte_end":500011,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500016,"byte_end":500019,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500024,"byte_end":500031,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500036,"byte_end":500059,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500064,"byte_end":500111,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ array.row_mut(0)[1] = 5.;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500116,"byte_end":500145,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(array, array![[1., 5.], [3., 4.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500150,"byte_end":500200,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500205,"byte_end":500212,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4045},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500613,"byte_end":500618,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"nrows","qualname":"<ArrayBase<S, Ix2>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500369,"byte_end":500450,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500455,"byte_end":500458,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500463,"byte_end":500470,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500475,"byte_end":500498,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500503,"byte_end":500546,"line_start":54,"line_end":54,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.nrows(), 2usize);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500551,"byte_end":500589,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500594,"byte_end":500601,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500843,"byte_end":500847,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"rows","qualname":"<ArrayBase<S, Ix2>>::rows","value":"pub fn rows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of rows (length of `Axis(0)`) in the two-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500677,"byte_end":500758,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"deprecated(note = \"Renamed to .nrows(), please use the new name\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500763,"byte_end":500831,"line_start":62,"line_end":62,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501170,"byte_end":501176,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"column","qualname":"<ArrayBase<S, Ix2>>::column","value":"pub fn column(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of column `index`.","sig":null,"attributes":[{"value":"/ Return an array view of column `index`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500898,"byte_end":500941,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500946,"byte_end":500949,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":500954,"byte_end":500997,"line_start":69,"line_end":69,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501002,"byte_end":501005,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501010,"byte_end":501017,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501022,"byte_end":501045,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501050,"byte_end":501093,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.column(0), array![1., 3.]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501098,"byte_end":501146,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501151,"byte_end":501158,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501622,"byte_end":501632,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"column_mut","qualname":"<ArrayBase<S, Ix2>>::column_mut","value":"pub fn column_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of column `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of column `index`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501300,"byte_end":501350,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501355,"byte_end":501358,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501363,"byte_end":501406,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501411,"byte_end":501414,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501419,"byte_end":501426,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501431,"byte_end":501454,"line_start":88,"line_end":88,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501459,"byte_end":501506,"line_start":89,"line_end":89,"column_start":5,"column_end":52}},{"value":"/ array.column_mut(0)[1] = 5.;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501511,"byte_end":501543,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(array, array![[1., 2.], [5., 4.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501548,"byte_end":501598,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501603,"byte_end":501610,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4049},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502017,"byte_end":502022,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"ncols","qualname":"<ArrayBase<S, Ix2>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501770,"byte_end":501854,"line_start":100,"line_end":100,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501859,"byte_end":501862,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501867,"byte_end":501874,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501879,"byte_end":501902,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501907,"byte_end":501950,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.ncols(), 2usize);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501955,"byte_end":501993,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":501998,"byte_end":502005,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502250,"byte_end":502254,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"cols","qualname":"<ArrayBase<S, Ix2>>::cols","value":"pub fn cols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns (length of `Axis(1)`) in the two-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502081,"byte_end":502165,"line_start":111,"line_end":111,"column_start":5,"column_end":89}},{"value":"deprecated(note = \"Renamed to .ncols(), please use the new name\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502170,"byte_end":502238,"line_start":112,"line_end":112,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4051},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502717,"byte_end":502726,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"is_square","qualname":"<ArrayBase<S, Ix2>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the array is square, false otherwise.","sig":null,"attributes":[{"value":"/ Return true if the array is square, false otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502305,"byte_end":502361,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502366,"byte_end":502369,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502374,"byte_end":502388,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/ Sqaure:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502393,"byte_end":502404,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502409,"byte_end":502416,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502421,"byte_end":502444,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502449,"byte_end":502492,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ assert!(array.is_square());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502497,"byte_end":502528,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502533,"byte_end":502540,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ Not sqaure:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502545,"byte_end":502560,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502565,"byte_end":502572,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502577,"byte_end":502600,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2., 5.], [3., 4., 6.]];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502605,"byte_end":502656,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"/ assert!(!array.is_square());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502661,"byte_end":502693,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":502698,"byte_end":502705,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4057},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503835,"byte_end":503854,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"insert_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::insert_axis_inplace","value":"pub fn insert_axis_inplace(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis of length 1 at `axis`, modifying the shape and\n strides in-place.","sig":null,"attributes":[{"value":"/ Insert new array axis of length 1 at `axis`, modifying the shape and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503325,"byte_end":503397,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ strides in-place.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503402,"byte_end":503423,"line_start":18,"line_end":18,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503428,"byte_end":503431,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503436,"byte_end":503480,"line_start":20,"line_end":20,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503485,"byte_end":503488,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503493,"byte_end":503500,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr2, arr3};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503505,"byte_end":503541,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503546,"byte_end":503549,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503554,"byte_end":503611,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503616,"byte_end":503651,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503656,"byte_end":503659,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ a.insert_axis_inplace(Axis(1));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503664,"byte_end":503699,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a, arr3(&[[[1, 2, 3]], [[4, 5, 6]]]).into_dyn());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503704,"byte_end":503768,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503773,"byte_end":503811,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503816,"byte_end":503823,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4058},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504557,"byte_end":504575,"line_start":53,"line_end":53,"column_start":12,"column_end":30},"name":"index_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::index_axis_inplace","value":"pub fn index_axis_inplace(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis,\n modifying the shape and strides in-place.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504039,"byte_end":504110,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ modifying the shape and strides in-place.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504115,"byte_end":504160,"line_start":39,"line_end":39,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504165,"byte_end":504168,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504173,"byte_end":504226,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504231,"byte_end":504234,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504239,"byte_end":504246,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr1, arr2};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504251,"byte_end":504287,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504292,"byte_end":504295,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504300,"byte_end":504357,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504362,"byte_end":504397,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504402,"byte_end":504405,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ a.index_axis_inplace(Axis(1), 1);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504410,"byte_end":504447,"line_start":49,"line_end":49,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a, arr1(&[2, 5]).into_dyn());","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504452,"byte_end":504496,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504501,"byte_end":504533,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":504538,"byte_end":504545,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4102},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505690,"byte_end":505693,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"sum","qualname":"<ArrayBase<S, D>>::sum","value":"pub fn sum(&Self) -> A where A: Clone + Add<Output = A> + num_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505461,"byte_end":505509,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505514,"byte_end":505517,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505522,"byte_end":505529,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505534,"byte_end":505556,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505561,"byte_end":505564,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505569,"byte_end":505597,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505602,"byte_end":505632,"line_start":30,"line_end":30,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.sum(), 10.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505637,"byte_end":505666,"line_start":31,"line_end":31,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505671,"byte_end":505678,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506691,"byte_end":506695,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"mean","qualname":"<ArrayBase<S, D>>::mean","value":"pub fn mean(&Self) -> Option<A> where A: Clone + FromPrimitive + Add<Output =\nA> + Div<Output = A> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the [arithmetic mean] x̅ of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [arithmetic mean] x̅ of all elements in the array:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506268,"byte_end":506335,"line_start":51,"line_end":51,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506340,"byte_end":506343,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506348,"byte_end":506359,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506364,"byte_end":506377,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506382,"byte_end":506406,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506411,"byte_end":506425,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506430,"byte_end":506437,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506442,"byte_end":506445,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `None` is returned.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506450,"byte_end":506496,"line_start":59,"line_end":59,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506501,"byte_end":506504,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506509,"byte_end":506598,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506603,"byte_end":506606,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ [arithmetic mean]: https://en.wikipedia.org/wiki/Arithmetic_mean","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":506611,"byte_end":506679,"line_start":63,"line_end":63,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4105},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507338,"byte_end":507348,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"scalar_sum","qualname":"<ArrayBase<S, D>>::scalar_sum","value":"pub fn scalar_sum(&Self) -> A where A: Clone + Add<Output = A> +\nnum_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507107,"byte_end":507155,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507160,"byte_end":507163,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ *This method has been renamed to `.sum()` and will be deprecated in the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507168,"byte_end":507243,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ next version.*","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507248,"byte_end":507266,"line_start":81,"line_end":81,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507699,"byte_end":507706,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"product","qualname":"<ArrayBase<S, D>>::product","value":"pub fn product(&Self) -> A where A: Clone + Mul<Output = A> + num_traits::One","parent":null,"children":[],"decl_id":null,"docs":" Return the product of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the product of all elements in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507462,"byte_end":507514,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507519,"byte_end":507522,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507527,"byte_end":507534,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507539,"byte_end":507561,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507566,"byte_end":507569,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507574,"byte_end":507602,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507607,"byte_end":507637,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.product(), 24.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507642,"byte_end":507675,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":507680,"byte_end":507687,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4108},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508757,"byte_end":508765,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"sum_axis","qualname":"<ArrayBase<S, D>>::sum_axis","value":"pub fn sum_axis(&Self, Axis) -> Array<A, D::Smaller> where A: Clone + Zero +\nAdd<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return sum along `axis`.","sig":null,"attributes":[{"value":"/ Return sum along `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508276,"byte_end":508304,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508309,"byte_end":508312,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508317,"byte_end":508324,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508329,"byte_end":508375,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508380,"byte_end":508383,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508388,"byte_end":508420,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508425,"byte_end":508459,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508464,"byte_end":508476,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/     a.sum_axis(Axis(0)) == aview1(&[5., 7., 9.]) &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508481,"byte_end":508536,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/     a.sum_axis(Axis(1)) == aview1(&[6., 15.]) &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508541,"byte_end":508593,"line_start":126,"line_end":126,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508598,"byte_end":508601,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     a.sum_axis(Axis(0)).sum_axis(Axis(0)) == aview0(&21.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508606,"byte_end":508667,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508672,"byte_end":508678,"line_start":129,"line_end":129,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508683,"byte_end":508690,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508695,"byte_end":508698,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":508703,"byte_end":508745,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4109},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510137,"byte_end":510146,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"mean_axis","qualname":"<ArrayBase<S, D>>::mean_axis","value":"pub fn mean_axis(&Self, Axis) -> Option<Array<A, D::Smaller>> where A: Clone +\nZero + FromPrimitive + Add<Output = A> + Div<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return mean along `axis`.","sig":null,"attributes":[{"value":"/ Return mean along `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509490,"byte_end":509519,"line_start":156,"line_end":156,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509524,"byte_end":509527,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the length of the axis is zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509532,"byte_end":509584,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509589,"byte_end":509592,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `A::from_usize()`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509597,"byte_end":509662,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ fails for the axis length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509667,"byte_end":509697,"line_start":161,"line_end":161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509702,"byte_end":509705,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509710,"byte_end":509717,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509722,"byte_end":509768,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509773,"byte_end":509776,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509781,"byte_end":509813,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509818,"byte_end":509852,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509857,"byte_end":509869,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/     a.mean_axis(Axis(0)).unwrap() == aview1(&[2.5, 3.5, 4.5]) &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509874,"byte_end":509942,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/     a.mean_axis(Axis(1)).unwrap() == aview1(&[2., 5.]) &&","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":509947,"byte_end":510008,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510013,"byte_end":510016,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     a.mean_axis(Axis(0)).unwrap().mean_axis(Axis(0)).unwrap() == aview0(&3.5)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510021,"byte_end":510102,"line_start":172,"line_end":172,"column_start":5,"column_end":86}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510107,"byte_end":510113,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510118,"byte_end":510125,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511929,"byte_end":511937,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"var_axis","qualname":"<ArrayBase<S, D>>::var_axis","value":"pub fn var_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return variance along `axis`.","sig":null,"attributes":[{"value":"/ Return variance along `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510661,"byte_end":510694,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510699,"byte_end":510702,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510707,"byte_end":510763,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510768,"byte_end":510821,"line_start":194,"line_end":194,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510826,"byte_end":510829,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510834,"byte_end":510904,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510909,"byte_end":510981,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":510986,"byte_end":511036,"line_start":198,"line_end":198,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511041,"byte_end":511044,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511049,"byte_end":511080,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511085,"byte_end":511088,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511093,"byte_end":511104,"line_start":202,"line_end":202,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511109,"byte_end":511136,"line_start":203,"line_end":203,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511141,"byte_end":511201,"line_start":204,"line_end":204,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511206,"byte_end":511234,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511239,"byte_end":511246,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511251,"byte_end":511254,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511259,"byte_end":511268,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511273,"byte_end":511276,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511281,"byte_end":511292,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511297,"byte_end":511310,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511315,"byte_end":511339,"line_start":212,"line_end":212,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511344,"byte_end":511358,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511363,"byte_end":511370,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511375,"byte_end":511378,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511383,"byte_end":511421,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511426,"byte_end":511429,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511434,"byte_end":511507,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511512,"byte_end":511582,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511587,"byte_end":511620,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511625,"byte_end":511628,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511633,"byte_end":511646,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511651,"byte_end":511654,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511659,"byte_end":511666,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511671,"byte_end":511709,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511714,"byte_end":511717,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511722,"byte_end":511750,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511755,"byte_end":511783,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511788,"byte_end":511818,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let var = a.var_axis(Axis(0), 1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511823,"byte_end":511861,"line_start":230,"line_end":230,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(var, aview1(&[4., 4.]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511866,"byte_end":511905,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":511910,"byte_end":511917,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514444,"byte_end":514452,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"std_axis","qualname":"<ArrayBase<S, D>>::std_axis","value":"pub fn std_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation along `axis`.","sig":null,"attributes":[{"value":"/ Return standard deviation along `axis`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513053,"byte_end":513096,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513101,"byte_end":513104,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513109,"byte_end":513171,"line_start":261,"line_end":261,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513176,"byte_end":513251,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513256,"byte_end":513259,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513264,"byte_end":513334,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513339,"byte_end":513415,"line_start":265,"line_end":265,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513420,"byte_end":513486,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513491,"byte_end":513494,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513499,"byte_end":513540,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513545,"byte_end":513548,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513553,"byte_end":513564,"line_start":270,"line_end":270,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513569,"byte_end":513616,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513621,"byte_end":513691,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513696,"byte_end":513743,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513748,"byte_end":513755,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513760,"byte_end":513763,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513768,"byte_end":513777,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513782,"byte_end":513785,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513790,"byte_end":513801,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513806,"byte_end":513819,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513824,"byte_end":513848,"line_start":280,"line_end":280,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513853,"byte_end":513867,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513872,"byte_end":513879,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513884,"byte_end":513887,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513892,"byte_end":513930,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513935,"byte_end":513938,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":513943,"byte_end":514016,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514021,"byte_end":514091,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514096,"byte_end":514129,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514134,"byte_end":514137,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514142,"byte_end":514155,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514160,"byte_end":514163,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514168,"byte_end":514175,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514180,"byte_end":514218,"line_start":293,"line_end":293,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514223,"byte_end":514226,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514231,"byte_end":514259,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514264,"byte_end":514292,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514297,"byte_end":514327,"line_start":297,"line_end":297,"column_start":5,"column_end":35}},{"value":"/ let stddev = a.std_axis(Axis(0), 1.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514332,"byte_end":514373,"line_start":298,"line_end":298,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stddev, aview1(&[2., 2.]));","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514378,"byte_end":514420,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514425,"byte_end":514432,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":515078,"byte_end":515087,"line_start":319,"line_end":319,"column_start":12,"column_end":21},"name":"all_close","qualname":"<ArrayBase<S, D>>::all_close","value":"pub fn all_close<S2, E>(&Self, &ArrayBase<S2, E>, A) -> bool where A: Float,\nS2: Data<Elem = A>, E: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the arrays' elementwise differences are all within\n the given absolute tolerance, `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if the arrays' elementwise differences are all within","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514647,"byte_end":514718,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the given absolute tolerance, `false` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514723,"byte_end":514775,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514780,"byte_end":514783,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514788,"byte_end":514860,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514865,"byte_end":514868,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting to the same shape isn’t possible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514873,"byte_end":514939,"line_start":314,"line_end":314,"column_start":5,"column_end":69}},{"value":"deprecated(note =\n             \"Use `abs_diff_eq` - it requires the `approx` crate feature\",\n             since = \"0.13.0\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":514944,"byte_end":515066,"line_start":315,"line_end":318,"column_start":5,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":4118},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":4119},{"krate":0,"index":4122},{"krate":0,"index":4125},{"krate":0,"index":4128}],"decl_id":null,"docs":" Linear algebra.\n","sig":null,"attributes":[{"value":"/ Linear algebra.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/mod.rs","byte_start":515916,"byte_end":515935,"line_start":9,"line_end":9,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4146},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":518075,"byte_end":518078,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix1>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform dot product or matrix multiplication of arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform dot product or matrix multiplication of arrays `self` and `rhs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517191,"byte_end":517267,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517272,"byte_end":517275,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517280,"byte_end":517349,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517354,"byte_end":517357,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is one-dimensional, then the operation is a vector dot","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517362,"byte_end":517429,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ product, which is the sum of the elementwise products (no conjugation","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517434,"byte_end":517507,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ of complex operands, and thus not their inner product). In this case,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517512,"byte_end":517585,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ `self` and `rhs` must be the same length.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517590,"byte_end":517635,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517640,"byte_end":517643,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is two-dimensional, then the operation is matrix","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517648,"byte_end":517709,"line_start":51,"line_end":51,"column_start":5,"column_end":66}},{"value":"/ multiplication, where `self` is treated as a row vector. In this case,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517714,"byte_end":517788,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ if `self` is shape *M*, then `rhs` is shape *M* × *N* and the result is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517793,"byte_end":517869,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ shape *N*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517874,"byte_end":517888,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517893,"byte_end":517896,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the array shapes are incompatible.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517901,"byte_end":517957,"line_start":56,"line_end":56,"column_start":5,"column_end":61}},{"value":"/ *Note:* If enabled, uses blas `dot` for elements of `f32, f64` when memory","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517962,"byte_end":518040,"line_start":57,"line_end":57,"column_start":5,"column_end":83}},{"value":"/ layout allows.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":518045,"byte_end":518063,"line_start":58,"line_end":58,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":4152},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521283,"byte_end":521286,"line_start":161,"line_end":161,"column_start":11,"column_end":14},"name":"Dot","qualname":"::linalg::impl_linalg::Dot","value":"Dot<Rhs>","parent":null,"children":[{"krate":0,"index":4154},{"krate":0,"index":4155}],"decl_id":null,"docs":" Matrix Multiplication","sig":null,"attributes":[{"value":"/ Matrix Multiplication","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521156,"byte_end":521181,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521182,"byte_end":521185,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ For two-dimensional arrays, the dot method computes the matrix","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521186,"byte_end":521252,"line_start":159,"line_end":159,"column_start":1,"column_end":67}},{"value":"/ multiplication.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521253,"byte_end":521272,"line_start":160,"line_end":160,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":4154},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521405,"byte_end":521411,"line_start":165,"line_end":165,"column_start":10,"column_end":16},"name":"Output","qualname":"::linalg::impl_linalg::Dot::Output","value":"type Output;","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":" The result of the operation.","sig":null,"attributes":[{"value":"/ The result of the operation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521298,"byte_end":521330,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521335,"byte_end":521338,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ For two-dimensional arrays: a rectangular array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521343,"byte_end":521395,"line_start":164,"line_end":164,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4155},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521420,"byte_end":521423,"line_start":166,"line_end":166,"column_start":8,"column_end":11},"name":"dot","qualname":"::linalg::impl_linalg::Dot::dot","value":"pub fn dot(&Self, &Rhs) -> Self::Output","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523799,"byte_end":523802,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix2>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform matrix multiplication of rectangular arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform matrix multiplication of rectangular arrays `self` and `rhs`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522754,"byte_end":522827,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522832,"byte_end":522835,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522840,"byte_end":522909,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522914,"byte_end":522917,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ If Rhs is two-dimensional, they array shapes must agree in the way that","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522922,"byte_end":522997,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ if `self` is *M* × *N*, then `rhs` is *N* × *K*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523002,"byte_end":523056,"line_start":221,"line_end":221,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523061,"byte_end":523064,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Return a result array with shape *M* × *K*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523069,"byte_end":523117,"line_start":223,"line_end":223,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523122,"byte_end":523125,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible or the number of elements in the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523130,"byte_end":523204,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ result would overflow `isize`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523209,"byte_end":523243,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523248,"byte_end":523251,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ *Note:* If enabled, uses blas `gemv/gemm` for elements of `f32, f64`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523256,"byte_end":523328,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/ when memory layout allows. The default matrixmultiply backend","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523333,"byte_end":523398,"line_start":229,"line_end":229,"column_start":5,"column_end":70}},{"value":"/ is otherwise used for `f32, f64` for all memory layouts.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523403,"byte_end":523463,"line_start":230,"line_end":230,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523468,"byte_end":523471,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523476,"byte_end":523483,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523488,"byte_end":523510,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523515,"byte_end":523518,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523523,"byte_end":523551,"line_start":235,"line_end":235,"column_start":5,"column_end":33}},{"value":"/                [0., 1.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523556,"byte_end":523586,"line_start":236,"line_end":236,"column_start":5,"column_end":35}},{"value":"/ let b = arr2(&[[1., 2.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523591,"byte_end":523619,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/                [2., 3.]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523624,"byte_end":523654,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523659,"byte_end":523662,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523667,"byte_end":523679,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/     a.dot(&b) == arr2(&[[5., 8.],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523684,"byte_end":523721,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/                         [2., 3.]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523726,"byte_end":523764,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523769,"byte_end":523775,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523780,"byte_end":523787,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4191},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526857,"byte_end":526867,"line_start":347,"line_end":347,"column_start":12,"column_end":22},"name":"scaled_add","qualname":"<ArrayBase<S, D>>::scaled_add","value":"pub fn scaled_add<S2, E>(&mut Self, A, &ArrayBase<S2, E>) where S: DataMut,\nS2: Data<Elem = A>, A: LinalgScalar, E: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Perform the operation `self += alpha * rhs` efficiently, where\n `alpha` is a scalar and `rhs` is another array. This operation is\n also known as `axpy` in BLAS.","sig":null,"attributes":[{"value":"/ Perform the operation `self += alpha * rhs` efficiently, where","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526521,"byte_end":526587,"line_start":340,"line_end":340,"column_start":5,"column_end":71}},{"value":"/ `alpha` is a scalar and `rhs` is another array. This operation is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526592,"byte_end":526661,"line_start":341,"line_end":341,"column_start":5,"column_end":74}},{"value":"/ also known as `axpy` in BLAS.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526666,"byte_end":526699,"line_start":342,"line_end":342,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526704,"byte_end":526707,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526712,"byte_end":526784,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526789,"byte_end":526792,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526797,"byte_end":526845,"line_start":346,"line_end":346,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":4201},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533834,"byte_end":533849,"line_start":558,"line_end":558,"column_start":8,"column_end":23},"name":"general_mat_mul","qualname":"::linalg::impl_linalg::general_mat_mul","value":"pub fn general_mat_mul<A, S1, S2,\n                       S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix2>, A,\n                           &mut ArrayBase<S3, Ix2>) where S1: Data<Elem = A>,\nS2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-matrix multiplication.","sig":null,"attributes":[{"value":"/ General matrix-matrix multiplication.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533369,"byte_end":533410,"line_start":547,"line_end":547,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533411,"byte_end":533414,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ Compute C ← α A B + β C","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533415,"byte_end":533446,"line_start":549,"line_end":549,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533447,"byte_end":533450,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ The array shapes must agree in the way that","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533451,"byte_end":533498,"line_start":551,"line_end":551,"column_start":1,"column_end":48}},{"value":"/ if `a` is *M* × *N*, then `b` is *N* × *K* and `c` is *M* × *K*.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533499,"byte_end":533570,"line_start":552,"line_end":552,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533571,"byte_end":533574,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533575,"byte_end":533630,"line_start":554,"line_end":554,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemm` for elements of `f32, f64` when memory","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533631,"byte_end":533710,"line_start":555,"line_end":555,"column_start":1,"column_end":80}},{"value":"/ layout allows.  The default matrixmultiply backend is otherwise used for","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533711,"byte_end":533787,"line_start":556,"line_end":556,"column_start":1,"column_end":77}},{"value":"/ `f32, f64` for all memory layouts.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":533788,"byte_end":533826,"line_start":557,"line_end":557,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":4206},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534773,"byte_end":534792,"line_start":590,"line_end":590,"column_start":8,"column_end":27},"name":"general_mat_vec_mul","qualname":"::linalg::impl_linalg::general_mat_vec_mul","value":"pub fn general_mat_vec_mul<A, S1, S2,\n                           S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix1>, A,\n                               &mut ArrayBase<S3, Ix1>) where S1: Data<Elem =\nA>, S2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-vector multiplication.","sig":null,"attributes":[{"value":"/ General matrix-vector multiplication.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534354,"byte_end":534395,"line_start":579,"line_end":579,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534396,"byte_end":534399,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ Compute y ← α A x + β y","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534400,"byte_end":534431,"line_start":581,"line_end":581,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534432,"byte_end":534435,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ where A is a *M* × *N* matrix and x is an *N*-element column vector and","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534436,"byte_end":534512,"line_start":583,"line_end":583,"column_start":1,"column_end":76}},{"value":"/ y an *M*-element column vector (one dimensional arrays).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534513,"byte_end":534573,"line_start":584,"line_end":584,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534574,"byte_end":534577,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534578,"byte_end":534633,"line_start":586,"line_end":586,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemv` for elements of `f32, f64` when memory","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534634,"byte_end":534713,"line_start":587,"line_end":587,"column_start":1,"column_end":80}},{"value":"/ layout allows.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534714,"byte_end":534732,"line_start":588,"line_end":588,"column_start":1,"column_end":19}},{"value":"allow(clippy :: collapsible_if)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":534733,"byte_end":534765,"line_start":589,"line_end":589,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":4223},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543350,"byte_end":543363,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"ScalarOperand","qualname":"::impl_ops::ScalarOperand","value":"ScalarOperand: 'static + Clone","parent":null,"children":[],"decl_id":null,"docs":" Elements that can be used as direct operands in arithmetic with arrays.","sig":null,"attributes":[{"value":"/ Elements that can be used as direct operands in arithmetic with arrays.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542267,"byte_end":542342,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542343,"byte_end":542346,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ For example, `f64` is a `ScalarOperand` which means that for an array `a`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542347,"byte_end":542425,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ arithmetic like `a + 1.0`, and, `a * 2.`, and `a += 3.` are allowed.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542426,"byte_end":542498,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542499,"byte_end":542502,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In the description below, let `A` be an array or array view,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542503,"byte_end":542567,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ let `B` be an array with owned data,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542568,"byte_end":542608,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ and let `C` be an array with mutable data.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542609,"byte_end":542655,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542656,"byte_end":542659,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `ScalarOperand` determines for which scalars `K` operations `&A @ K`, and `B @ K`,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542660,"byte_end":542746,"line_start":20,"line_end":20,"column_start":1,"column_end":87}},{"value":"/ and `C @= K` are defined, as ***right hand side operands***, for applicable","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542747,"byte_end":542826,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ arithmetic operators (denoted `@`).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542827,"byte_end":542866,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542867,"byte_end":542870,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ***Left hand side*** scalar operands are not related to this trait","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542871,"byte_end":542941,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ (they need one `impl` per concrete scalar type); but they are still","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":542942,"byte_end":543013,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ implemented for the same types, allowing operations","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543014,"byte_end":543069,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ `K @ &A`, and `K @ B` for primitive numeric types `K`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543070,"byte_end":543128,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543129,"byte_end":543132,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait ***does not*** limit which elements can be stored in an array in general.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543133,"byte_end":543221,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ Non-`ScalarOperand` types can still participate in arithmetic as array elements in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543222,"byte_end":543308,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ in array-array operations.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543309,"byte_end":543339,"line_start":31,"line_end":31,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557932,"byte_end":557942,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayView>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-only array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-only array view borrowing its data from a slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557132,"byte_end":557198,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557203,"byte_end":557206,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Checks whether `shape` are compatible with the slice's","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557211,"byte_end":557269,"line_start":24,"line_end":24,"column_start":5,"column_end":63}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557274,"byte_end":557323,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557328,"byte_end":557331,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557336,"byte_end":557343,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557348,"byte_end":557375,"line_start":28,"line_end":28,"column_start":5,"column_end":32}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557380,"byte_end":557402,"line_start":29,"line_end":29,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557407,"byte_end":557437,"line_start":30,"line_end":30,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557442,"byte_end":557445,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557450,"byte_end":557505,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"/ let a = ArrayView::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557510,"byte_end":557573,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"/                               &s).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557578,"byte_end":557625,"line_start":34,"line_end":34,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557630,"byte_end":557633,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557638,"byte_end":557650,"line_start":36,"line_end":36,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[0, 2],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557655,"byte_end":557683,"line_start":37,"line_end":37,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557688,"byte_end":557716,"line_start":38,"line_end":38,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557721,"byte_end":557751,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557756,"byte_end":557784,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557789,"byte_end":557817,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557822,"byte_end":557853,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557858,"byte_end":557864,"line_start":43,"line_end":43,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557869,"byte_end":557908,"line_start":44,"line_end":44,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557913,"byte_end":557920,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560635,"byte_end":560649,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayView>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayView<A, D>` from shape information and a raw pointer to\n the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayView<A, D>` from shape information and a raw pointer to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558578,"byte_end":558653,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ the elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558658,"byte_end":558675,"line_start":66,"line_end":66,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558680,"byte_end":558683,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558688,"byte_end":558700,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558705,"byte_end":558708,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558713,"byte_end":558777,"line_start":70,"line_end":70,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558782,"byte_end":558785,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558790,"byte_end":558864,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be not mutably","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558869,"byte_end":558937,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/   aliased for the duration of `'a`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558942,"byte_end":558981,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558986,"byte_end":558989,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":558994,"byte_end":559058,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559063,"byte_end":559097,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559102,"byte_end":559105,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559110,"byte_end":559181,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559186,"byte_end":559257,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559262,"byte_end":559336,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559341,"byte_end":559344,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559349,"byte_end":559370,"line_start":83,"line_end":83,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559375,"byte_end":559378,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559383,"byte_end":559458,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559463,"byte_end":559538,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559543,"byte_end":559621,"line_start":87,"line_end":87,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559626,"byte_end":559704,"line_start":88,"line_end":88,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559709,"byte_end":559775,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559780,"byte_end":559783,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559788,"byte_end":559863,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559868,"byte_end":559943,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":559948,"byte_end":560023,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560028,"byte_end":560097,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560102,"byte_end":560105,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560110,"byte_end":560183,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560188,"byte_end":560263,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560268,"byte_end":560346,"line_start":98,"line_end":98,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560351,"byte_end":560426,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560431,"byte_end":560434,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560439,"byte_end":560511,"line_start":101,"line_end":101,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560516,"byte_end":560519,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560524,"byte_end":560616,"line_start":103,"line_end":103,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561786,"byte_end":561796,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayViewMut>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a mut [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-write array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-write array view borrowing its data from a slice.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560922,"byte_end":560989,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560994,"byte_end":560997,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Checks whether `dim` and `strides` are compatible with the slice's","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561002,"byte_end":561072,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561077,"byte_end":561126,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561131,"byte_end":561134,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561139,"byte_end":561146,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayViewMut;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561151,"byte_end":561181,"line_start":123,"line_end":123,"column_start":5,"column_end":35}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561186,"byte_end":561208,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561213,"byte_end":561243,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561248,"byte_end":561251,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let mut s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561256,"byte_end":561315,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ let mut a = ArrayViewMut::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561320,"byte_end":561390,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/                                      &mut s).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561395,"byte_end":561453,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561458,"byte_end":561461,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ a[[0, 0, 0]] = 1;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561466,"byte_end":561487,"line_start":131,"line_end":131,"column_start":5,"column_end":26}},{"value":"/ assert!(","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561492,"byte_end":561504,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1, 2],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561509,"byte_end":561537,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561542,"byte_end":561570,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561575,"byte_end":561605,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561610,"byte_end":561638,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561643,"byte_end":561671,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561676,"byte_end":561707,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561712,"byte_end":561718,"line_start":139,"line_end":139,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561723,"byte_end":561762,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":561767,"byte_end":561774,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564492,"byte_end":564506,"line_start":200,"line_end":200,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayViewMut>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayViewMut<A, D>` from shape information and a\n raw pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayViewMut<A, D>` from shape information and a","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562444,"byte_end":562507,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/ raw pointer to the elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562512,"byte_end":562544,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562549,"byte_end":562552,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562557,"byte_end":562569,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562574,"byte_end":562577,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562582,"byte_end":562646,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562651,"byte_end":562654,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562659,"byte_end":562733,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be aliased for the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562738,"byte_end":562810,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/   duration of `'a`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562815,"byte_end":562838,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562843,"byte_end":562846,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562851,"byte_end":562915,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562920,"byte_end":562954,"line_start":173,"line_end":173,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562959,"byte_end":562962,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":562967,"byte_end":563038,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563043,"byte_end":563114,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563119,"byte_end":563193,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563198,"byte_end":563201,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563206,"byte_end":563227,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563232,"byte_end":563235,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563240,"byte_end":563315,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563320,"byte_end":563395,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563400,"byte_end":563478,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563483,"byte_end":563561,"line_start":184,"line_end":184,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563566,"byte_end":563632,"line_start":185,"line_end":185,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563637,"byte_end":563640,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563645,"byte_end":563720,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563725,"byte_end":563800,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563805,"byte_end":563880,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563885,"byte_end":563954,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563959,"byte_end":563962,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":563967,"byte_end":564040,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564045,"byte_end":564120,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564125,"byte_end":564203,"line_start":194,"line_end":194,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564208,"byte_end":564283,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564288,"byte_end":564291,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564296,"byte_end":564368,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564373,"byte_end":564376,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564381,"byte_end":564473,"line_start":199,"line_end":199,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564795,"byte_end":564803,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayViewMut>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayViewMut where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564678,"byte_end":564756,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564761,"byte_end":564783,"line_start":208,"line_end":208,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4379},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567545,"byte_end":567553,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayView>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayView where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567431,"byte_end":567506,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567511,"byte_end":567533,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4381},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567961,"byte_end":567971,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ArrayView>::into_slice","value":"pub fn into_slice(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567698,"byte_end":567782,"line_start":32,"line_end":32,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567787,"byte_end":567815,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"deprecated(note = \"`into_slice` has been renamed to `to_slice`\", since =\n             \"0.13.0\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567820,"byte_end":567905,"line_start":34,"line_end":34,"column_start":5,"column_end":90}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567910,"byte_end":567949,"line_start":35,"line_end":35,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":568305,"byte_end":568313,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<ArrayView>::to_slice","value":"pub fn to_slice(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":568176,"byte_end":568260,"line_start":44,"line_end":44,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":568265,"byte_end":568293,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4387},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569495,"byte_end":569506,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayView>::into_scalar","value":"pub fn into_scalar(Self) -> &'a A","parent":null,"children":[],"decl_id":null,"docs":" Consume the view and return a reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the view and return a reference to the single element in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":568929,"byte_end":569008,"line_start":67,"line_end":67,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569013,"byte_end":569016,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569021,"byte_end":569096,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569101,"byte_end":569136,"line_start":70,"line_end":70,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569141,"byte_end":569144,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569149,"byte_end":569156,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569161,"byte_end":569193,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569198,"byte_end":569201,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569206,"byte_end":569245,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569250,"byte_end":569285,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569290,"byte_end":569305,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569310,"byte_end":569313,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569318,"byte_end":569357,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ let view = array.view();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569362,"byte_end":569390,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/ let scalar: &Foo = view.into_scalar();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569395,"byte_end":569437,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, &Foo);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569442,"byte_end":569471,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569476,"byte_end":569483,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570340,"byte_end":570351,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayViewMut>::into_scalar","value":"pub fn into_scalar(Self) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Consume the mutable view and return a mutable reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the mutable view and return a mutable reference to the single element in the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569809,"byte_end":569904,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569909,"byte_end":569912,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569917,"byte_end":569992,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569997,"byte_end":570032,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570037,"byte_end":570040,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570045,"byte_end":570052,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570057,"byte_end":570089,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570094,"byte_end":570097,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let mut array: Array0<f64> = arr0(5.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570102,"byte_end":570144,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"/ let view = array.view_mut();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570149,"byte_end":570181,"line_start":105,"line_end":105,"column_start":5,"column_end":37}},{"value":"/ let mut scalar = view.into_scalar();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570186,"byte_end":570226,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/ *scalar = 7.;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570231,"byte_end":570248,"line_start":107,"line_end":107,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(scalar, &7.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570253,"byte_end":570281,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(array[()], 7.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570286,"byte_end":570316,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570321,"byte_end":570328,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570645,"byte_end":570655,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ArrayViewMut>::into_slice","value":"pub fn into_slice(Self) -> Option<&'a mut [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570516,"byte_end":570600,"line_start":121,"line_end":121,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570605,"byte_end":570633,"line_start":122,"line_end":122,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4404},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":571338,"byte_end":571353,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayView>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIter where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":571190,"byte_end":571233,"line_start":147,"line_end":147,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":571273,"byte_end":571326,"line_start":149,"line_end":149,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4415},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":572689,"byte_end":572704,"line_start":197,"line_end":197,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayViewMut>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIterMut where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":572541,"byte_end":572584,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":572624,"byte_end":572677,"line_start":196,"line_end":196,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4424},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574703,"byte_end":574714,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IndexLonger","qualname":"::impl_views::indexing::IndexLonger","value":"IndexLonger<I>","parent":null,"children":[{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429}],"decl_id":null,"docs":" Extra indexing methods for array views","sig":null,"attributes":[{"value":"/ Extra indexing methods for array views","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573289,"byte_end":573331,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573332,"byte_end":573335,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ These methods are very similar to regular indexing or calling of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573336,"byte_end":573408,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `get`/`get_mut` methods that we can use on any array or array view. The","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573409,"byte_end":573484,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ difference here is in the length of lifetime in the resulting reference.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573485,"byte_end":573561,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573562,"byte_end":573565,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note** that the `ArrayView` (read-only) and `ArrayViewMut` (read-write) differ","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573566,"byte_end":573650,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ in how they are allowed implement this trait -- `ArrayView`'s implementation","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573651,"byte_end":573731,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ is usual. If you put in a `ArrayView<'a, T, D>` here, you get references","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573732,"byte_end":573808,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ `&'a T` out.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573809,"byte_end":573825,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573826,"byte_end":573829,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For `ArrayViewMut` to obey the borrowing rules we have to consume the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573830,"byte_end":573903,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ view if we call any of these methods. (The equivalent of reborrow is","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573904,"byte_end":573976,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `.view_mut()` for read-write array views, but if you can use that,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":573977,"byte_end":574047,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ then the regular indexing / `get_mut` should suffice, too.)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574048,"byte_end":574111,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574112,"byte_end":574115,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574116,"byte_end":574123,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use ndarray::IndexLonger;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574124,"byte_end":574153,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574154,"byte_end":574181,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574182,"byte_end":574185,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let data = [0.; 256];","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574186,"byte_end":574211,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ let long_life_ref = {","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574212,"byte_end":574237,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/     // make a 16 × 16 array view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574238,"byte_end":574275,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/     let view = ArrayView::from(&data[..]).into_shape((16, 16)).unwrap();","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574276,"byte_end":574352,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574353,"byte_end":574356,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // index the view and with `IndexLonger`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574357,"byte_end":574406,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/     // Note here that we get a reference with a life that is derived from","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574407,"byte_end":574484,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/     // `data`, the base data, instead of being derived from the view","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574485,"byte_end":574557,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     IndexLonger::index(&view, [0, 1])","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574558,"byte_end":574599,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574600,"byte_end":574606,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574607,"byte_end":574610,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // view goes out of scope","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574611,"byte_end":574640,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574641,"byte_end":574644,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(long_life_ref, &0.);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574645,"byte_end":574680,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574681,"byte_end":574684,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574685,"byte_end":574692,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":4426},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574828,"byte_end":574834,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::impl_views::indexing::IndexLonger::Output","value":"type Output;","parent":{"krate":0,"index":4424},"children":[],"decl_id":null,"docs":" The type of the reference to the element that is produced, including\n its lifetime.\n","sig":null,"attributes":[{"value":"/ The type of the reference to the element that is produced, including","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574724,"byte_end":574796,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ its lifetime.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574801,"byte_end":574818,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4427},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575296,"byte_end":575301,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"index","qualname":"::impl_views::indexing::IndexLonger::index","value":"pub fn index(Self, I) -> Self::Output","parent":{"krate":0,"index":4424},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574840,"byte_end":574890,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574895,"byte_end":574898,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is like `Index::index` but with a longer lifetime (matching","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574903,"byte_end":574978,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":574983,"byte_end":575058,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575063,"byte_end":575081,"line_start":57,"line_end":57,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575086,"byte_end":575089,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] which works for all arrays and array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575094,"byte_end":575165,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ views.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575170,"byte_end":575180,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575185,"byte_end":575188,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575193,"byte_end":575234,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575239,"byte_end":575242,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575247,"byte_end":575288,"line_start":64,"line_end":64,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4428},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575869,"byte_end":575872,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"get","qualname":"::impl_views::indexing::IndexLonger::get","value":"pub fn get(Self, I) -> Option<Self::Output>","parent":{"krate":0,"index":4424},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575340,"byte_end":575390,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575395,"byte_end":575398,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method is like `ArrayBase::get` but with a longer lifetime (matching","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575403,"byte_end":575480,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575485,"byte_end":575560,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575565,"byte_end":575583,"line_start":71,"line_end":71,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575588,"byte_end":575591,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] (and [`get_mut`][2]) which works for all arrays and array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575596,"byte_end":575688,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ views.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575693,"byte_end":575703,"line_start":74,"line_end":74,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575708,"byte_end":575711,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575716,"byte_end":575757,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ [2]: struct.ArrayBase.html#method.get_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575762,"byte_end":575807,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575812,"byte_end":575815,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575820,"byte_end":575861,"line_start":79,"line_end":79,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4429},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576467,"byte_end":576471,"line_start":97,"line_end":97,"column_start":15,"column_end":19},"name":"uget","qualname":"::impl_views::indexing::IndexLonger::uget","value":"pub unsafe fn uget(Self, I) -> Self::Output","parent":{"krate":0,"index":4424},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view without boundary check","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view without boundary check","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575919,"byte_end":575991,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":575996,"byte_end":575999,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method is like `elem` with a longer lifetime (matching the array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576004,"byte_end":576077,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ view); which we can't do for general arrays.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576082,"byte_end":576130,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576135,"byte_end":576138,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ See also [the `uget` method][1] which works for all arrays and array","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576143,"byte_end":576215,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ views.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576220,"byte_end":576230,"line_start":88,"line_end":88,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576235,"byte_end":576238,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.uget","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576243,"byte_end":576285,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576290,"byte_end":576293,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576298,"byte_end":576359,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576364,"byte_end":576367,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576372,"byte_end":576384,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576389,"byte_end":576392,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":576397,"byte_end":576452,"line_start":96,"line_end":96,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584245,"byte_end":584253,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayView>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one view strictly before the\n split and one view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one view strictly before the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580484,"byte_end":580561,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ split and one view after the split.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580566,"byte_end":580605,"line_start":18,"line_end":18,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580610,"byte_end":580613,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580618,"byte_end":580671,"line_start":20,"line_end":20,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580676,"byte_end":580679,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ **Examples:**","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580684,"byte_end":580701,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580706,"byte_end":580717,"line_start":23,"line_end":23,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580722,"byte_end":580752,"line_start":24,"line_end":24,"column_start":5,"column_end":35}},{"value":"/ let a = aview2(&[[0, 1, 2, 3],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580757,"byte_end":580791,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/                  [4, 5, 6, 7],","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580796,"byte_end":580830,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/                  [8, 9, 0, 1]]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580835,"byte_end":580871,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580876,"byte_end":580879,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580884,"byte_end":580891,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ The array view `a` has two axes and shape 3 × 4:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580896,"byte_end":580949,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580954,"byte_end":580965,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580970,"byte_end":581000,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/         ┌─────┬─────┬─────┬─────┐ 0","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581005,"byte_end":581094,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/       │ │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581099,"byte_end":581164,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/       ▼ ├─────┼─────┼─────┼─────┤ 1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581169,"byte_end":581260,"line_start":35,"line_end":35,"column_start":5,"column_end":44}},{"value":"/  Axis(0)│ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581265,"byte_end":581328,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/         ├─────┼─────┼─────┼─────┤ 2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581333,"byte_end":581422,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581427,"byte_end":581490,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘ 3 ↑","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581495,"byte_end":581588,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/         0     1     2     3     4 ← possible split_at indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581593,"byte_end":581661,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581666,"byte_end":581673,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581678,"byte_end":581681,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Row indices increase along `Axis(0)`, and column indices increase along","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581686,"byte_end":581761,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ `Axis(1)`. Note that we split “before” an element index, and that","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581766,"byte_end":581839,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ both 0 and the endpoint are valid split indices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581844,"byte_end":581896,"line_start":45,"line_end":45,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581901,"byte_end":581904,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ **Example 1**: Split `a` along the first axis, in this case the rows, at","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581909,"byte_end":581985,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ index 2.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":581990,"byte_end":582006,"line_start":48,"line_end":48,"column_start":5,"column_end":21}},{"value":"/ This produces views v1 and v2 of shapes 2 × 4 and 1 × 4:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582011,"byte_end":582073,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582078,"byte_end":582081,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582086,"byte_end":582097,"line_start":51,"line_end":51,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582102,"byte_end":582132,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582137,"byte_end":582172,"line_start":53,"line_end":53,"column_start":5,"column_end":40}},{"value":"/ let (v1, v2) = a.split_at(Axis(0), 2);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582177,"byte_end":582219,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582224,"byte_end":582231,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582236,"byte_end":582247,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/         ┌─────┬─────┬─────┬─────┐       0  ↓ indices","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582252,"byte_end":582360,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/         │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │            along Axis(0)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582365,"byte_end":582453,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/         ├─────┼─────┼─────┼─────┤ v1    1","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582458,"byte_end":582553,"line_start":59,"line_end":59,"column_start":5,"column_end":50}},{"value":"/         │ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582558,"byte_end":582621,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582626,"byte_end":582713,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"/         ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄       2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582718,"byte_end":582813,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/         ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582818,"byte_end":582905,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │ v2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582910,"byte_end":582976,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/         └─────┴─────┴─────┴─────┘       3","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":582981,"byte_end":583076,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583081,"byte_end":583088,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583093,"byte_end":583096,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ **Example 2**: Split `a` along the second axis, in this case the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583101,"byte_end":583169,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ columns, at index 2.<br>","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583174,"byte_end":583202,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ This produces views u1 and u2 of shapes 3 × 2 and 3 × 2:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583207,"byte_end":583270,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583275,"byte_end":583278,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583283,"byte_end":583294,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583299,"byte_end":583329,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583334,"byte_end":583369,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/ let (u1, u2) = a.split_at(Axis(1), 2);","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583374,"byte_end":583416,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583421,"byte_end":583424,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583429,"byte_end":583436,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583441,"byte_end":583452,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/              u1             u2","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583457,"byte_end":583491,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/         ┌─────┬─────┐┊┌─────┬─────┐","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583496,"byte_end":583589,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/         │ a₀₀ │ a₀₁ │┊│ a₀₂ │ a₀₃ │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583594,"byte_end":583663,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583668,"byte_end":583761,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/         │ a₁₀ │ a₁₁ │┊│ a₁₂ │ a₁₃ │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583766,"byte_end":583835,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583840,"byte_end":583933,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │┊│ a₂₂ │ a₂₃ │","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":583938,"byte_end":584007,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/         └─────┴─────┘┊└─────┴─────┘","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584012,"byte_end":584105,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/         0     1      2      3     4  indices →","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584110,"byte_end":584162,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/                                      along Axis(1)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584167,"byte_end":584221,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584226,"byte_end":584233,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584798,"byte_end":584806,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayViewMut>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one mutable view strictly\n before the split and one mutable view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one mutable view strictly","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584583,"byte_end":584657,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ before the split and one mutable view after the split.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584662,"byte_end":584720,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584725,"byte_end":584728,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584733,"byte_end":584786,"line_start":106,"line_end":106,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585902,"byte_end":585918,"line_start":132,"line_end":132,"column_start":12,"column_end":28},"name":"multi_slice_move","qualname":"<ArrayViewMut>::multi_slice_move","value":"pub fn multi_slice_move<M>(Self, M) -> M::Output where M: MultiSlice","parent":null,"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585042,"byte_end":585091,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585096,"byte_end":585099,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`.multi_slice_mut()`], but `.multi_slice_move()`","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585104,"byte_end":585176,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ consumes `self` and produces views with lifetimes matching that of","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585181,"byte_end":585251,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ `self`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585256,"byte_end":585267,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585272,"byte_end":585275,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585280,"byte_end":585333,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585338,"byte_end":585385,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585390,"byte_end":585393,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`.multi_slice_mut()`]: struct.ArrayBase.html#method.multi_slice_mut","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585398,"byte_end":585470,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585475,"byte_end":585515,"line_start":124,"line_end":124,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585520,"byte_end":585585,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585590,"byte_end":585593,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585598,"byte_end":585643,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585648,"byte_end":585651,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585656,"byte_end":585751,"line_start":129,"line_end":129,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585756,"byte_end":585811,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":585816,"byte_end":585890,"line_start":131,"line_end":131,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4502},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588716,"byte_end":588730,"line_start":66,"line_end":66,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayView<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayView<A, D>` from shape information and a raw pointer\n to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayView<A, D>` from shape information and a raw pointer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":586872,"byte_end":586947,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ to the elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":586952,"byte_end":586972,"line_start":32,"line_end":32,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":586977,"byte_end":586980,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":586985,"byte_end":586997,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587002,"byte_end":587005,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587010,"byte_end":587074,"line_start":36,"line_end":36,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587079,"byte_end":587082,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587087,"byte_end":587162,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587167,"byte_end":587178,"line_start":39,"line_end":39,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587183,"byte_end":587186,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587191,"byte_end":587262,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587267,"byte_end":587338,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587343,"byte_end":587417,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587422,"byte_end":587425,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587430,"byte_end":587451,"line_start":45,"line_end":45,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587456,"byte_end":587459,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587464,"byte_end":587539,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587544,"byte_end":587619,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587624,"byte_end":587702,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587707,"byte_end":587785,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587790,"byte_end":587856,"line_start":51,"line_end":51,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587861,"byte_end":587864,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587869,"byte_end":587944,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":587949,"byte_end":588024,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588029,"byte_end":588104,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588109,"byte_end":588178,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588183,"byte_end":588186,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588191,"byte_end":588264,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588269,"byte_end":588344,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588349,"byte_end":588427,"line_start":60,"line_end":60,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588432,"byte_end":588507,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588512,"byte_end":588515,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588520,"byte_end":588592,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588597,"byte_end":588600,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":588605,"byte_end":588697,"line_start":65,"line_end":65,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589547,"byte_end":589562,"line_start":89,"line_end":89,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayView<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589179,"byte_end":589225,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589230,"byte_end":589233,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589238,"byte_end":589250,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589255,"byte_end":589258,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589263,"byte_end":589334,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589339,"byte_end":589414,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589419,"byte_end":589488,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589493,"byte_end":589514,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589519,"byte_end":589528,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4506},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":590003,"byte_end":590011,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayView<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589786,"byte_end":589861,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589866,"byte_end":589925,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589930,"byte_end":589933,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":589938,"byte_end":589991,"line_start":100,"line_end":100,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591359,"byte_end":591363,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayView<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayView<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":590884,"byte_end":590950,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":590955,"byte_end":590958,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":590963,"byte_end":591012,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591017,"byte_end":591020,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591025,"byte_end":591101,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591106,"byte_end":591143,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591148,"byte_end":591151,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591156,"byte_end":591229,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591234,"byte_end":591307,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591312,"byte_end":591347,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594114,"byte_end":594128,"line_start":202,"line_end":202,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayViewMut<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayViewMut<A, D>` from shape information and a raw\n pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayViewMut<A, D>` from shape information and a raw","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592267,"byte_end":592337,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ pointer to the elements.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592342,"byte_end":592370,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592375,"byte_end":592378,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592383,"byte_end":592395,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592400,"byte_end":592403,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592408,"byte_end":592472,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592477,"byte_end":592480,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592485,"byte_end":592560,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592565,"byte_end":592576,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592581,"byte_end":592584,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592589,"byte_end":592660,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592665,"byte_end":592736,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592741,"byte_end":592815,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592820,"byte_end":592823,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592828,"byte_end":592849,"line_start":181,"line_end":181,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592854,"byte_end":592857,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592862,"byte_end":592937,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":592942,"byte_end":593017,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593022,"byte_end":593100,"line_start":185,"line_end":185,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593105,"byte_end":593183,"line_start":186,"line_end":186,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593188,"byte_end":593254,"line_start":187,"line_end":187,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593259,"byte_end":593262,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593267,"byte_end":593342,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593347,"byte_end":593422,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593427,"byte_end":593502,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593507,"byte_end":593576,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593581,"byte_end":593584,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593589,"byte_end":593662,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593667,"byte_end":593742,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593747,"byte_end":593825,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593830,"byte_end":593905,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593910,"byte_end":593913,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593918,"byte_end":593990,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":593995,"byte_end":593998,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594003,"byte_end":594095,"line_start":201,"line_end":201,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4517},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595150,"byte_end":595165,"line_start":231,"line_end":231,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayViewMut<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594782,"byte_end":594828,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594833,"byte_end":594836,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594841,"byte_end":594853,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594858,"byte_end":594861,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594866,"byte_end":594937,"line_start":226,"line_end":226,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":594942,"byte_end":595017,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595022,"byte_end":595091,"line_start":228,"line_end":228,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595096,"byte_end":595117,"line_start":229,"line_end":229,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595122,"byte_end":595131,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595755,"byte_end":595774,"line_start":248,"line_end":248,"column_start":19,"column_end":38},"name":"deref_into_view_mut","qualname":"<RawArrayViewMut<A, D>>::deref_into_view_mut","value":"pub unsafe fn deref_into_view_mut<'a>(Self) -> ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable view of the array.","sig":null,"attributes":[{"value":"/ Converts to a mutable view of the array.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595389,"byte_end":595433,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595438,"byte_end":595441,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595446,"byte_end":595458,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595463,"byte_end":595466,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595471,"byte_end":595542,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595547,"byte_end":595622,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595627,"byte_end":595696,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595701,"byte_end":595722,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":595727,"byte_end":595736,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4521},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596221,"byte_end":596229,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayViewMut<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596004,"byte_end":596079,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596084,"byte_end":596143,"line_start":257,"line_end":257,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596148,"byte_end":596151,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596156,"byte_end":596209,"line_start":259,"line_end":259,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":597015,"byte_end":597019,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayViewMut<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayViewMut<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596540,"byte_end":596606,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596611,"byte_end":596614,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596619,"byte_end":596668,"line_start":272,"line_end":272,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596673,"byte_end":596676,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596681,"byte_end":596757,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596762,"byte_end":596799,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596804,"byte_end":596807,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596812,"byte_end":596885,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596890,"byte_end":596963,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":596968,"byte_end":597003,"line_start":279,"line_end":279,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4530},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":597960,"byte_end":597967,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowArray>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the view (borrowed) variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the view (borrowed) variant.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":597884,"byte_end":597948,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":598090,"byte_end":598098,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowArray>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the owned variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the owned variant.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":598024,"byte_end":598078,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8381},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":55224,"byte_end":55229,"line_start":1602,"line_end":1602,"column_start":12,"column_end":17},"name":"Shape","qualname":"::Shape","value":"Shape {  }","parent":null,"children":[{"krate":0,"index":8383},{"krate":0,"index":8384}],"decl_id":null,"docs":" A contiguous array shape of n dimensions.","sig":null,"attributes":[{"value":"/ A contiguous array shape of n dimensions.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":55058,"byte_end":55103,"line_start":1598,"line_end":1598,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":55104,"byte_end":55107,"line_start":1599,"line_end":1599,"column_start":1,"column_end":4}},{"value":"/ Either c- or f- memory ordered (*c* a.k.a *row major* is the default).","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":55108,"byte_end":55182,"line_start":1600,"line_end":1600,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":8393},"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":55381,"byte_end":55392,"line_start":1609,"line_end":1609,"column_start":12,"column_end":23},"name":"StrideShape","qualname":"::StrideShape","value":"StrideShape {  }","parent":null,"children":[{"krate":0,"index":8395},{"krate":0,"index":8396},{"krate":0,"index":8397}],"decl_id":null,"docs":" An array shape of n dimensions in c-order, f-order or custom strides.\n","sig":null,"attributes":[{"value":"/ An array shape of n dimensions in c-order, f-order or custom strides.","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":55266,"byte_end":55339,"line_start":1607,"line_end":1607,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":68531,"byte_end":68544,"line_start":37,"line_end":37,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":73561,"byte_end":73570,"line_start":193,"line_end":193,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":74013,"byte_end":74022,"line_start":207,"line_end":207,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":74892,"byte_end":74901,"line_start":235,"line_end":235,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":75353,"byte_end":75362,"line_start":249,"line_end":249,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":75813,"byte_end":75822,"line_start":262,"line_end":262,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":76268,"byte_end":76277,"line_start":276,"line_end":276,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":91135,"byte_end":91144,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":91693,"byte_end":91702,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":92291,"byte_end":92300,"line_start":86,"line_end":86,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":93032,"byte_end":93041,"line_start":115,"line_end":115,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":93135,"byte_end":93144,"line_start":123,"line_end":123,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":93781,"byte_end":93790,"line_start":147,"line_end":147,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":94957,"byte_end":94966,"line_start":197,"line_end":197,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":95173,"byte_end":95185,"line_start":209,"line_end":209,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":95397,"byte_end":95406,"line_start":221,"line_end":221,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":96353,"byte_end":96362,"line_start":252,"line_end":252,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":96492,"byte_end":96501,"line_start":260,"line_end":260,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":96886,"byte_end":96895,"line_start":273,"line_end":273,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":97547,"byte_end":97556,"line_start":293,"line_end":293,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":97884,"byte_end":97896,"line_start":305,"line_end":305,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98568,"byte_end":98580,"line_start":325,"line_end":325,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99393,"byte_end":99394,"line_start":362,"line_end":362,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":100002,"byte_end":100011,"line_start":381,"line_end":381,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105488,"byte_end":105489,"line_start":142,"line_end":142,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105550,"byte_end":105561,"line_start":144,"line_end":144,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":4553}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105712,"byte_end":105723,"line_start":152,"line_end":152,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105888,"byte_end":105899,"line_start":158,"line_end":158,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106046,"byte_end":106057,"line_start":166,"line_end":166,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106322,"byte_end":106333,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106496,"byte_end":106508,"line_start":187,"line_end":187,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106692,"byte_end":106704,"line_start":196,"line_end":196,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":107849,"byte_end":107861,"line_start":237,"line_end":237,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108295,"byte_end":108307,"line_start":254,"line_end":254,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108362,"byte_end":108374,"line_start":256,"line_end":256,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108571,"byte_end":108580,"line_start":263,"line_end":263,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":4556}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108739,"byte_end":108748,"line_start":271,"line_end":271,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":109006,"byte_end":109015,"line_start":286,"line_end":286,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":109228,"byte_end":109237,"line_start":297,"line_end":297,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":109277,"byte_end":109286,"line_start":299,"line_end":299,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110170,"byte_end":110178,"line_start":329,"line_end":329,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":4557}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110322,"byte_end":110330,"line_start":337,"line_end":337,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110562,"byte_end":110570,"line_start":347,"line_end":347,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110736,"byte_end":110744,"line_start":353,"line_end":353,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110898,"byte_end":110906,"line_start":361,"line_end":361,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111176,"byte_end":111184,"line_start":376,"line_end":376,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111415,"byte_end":111423,"line_start":386,"line_end":386,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112094,"byte_end":112106,"line_start":410,"line_end":410,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112147,"byte_end":112155,"line_start":411,"line_end":411,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112196,"byte_end":112205,"line_start":413,"line_end":413,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112411,"byte_end":112423,"line_start":422,"line_end":422,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112632,"byte_end":112639,"line_start":432,"line_end":432,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112918,"byte_end":112925,"line_start":443,"line_end":443,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":113583,"byte_end":113590,"line_start":471,"line_end":471,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":114898,"byte_end":114905,"line_start":511,"line_end":511,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115398,"byte_end":115405,"line_start":530,"line_end":530,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115858,"byte_end":115867,"line_start":543,"line_end":543,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115939,"byte_end":115951,"line_start":547,"line_end":547,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116026,"byte_end":116037,"line_start":551,"line_end":551,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116125,"byte_end":116136,"line_start":555,"line_end":555,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116232,"byte_end":116240,"line_start":559,"line_end":559,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116331,"byte_end":116339,"line_start":563,"line_end":563,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":116817,"byte_end":116826,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":117859,"byte_end":117868,"line_start":64,"line_end":64,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":118363,"byte_end":118372,"line_start":85,"line_end":85,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":119229,"byte_end":119238,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":119284,"byte_end":119293,"line_start":107,"line_end":107,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126414,"byte_end":126420,"line_start":217,"line_end":217,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":127540,"byte_end":127546,"line_start":247,"line_end":247,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130320,"byte_end":130330,"line_start":19,"line_end":19,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131264,"byte_end":131273,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131399,"byte_end":131409,"line_start":65,"line_end":65,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131527,"byte_end":131537,"line_start":72,"line_end":72,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131564,"byte_end":131574,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":132200,"byte_end":132210,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/geomspace.rs","byte_start":134151,"byte_end":134160,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/geomspace.rs","byte_start":134756,"byte_end":134765,"line_start":47,"line_end":47,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/geomspace.rs","byte_start":135207,"byte_end":135216,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139917,"byte_end":139928,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":141557,"byte_end":141568,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":141620,"byte_end":141627,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":142267,"byte_end":142275,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":143200,"byte_end":143207,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":4724},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":145244,"byte_end":145256,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":146059,"byte_end":146071,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":193774,"byte_end":193785,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":194649,"byte_end":194660,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":196017,"byte_end":196031,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":196901,"byte_end":196915,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":199745,"byte_end":199750,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":200794,"byte_end":200799,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":201403,"byte_end":201411,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":202088,"byte_end":202096,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":202845,"byte_end":202852,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":204355,"byte_end":204362,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":148820,"byte_end":148828,"line_start":41,"line_end":41,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":149275,"byte_end":149283,"line_start":56,"line_end":56,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":150752,"byte_end":150760,"line_start":103,"line_end":103,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":151252,"byte_end":151260,"line_start":121,"line_end":121,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":153107,"byte_end":153119,"line_start":198,"line_end":198,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":153332,"byte_end":153344,"line_start":207,"line_end":207,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":153812,"byte_end":153824,"line_start":226,"line_end":226,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":154194,"byte_end":154206,"line_start":240,"line_end":240,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":154896,"byte_end":154900,"line_start":276,"line_end":276,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155253,"byte_end":155260,"line_start":291,"line_end":291,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156602,"byte_end":156617,"line_start":343,"line_end":343,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157288,"byte_end":157299,"line_start":362,"line_end":362,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157442,"byte_end":157456,"line_start":371,"line_end":371,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157629,"byte_end":157633,"line_start":380,"line_end":380,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":159409,"byte_end":159413,"line_start":453,"line_end":453,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":159887,"byte_end":159891,"line_start":471,"line_end":471,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":160057,"byte_end":160068,"line_start":480,"line_end":480,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":160570,"byte_end":160581,"line_start":499,"line_end":499,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":160722,"byte_end":160729,"line_start":508,"line_end":508,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":162513,"byte_end":162520,"line_start":581,"line_end":581,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":163002,"byte_end":163009,"line_start":599,"line_end":599,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":163175,"byte_end":163190,"line_start":608,"line_end":608,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":163674,"byte_end":163689,"line_start":627,"line_end":627,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164071,"byte_end":164086,"line_start":641,"line_end":641,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164225,"byte_end":164239,"line_start":650,"line_end":650,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164745,"byte_end":164759,"line_start":669,"line_end":669,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":165396,"byte_end":165405,"line_start":701,"line_end":701,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":165802,"byte_end":165811,"line_start":717,"line_end":717,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166450,"byte_end":166462,"line_start":741,"line_end":741,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166865,"byte_end":166877,"line_start":757,"line_end":757,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":167760,"byte_end":167772,"line_start":798,"line_end":798,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":170071,"byte_end":170083,"line_start":870,"line_end":870,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":170535,"byte_end":170547,"line_start":892,"line_end":892,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":170863,"byte_end":170875,"line_start":907,"line_end":907,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171836,"byte_end":171844,"line_start":946,"line_end":946,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172827,"byte_end":172835,"line_start":980,"line_end":980,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173158,"byte_end":173166,"line_start":995,"line_end":995,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173370,"byte_end":173378,"line_start":1004,"line_end":1004,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174225,"byte_end":174236,"line_start":1032,"line_end":1032,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175231,"byte_end":175242,"line_start":1066,"line_end":1066,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175568,"byte_end":175579,"line_start":1081,"line_end":1081,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175783,"byte_end":175794,"line_start":1090,"line_end":1090,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175934,"byte_end":175942,"line_start":1099,"line_end":1099,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":4943}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":177568,"byte_end":177579,"line_start":1156,"line_end":1156,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":4944}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":181740,"byte_end":181754,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185652,"byte_end":185669,"line_start":1410,"line_end":1410,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187012,"byte_end":187021,"line_start":1451,"line_end":1451,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187063,"byte_end":187071,"line_start":1452,"line_end":1452,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187113,"byte_end":187121,"line_start":1453,"line_end":1453,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187170,"byte_end":187174,"line_start":1454,"line_end":1454,"column_start":43,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187230,"byte_end":187237,"line_start":1455,"line_end":1455,"column_start":43,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187297,"byte_end":187303,"line_start":1456,"line_end":1456,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187384,"byte_end":187387,"line_start":1457,"line_end":1457,"column_start":50,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187468,"byte_end":187472,"line_start":1458,"line_end":1458,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187529,"byte_end":187536,"line_start":1459,"line_end":1459,"column_start":47,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187591,"byte_end":187596,"line_start":1460,"line_end":1460,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187721,"byte_end":187732,"line_start":1462,"line_end":1462,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187793,"byte_end":187805,"line_start":1463,"line_end":1463,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/layout/layoutfmt.rs","byte_start":209766,"byte_end":209772,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/layout/mod.rs","byte_start":205645,"byte_end":205651,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211185,"byte_end":211186,"line_start":30,"line_end":30,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linspace.rs","byte_start":212617,"byte_end":212625,"line_start":20,"line_end":20,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linspace.rs","byte_start":213166,"byte_end":213174,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linspace.rs","byte_start":213561,"byte_end":213569,"line_start":62,"line_end":62,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/logspace.rs","byte_start":215685,"byte_end":215693,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/logspace.rs","byte_start":216299,"byte_end":216307,"line_start":48,"line_end":48,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/logspace.rs","byte_start":216759,"byte_end":216767,"line_start":66,"line_end":66,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/partial.rs","byte_start":223904,"byte_end":223911,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/partial.rs","byte_start":225742,"byte_end":225749,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/partial.rs","byte_start":225789,"byte_end":225796,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226619,"byte_end":226624,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226833,"byte_end":226844,"line_start":30,"line_end":30,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":227603,"byte_end":227604,"line_start":67,"line_end":67,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":228132,"byte_end":228137,"line_start":90,"line_end":90,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":228586,"byte_end":228591,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230415,"byte_end":230420,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232928,"byte_end":232940,"line_start":110,"line_end":110,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233982,"byte_end":233994,"line_start":144,"line_end":144,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":236781,"byte_end":236786,"line_start":232,"line_end":232,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":236966,"byte_end":236978,"line_start":243,"line_end":243,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237175,"byte_end":237187,"line_start":254,"line_end":254,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238194,"byte_end":238203,"line_start":293,"line_end":293,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238338,"byte_end":238347,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238707,"byte_end":238716,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239297,"byte_end":239306,"line_start":338,"line_end":338,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239982,"byte_end":239991,"line_start":361,"line_end":361,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":240186,"byte_end":240195,"line_start":371,"line_end":371,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":240730,"byte_end":240739,"line_start":388,"line_end":388,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":240809,"byte_end":240818,"line_start":395,"line_end":395,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/split_at.rs","byte_start":252558,"byte_end":252559,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/split_at.rs","byte_start":252869,"byte_end":252881,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/split_at.rs","byte_start":253051,"byte_end":253066,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":261911,"byte_end":261920,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":262678,"byte_end":262687,"line_start":81,"line_end":81,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263579,"byte_end":263580,"line_start":109,"line_end":109,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":268915,"byte_end":268924,"line_start":290,"line_end":290,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":5308},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":270019,"byte_end":270031,"line_start":343,"line_end":343,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":5309},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":271130,"byte_end":271142,"line_start":396,"line_end":396,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":5310},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":272231,"byte_end":272246,"line_start":449,"line_end":449,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":5311},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276286,"byte_end":276289,"line_start":589,"line_end":589,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276960,"byte_end":276963,"line_start":613,"line_end":613,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277568,"byte_end":277571,"line_start":634,"line_end":634,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":279021,"byte_end":279024,"line_start":690,"line_end":690,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2455},{"krate":0,"index":2458},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298212,"byte_end":298221,"line_start":1221,"line_end":1221,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340350,"byte_end":340365,"line_start":52,"line_end":52,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340722,"byte_end":340726,"line_start":72,"line_end":72,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":341595,"byte_end":341599,"line_start":107,"line_end":107,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343207,"byte_end":343211,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":344949,"byte_end":344951,"line_start":46,"line_end":46,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":345086,"byte_end":345087,"line_start":54,"line_end":54,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":345237,"byte_end":345246,"line_start":65,"line_end":65,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":345391,"byte_end":345394,"line_start":73,"line_end":73,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348811,"byte_end":348814,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":349312,"byte_end":349315,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":349440,"byte_end":349443,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":364551,"byte_end":364554,"line_start":394,"line_end":394,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":6124},{"krate":0,"index":2878},{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":365491,"byte_end":365494,"line_start":438,"line_end":438,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":6127},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":368040,"byte_end":368043,"line_start":554,"line_end":554,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":6130},{"krate":0,"index":2932},{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":371743,"byte_end":371746,"line_start":711,"line_end":711,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":6133},{"krate":0,"index":2952},{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":376812,"byte_end":376817,"line_start":885,"line_end":885,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":6189}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":377878,"byte_end":377881,"line_start":934,"line_end":934,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2970},{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":378063,"byte_end":378066,"line_start":941,"line_end":941,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":378447,"byte_end":378456,"line_start":14,"line_end":14,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3000}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":378802,"byte_end":378811,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379211,"byte_end":379220,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379337,"byte_end":379346,"line_start":48,"line_end":48,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379648,"byte_end":379657,"line_start":60,"line_end":60,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379899,"byte_end":379908,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380104,"byte_end":380113,"line_start":81,"line_end":81,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3022}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380321,"byte_end":380330,"line_start":90,"line_end":90,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380371,"byte_end":380380,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380816,"byte_end":380825,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":381241,"byte_end":381250,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":382575,"byte_end":382584,"line_start":159,"line_end":159,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":382713,"byte_end":382722,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":382852,"byte_end":382861,"line_start":173,"line_end":173,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3048},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383041,"byte_end":383050,"line_start":183,"line_end":183,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383194,"byte_end":383203,"line_start":192,"line_end":192,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383318,"byte_end":383327,"line_start":200,"line_end":200,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383650,"byte_end":383653,"line_start":216,"line_end":216,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383829,"byte_end":383834,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384841,"byte_end":384842,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":387028,"byte_end":387030,"line_start":100,"line_end":100,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":387347,"byte_end":387349,"line_start":111,"line_end":111,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3152},{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391901,"byte_end":391904,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":392071,"byte_end":392074,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/mod.rs","byte_start":313833,"byte_end":313834,"line_start":292,"line_end":292,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3228},{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50209,"byte_end":50221,"line_start":1401,"line_end":1401,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50683,"byte_end":50694,"line_start":1418,"line_end":1418,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51149,"byte_end":51157,"line_start":1436,"line_end":1436,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3530}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51540,"byte_end":51547,"line_start":1454,"line_end":1454,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3543},{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_clone.rs","byte_start":394998,"byte_end":395007,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_clone.rs","byte_start":395812,"byte_end":395821,"line_start":37,"line_end":37,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":396871,"byte_end":396880,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401091,"byte_end":401100,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403757,"byte_end":403766,"line_start":244,"line_end":244,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3635},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3651},{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412977,"byte_end":412986,"line_start":504,"line_end":504,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":416791,"byte_end":416800,"line_start":35,"line_end":35,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3805},{"krate":0,"index":3807},{"krate":0,"index":3810},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":3825},{"krate":0,"index":3828},{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3835},{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3859},{"krate":0,"index":3861},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3885},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3911},{"krate":0,"index":3913},{"krate":0,"index":3918},{"krate":0,"index":3925},{"krate":0,"index":3929},{"krate":0,"index":3934},{"krate":0,"index":3941},{"krate":0,"index":3945},{"krate":0,"index":3949},{"krate":0,"index":3953},{"krate":0,"index":3955},{"krate":0,"index":3957},{"krate":0,"index":3960},{"krate":0,"index":3964},{"krate":0,"index":3968},{"krate":0,"index":3974},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494085,"byte_end":494090,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495496,"byte_end":495501,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496541,"byte_end":496550,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":52131,"byte_end":52140,"line_start":1481,"line_end":1481,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_1d.rs","byte_start":498618,"byte_end":498627,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4037}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499459,"byte_end":499468,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503270,"byte_end":503279,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4057},{"krate":0,"index":4058}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505392,"byte_end":505401,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517138,"byte_end":517147,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4146},{"krate":0,"index":4148},{"krate":0,"index":4150}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521505,"byte_end":521514,"line_start":169,"line_end":169,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4160},{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522138,"byte_end":522147,"line_start":190,"line_end":190,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4167}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522701,"byte_end":522710,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523976,"byte_end":523985,"line_start":253,"line_end":253,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":4178}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":525878,"byte_end":525887,"line_start":313,"line_end":313,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4186}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526452,"byte_end":526461,"line_start":335,"line_end":335,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4191}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543862,"byte_end":543869,"line_start":48,"line_end":48,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543901,"byte_end":543908,"line_start":49,"line_end":49,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":551955,"byte_end":551964,"line_start":293,"line_end":293,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4256},{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":552776,"byte_end":552785,"line_start":323,"line_end":323,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557082,"byte_end":557091,"line_start":18,"line_end":18,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4316}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560869,"byte_end":560881,"line_start":113,"line_end":113,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4322},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564998,"byte_end":565007,"line_start":218,"line_end":218,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":565876,"byte_end":565888,"line_start":246,"line_end":246,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4339},{"krate":0,"index":4340}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567381,"byte_end":567390,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":568901,"byte_end":568910,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569778,"byte_end":569790,"line_start":95,"line_end":95,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570463,"byte_end":570475,"line_start":117,"line_end":117,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4396}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570774,"byte_end":570783,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":571497,"byte_end":571509,"line_start":158,"line_end":158,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":578025,"byte_end":578037,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580434,"byte_end":580443,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4460}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584530,"byte_end":584542,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4465},{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":586267,"byte_end":586279,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4504},{"krate":0,"index":4506},{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591665,"byte_end":591680,"line_start":145,"line_end":145,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":597835,"byte_end":597843,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":598199,"byte_end":598207,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4536}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":598516,"byte_end":598524,"line_start":45,"line_end":45,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":148146,"byte_end":148150,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1090}},{"kind":"Mod","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":7532,"byte_end":7539,"line_start":209,"line_end":209,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3308}},{"kind":"Mod","span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":54862,"byte_end":54868,"line_start":1584,"line_end":1584,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4118}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":68531,"byte_end":68544,"line_start":37,"line_end":37,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":73561,"byte_end":73570,"line_start":193,"line_end":193,"column_start":61,"column_end":70},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":74013,"byte_end":74022,"line_start":207,"line_end":207,"column_start":57,"column_end":66},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":74892,"byte_end":74901,"line_start":235,"line_end":235,"column_start":63,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":8981}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":75353,"byte_end":75362,"line_start":249,"line_end":249,"column_start":63,"column_end":72},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":8983}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":75813,"byte_end":75822,"line_start":262,"line_end":262,"column_start":63,"column_end":72},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":8975}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arrayformat.rs","byte_start":76268,"byte_end":76277,"line_start":276,"line_end":276,"column_start":59,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":8973}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":91135,"byte_end":91144,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":91693,"byte_end":91702,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":92291,"byte_end":92300,"line_start":86,"line_end":86,"column_start":54,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":93032,"byte_end":93041,"line_start":115,"line_end":115,"column_start":19,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2536}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":93135,"byte_end":93144,"line_start":123,"line_end":123,"column_start":29,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":93781,"byte_end":93790,"line_start":147,"line_end":147,"column_start":32,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":94957,"byte_end":94966,"line_start":197,"line_end":197,"column_start":33,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3505},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":95173,"byte_end":95185,"line_start":209,"line_end":209,"column_start":33,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3509},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":95397,"byte_end":95406,"line_start":221,"line_end":221,"column_start":31,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":9168}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":96353,"byte_end":96362,"line_start":252,"line_end":252,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":96492,"byte_end":96501,"line_start":260,"line_end":260,"column_start":28,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":96886,"byte_end":96895,"line_start":273,"line_end":273,"column_start":48,"column_end":57},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3505},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":97547,"byte_end":97556,"line_start":293,"line_end":293,"column_start":49,"column_end":58},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3505},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":97884,"byte_end":97896,"line_start":305,"line_end":305,"column_start":52,"column_end":64},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3509},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":98568,"byte_end":98580,"line_start":325,"line_end":325,"column_start":53,"column_end":65},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3509},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99295,"byte_end":99299,"line_start":357,"line_end":357,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2783},"to":{"krate":0,"index":472}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":99393,"byte_end":99394,"line_start":362,"line_end":362,"column_start":45,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":480},"to":{"krate":0,"index":472}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/arraytraits.rs","byte_start":100002,"byte_end":100011,"line_start":381,"line_end":381,"column_start":27,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102213,"byte_end":102218,"line_start":29,"line_end":29,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":102562,"byte_end":102569,"line_start":45,"line_end":45,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":550},"to":{"krate":0,"index":553}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103342,"byte_end":103349,"line_start":69,"line_end":69,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":550},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":103963,"byte_end":103970,"line_start":91,"line_end":91,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":550},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104685,"byte_end":104689,"line_start":112,"line_end":112,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":104692,"byte_end":104702,"line_start":112,"line_end":112,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":553},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105421,"byte_end":105425,"line_start":139,"line_end":139,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":567}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105428,"byte_end":105440,"line_start":139,"line_end":139,"column_start":29,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":557},"to":{"krate":0,"index":567}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105488,"byte_end":105489,"line_start":142,"line_end":142,"column_start":23,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":569},"to":{"krate":0,"index":567}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105550,"byte_end":105561,"line_start":144,"line_end":144,"column_start":28,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6331},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105712,"byte_end":105723,"line_start":152,"line_end":152,"column_start":33,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":6331},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":105888,"byte_end":105899,"line_start":158,"line_end":158,"column_start":28,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6331},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106046,"byte_end":106057,"line_start":166,"line_end":166,"column_start":31,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6331},"to":{"krate":0,"index":553}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106322,"byte_end":106333,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6331},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106496,"byte_end":106508,"line_start":187,"line_end":187,"column_start":28,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":106692,"byte_end":106704,"line_start":196,"line_end":196,"column_start":31,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":553}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":107849,"byte_end":107861,"line_start":237,"line_end":237,"column_start":25,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108295,"byte_end":108307,"line_start":254,"line_end":254,"column_start":28,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108362,"byte_end":108374,"line_start":256,"line_end":256,"column_start":33,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108571,"byte_end":108580,"line_start":263,"line_end":263,"column_start":28,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":108739,"byte_end":108748,"line_start":271,"line_end":271,"column_start":31,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":553}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":109006,"byte_end":109015,"line_start":286,"line_end":286,"column_start":25,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":109228,"byte_end":109237,"line_start":297,"line_end":297,"column_start":28,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":109277,"byte_end":109286,"line_start":299,"line_end":299,"column_start":33,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110170,"byte_end":110178,"line_start":329,"line_end":329,"column_start":32,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110322,"byte_end":110330,"line_start":337,"line_end":337,"column_start":29,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110562,"byte_end":110570,"line_start":347,"line_end":347,"column_start":37,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110736,"byte_end":110744,"line_start":353,"line_end":353,"column_start":32,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":110898,"byte_end":110906,"line_start":361,"line_end":361,"column_start":35,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":553}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111176,"byte_end":111184,"line_start":376,"line_end":376,"column_start":29,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111415,"byte_end":111423,"line_start":386,"line_end":386,"column_start":32,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":111612,"byte_end":111616,"line_start":393,"line_end":393,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112032,"byte_end":112037,"line_start":408,"line_end":408,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2501},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112040,"byte_end":112044,"line_start":408,"line_end":408,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112047,"byte_end":112059,"line_start":408,"line_end":408,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":557},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112094,"byte_end":112106,"line_start":410,"line_end":410,"column_start":31,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112147,"byte_end":112155,"line_start":411,"line_end":411,"column_start":35,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112196,"byte_end":112205,"line_start":413,"line_end":413,"column_start":30,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112411,"byte_end":112423,"line_start":422,"line_end":422,"column_start":30,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112632,"byte_end":112639,"line_start":432,"line_end":432,"column_start":32,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3531},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":112918,"byte_end":112925,"line_start":443,"line_end":443,"column_start":35,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3531},"to":{"krate":0,"index":553}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":113583,"byte_end":113590,"line_start":471,"line_end":471,"column_start":37,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3531},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":114898,"byte_end":114905,"line_start":511,"line_end":511,"column_start":29,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3531},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115398,"byte_end":115405,"line_start":530,"line_end":530,"column_start":32,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3531},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115696,"byte_end":115703,"line_start":538,"line_end":538,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":550},"to":{"krate":0,"index":700}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115858,"byte_end":115867,"line_start":543,"line_end":543,"column_start":32,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":700}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":115939,"byte_end":115951,"line_start":547,"line_end":547,"column_start":32,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6324},"to":{"krate":0,"index":700}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116026,"byte_end":116037,"line_start":551,"line_end":551,"column_start":32,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6331},"to":{"krate":0,"index":700}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116125,"byte_end":116136,"line_start":555,"line_end":555,"column_start":32,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6331},"to":{"krate":0,"index":700}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116232,"byte_end":116240,"line_start":559,"line_end":559,"column_start":44,"column_end":52},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":700}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_traits.rs","byte_start":116331,"byte_end":116339,"line_start":563,"line_end":563,"column_start":44,"column_end":52},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6339},"to":{"krate":0,"index":700}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":116817,"byte_end":116826,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":117859,"byte_end":117868,"line_start":64,"line_end":64,"column_start":19,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4560},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":118363,"byte_end":118372,"line_start":85,"line_end":85,"column_start":18,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4560},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":119229,"byte_end":119238,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4560},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/data_repr.rs","byte_start":119284,"byte_end":119293,"line_start":107,"line_end":107,"column_start":25,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4560},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":126414,"byte_end":126420,"line_start":217,"line_end":217,"column_start":29,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/free_functions.rs","byte_start":127540,"byte_end":127546,"line_start":247,"line_end":247,"column_start":32,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":130320,"byte_end":130330,"line_start":19,"line_end":19,"column_start":6,"column_end":16},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131264,"byte_end":131273,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4674},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131399,"byte_end":131409,"line_start":65,"line_end":65,"column_start":20,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131527,"byte_end":131537,"line_start":72,"line_end":72,"column_start":16,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4670},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":131564,"byte_end":131574,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/error.rs","byte_start":132200,"byte_end":132210,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/geomspace.rs","byte_start":134151,"byte_end":134160,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/geomspace.rs","byte_start":134756,"byte_end":134765,"line_start":47,"line_end":47,"column_start":33,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/geomspace.rs","byte_start":135207,"byte_end":135216,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":139917,"byte_end":139928,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4693},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":141557,"byte_end":141568,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4693},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":141620,"byte_end":141627,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4700},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":142267,"byte_end":142275,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4712},"to":{"krate":0,"index":2291}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":143200,"byte_end":143207,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4700},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":145244,"byte_end":145256,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4725},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/indexes.rs","byte_start":146059,"byte_end":146071,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4725},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":193774,"byte_end":193785,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":194649,"byte_end":194660,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1036},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":196017,"byte_end":196031,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/chunks.rs","byte_start":196901,"byte_end":196915,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":199745,"byte_end":199750,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":200794,"byte_end":200799,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1171},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":201403,"byte_end":201411,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/lanes.rs","byte_start":202088,"byte_end":202096,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":202845,"byte_end":202852,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/windows.rs","byte_start":204355,"byte_end":204362,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":148820,"byte_end":148828,"line_start":41,"line_end":41,"column_start":23,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":149275,"byte_end":149283,"line_start":56,"line_end":56,"column_start":36,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":150752,"byte_end":150760,"line_start":103,"line_end":103,"column_start":49,"column_end":57},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":151252,"byte_end":151260,"line_start":121,"line_end":121,"column_start":33,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":153107,"byte_end":153119,"line_start":198,"line_end":198,"column_start":27,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":153332,"byte_end":153344,"line_start":207,"line_end":207,"column_start":40,"column_end":52},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":153812,"byte_end":153824,"line_start":226,"line_end":226,"column_start":37,"column_end":49},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":154194,"byte_end":154206,"line_start":240,"line_end":240,"column_start":38,"column_end":50},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":154896,"byte_end":154900,"line_start":276,"line_end":276,"column_start":16,"column_end":20},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":155253,"byte_end":155260,"line_start":291,"line_end":291,"column_start":16,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":156602,"byte_end":156617,"line_start":343,"line_end":343,"column_start":27,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157288,"byte_end":157299,"line_start":362,"line_end":362,"column_start":16,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157442,"byte_end":157456,"line_start":371,"line_end":371,"column_start":16,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":157629,"byte_end":157633,"line_start":380,"line_end":380,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":159409,"byte_end":159413,"line_start":453,"line_end":453,"column_start":37,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":159887,"byte_end":159891,"line_start":471,"line_end":471,"column_start":38,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":160057,"byte_end":160068,"line_start":480,"line_end":480,"column_start":40,"column_end":51},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4894},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":160570,"byte_end":160581,"line_start":499,"line_end":499,"column_start":38,"column_end":49},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4894},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":160722,"byte_end":160729,"line_start":508,"line_end":508,"column_start":40,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":162513,"byte_end":162520,"line_start":581,"line_end":581,"column_start":37,"column_end":44},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":163002,"byte_end":163009,"line_start":599,"line_end":599,"column_start":38,"column_end":45},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":163175,"byte_end":163190,"line_start":608,"line_end":608,"column_start":40,"column_end":55},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":163674,"byte_end":163689,"line_start":627,"line_end":627,"column_start":37,"column_end":52},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164071,"byte_end":164086,"line_start":641,"line_end":641,"column_start":38,"column_end":53},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164225,"byte_end":164239,"line_start":650,"line_end":650,"column_start":40,"column_end":54},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":164745,"byte_end":164759,"line_start":669,"line_end":669,"column_start":38,"column_end":52},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":165396,"byte_end":165405,"line_start":701,"line_end":701,"column_start":29,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1576},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":165802,"byte_end":165811,"line_start":717,"line_end":717,"column_start":38,"column_end":47},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1576},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166450,"byte_end":166462,"line_start":741,"line_end":741,"column_start":29,"column_end":41},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":166865,"byte_end":166877,"line_start":757,"line_end":757,"column_start":38,"column_end":50},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":167760,"byte_end":167772,"line_start":798,"line_end":798,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":170071,"byte_end":170083,"line_start":870,"line_end":870,"column_start":25,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":170535,"byte_end":170547,"line_start":892,"line_end":892,"column_start":36,"column_end":48},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":170863,"byte_end":170875,"line_start":907,"line_end":907,"column_start":34,"column_end":46},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":171836,"byte_end":171844,"line_start":946,"line_end":946,"column_start":27,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":172827,"byte_end":172835,"line_start":980,"line_end":980,"column_start":29,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4927},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173158,"byte_end":173166,"line_start":995,"line_end":995,"column_start":40,"column_end":48},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4927},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":173370,"byte_end":173378,"line_start":1004,"line_end":1004,"column_start":38,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4927},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":174225,"byte_end":174236,"line_start":1032,"line_end":1032,"column_start":27,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175231,"byte_end":175242,"line_start":1066,"line_end":1066,"column_start":29,"column_end":40},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175568,"byte_end":175579,"line_start":1081,"line_end":1081,"column_start":40,"column_end":51},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175783,"byte_end":175794,"line_start":1090,"line_end":1090,"column_start":38,"column_end":49},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":175934,"byte_end":175942,"line_start":1099,"line_end":1099,"column_start":42,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4927},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":177568,"byte_end":177579,"line_start":1156,"line_end":1156,"column_start":42,"column_end":53},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1670},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":181740,"byte_end":181754,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":185652,"byte_end":185669,"line_start":1410,"line_end":1410,"column_start":27,"column_end":44},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187012,"byte_end":187021,"line_start":1451,"line_end":1451,"column_start":36,"column_end":45},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":906},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187063,"byte_end":187071,"line_start":1452,"line_end":1452,"column_start":36,"column_end":44},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1903},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187113,"byte_end":187121,"line_start":1453,"line_end":1453,"column_start":36,"column_end":44},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1927},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187170,"byte_end":187174,"line_start":1454,"line_end":1454,"column_start":43,"column_end":47},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1405},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187230,"byte_end":187237,"line_start":1455,"line_end":1455,"column_start":43,"column_end":50},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1416},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187297,"byte_end":187303,"line_start":1456,"line_end":1456,"column_start":47,"column_end":53},"kind":{"Impl":{"id":159}},"from":{"krate":2,"index":39385},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187384,"byte_end":187387,"line_start":1457,"line_end":1457,"column_start":50,"column_end":53},"kind":{"Impl":{"id":160}},"from":{"krate":2,"index":39484},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187468,"byte_end":187472,"line_start":1458,"line_end":1458,"column_start":47,"column_end":51},"kind":{"Impl":{"id":161}},"from":{"krate":2,"index":9714},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187529,"byte_end":187536,"line_start":1459,"line_end":1459,"column_start":47,"column_end":54},"kind":{"Impl":{"id":162}},"from":{"krate":2,"index":9738},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187591,"byte_end":187596,"line_start":1460,"line_end":1460,"column_start":45,"column_end":50},"kind":{"Impl":{"id":163}},"from":{"krate":2,"index":38826},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187721,"byte_end":187732,"line_start":1462,"line_end":1462,"column_start":36,"column_end":47},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4693},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/iterators/mod.rs","byte_start":187793,"byte_end":187805,"line_start":1463,"line_end":1463,"column_start":36,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4725},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/layout/layoutfmt.rs","byte_start":209766,"byte_end":209772,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5094},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/layout/mod.rs","byte_start":205645,"byte_end":205651,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211029,"byte_end":211033,"line_start":20,"line_end":20,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2890},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211040,"byte_end":211044,"line_start":21,"line_end":21,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":20,"index":497},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211051,"byte_end":211054,"line_start":22,"line_end":22,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":20,"index":507},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211061,"byte_end":211064,"line_start":23,"line_end":23,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2947},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211086,"byte_end":211089,"line_start":24,"line_end":24,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2952},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211111,"byte_end":211114,"line_start":25,"line_end":25,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2957},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211136,"byte_end":211139,"line_start":26,"line_end":26,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2962},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211185,"byte_end":211186,"line_start":30,"line_end":30,"column_start":26,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1895},"to":{"krate":0,"index":1893}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211757,"byte_end":211762,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":20,"index":424},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211769,"byte_end":211778,"line_start":52,"line_end":52,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2978},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211785,"byte_end":211794,"line_start":53,"line_end":53,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2982},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211801,"byte_end":211810,"line_start":54,"line_end":54,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2986},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211817,"byte_end":211826,"line_start":55,"line_end":55,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2990},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211833,"byte_end":211842,"line_start":56,"line_end":56,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211854,"byte_end":211861,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":8969},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211873,"byte_end":211878,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":8962},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211890,"byte_end":211898,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":8981},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211910,"byte_end":211918,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":8983},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211925,"byte_end":211938,"line_start":61,"line_end":61,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":4223},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211945,"byte_end":211957,"line_start":62,"line_end":62,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":1893},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211964,"byte_end":211968,"line_start":63,"line_end":63,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2880},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg_traits.rs","byte_start":211975,"byte_end":211979,"line_start":64,"line_end":64,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":1896}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linspace.rs","byte_start":212617,"byte_end":212625,"line_start":20,"line_end":20,"column_start":22,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1903},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linspace.rs","byte_start":213166,"byte_end":213174,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1903},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linspace.rs","byte_start":213561,"byte_end":213569,"line_start":62,"line_end":62,"column_start":31,"column_end":39},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1903},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/logspace.rs","byte_start":215685,"byte_end":215693,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1927},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/logspace.rs","byte_start":216299,"byte_end":216307,"line_start":48,"line_end":48,"column_start":33,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1927},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/logspace.rs","byte_start":216759,"byte_end":216767,"line_start":66,"line_end":66,"column_start":31,"column_end":39},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1927},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/partial.rs","byte_start":223904,"byte_end":223911,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/partial.rs","byte_start":225742,"byte_end":225749,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1967},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/partial.rs","byte_start":225789,"byte_end":225796,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1967},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226619,"byte_end":226624,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8381},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":226833,"byte_end":226844,"line_start":30,"line_end":30,"column_start":24,"column_end":35},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8393},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":227603,"byte_end":227604,"line_start":67,"line_end":67,"column_start":26,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2009},"to":{"krate":0,"index":1994}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":228132,"byte_end":228137,"line_start":90,"line_end":90,"column_start":26,"column_end":31},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":8381},"to":{"krate":0,"index":1994}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/shape_builder.rs","byte_start":228586,"byte_end":228591,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":8381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":230415,"byte_end":230420,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":232928,"byte_end":232940,"line_start":110,"line_end":110,"column_start":6,"column_end":18},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":233982,"byte_end":233994,"line_start":144,"line_end":144,"column_start":23,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5119},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":236781,"byte_end":236786,"line_start":232,"line_end":232,"column_start":26,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5100},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":236966,"byte_end":236978,"line_start":243,"line_end":243,"column_start":26,"column_end":38},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5119},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":237175,"byte_end":237187,"line_start":254,"line_end":254,"column_start":22,"column_end":34},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5119},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238194,"byte_end":238203,"line_start":293,"line_end":293,"column_start":30,"column_end":39},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238338,"byte_end":238347,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":238707,"byte_end":238716,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239297,"byte_end":239306,"line_start":338,"line_end":338,"column_start":20,"column_end":29},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":239982,"byte_end":239991,"line_start":361,"line_end":361,"column_start":38,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":240186,"byte_end":240195,"line_start":371,"line_end":371,"column_start":52,"column_end":61},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":240730,"byte_end":240739,"line_start":388,"line_end":388,"column_start":21,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/slice.rs","byte_start":240809,"byte_end":240818,"line_start":395,"line_end":395,"column_start":22,"column_end":31},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/split_at.rs","byte_start":252294,"byte_end":252301,"line_start":9,"line_end":9,"column_start":36,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":2161},"to":{"krate":0,"index":2163}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/split_at.rs","byte_start":252558,"byte_end":252559,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2168},"to":{"krate":0,"index":2161}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/split_at.rs","byte_start":252869,"byte_end":252881,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3509},"to":{"krate":0,"index":2161}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/split_at.rs","byte_start":253051,"byte_end":253066,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3516},"to":{"krate":0,"index":2161}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":261911,"byte_end":261920,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":262678,"byte_end":262687,"line_start":81,"line_end":81,"column_start":36,"column_end":45},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3505},"to":{"krate":0,"index":2251}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":263579,"byte_end":263580,"line_start":109,"line_end":109,"column_start":28,"column_end":29},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2272},"to":{"krate":0,"index":2266}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":265972,"byte_end":265976,"line_start":185,"line_end":185,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2890},"to":{"krate":0,"index":2291}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":266523,"byte_end":266528,"line_start":207,"line_end":207,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":2302}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":268915,"byte_end":268924,"line_start":290,"line_end":290,"column_start":42,"column_end":51},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3505},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":270019,"byte_end":270031,"line_start":343,"line_end":343,"column_start":42,"column_end":54},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3509},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":271130,"byte_end":271142,"line_start":396,"line_end":396,"column_start":38,"column_end":50},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":272231,"byte_end":272246,"line_start":449,"line_end":449,"column_start":38,"column_end":53},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3516},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276286,"byte_end":276289,"line_start":589,"line_end":589,"column_start":12,"column_end":15},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":276960,"byte_end":276963,"line_start":613,"line_end":613,"column_start":12,"column_end":15},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":277568,"byte_end":277571,"line_start":634,"line_end":634,"column_start":16,"column_end":19},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":279021,"byte_end":279024,"line_start":690,"line_end":690,"column_start":12,"column_end":15},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/zip/mod.rs","byte_start":298212,"byte_end":298221,"line_start":1221,"line_end":1221,"column_start":9,"column_end":18},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340350,"byte_end":340365,"line_start":52,"line_end":52,"column_start":6,"column_end":21},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":340722,"byte_end":340726,"line_start":72,"line_end":72,"column_start":26,"column_end":30},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5817},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":341595,"byte_end":341599,"line_start":107,"line_end":107,"column_start":37,"column_end":41},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5817},"to":{"krate":2,"index":7247}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axes.rs","byte_start":341970,"byte_end":341974,"line_start":125,"line_end":125,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2890},"to":{"krate":0,"index":2583}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/axis.rs","byte_start":343207,"byte_end":343211,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":344949,"byte_end":344951,"line_start":46,"line_end":46,"column_start":24,"column_end":26},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3486},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":345086,"byte_end":345087,"line_start":54,"line_end":54,"column_start":27,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2633},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":345237,"byte_end":345246,"line_start":65,"line_end":65,"column_start":24,"column_end":33},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6203},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/conversion.rs","byte_start":345391,"byte_end":345394,"line_start":73,"line_end":73,"column_start":24,"column_end":27},"kind":{"Impl":{"id":268}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":348811,"byte_end":348814,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":6042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":349312,"byte_end":349315,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":6042},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dim.rs","byte_start":349440,"byte_end":349443,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6042},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353293,"byte_end":353298,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2501},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353305,"byte_end":353307,"line_start":31,"line_end":31,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2536},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353314,"byte_end":353319,"line_start":32,"line_end":32,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":8962},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353326,"byte_end":353330,"line_start":33,"line_end":33,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2880},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353337,"byte_end":353341,"line_start":34,"line_end":34,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2892},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353348,"byte_end":353355,"line_start":35,"line_end":35,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353362,"byte_end":353370,"line_start":36,"line_end":36,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":3180},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353400,"byte_end":353403,"line_start":37,"line_end":37,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2947},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353431,"byte_end":353440,"line_start":38,"line_end":38,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2978},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353455,"byte_end":353464,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2978},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353481,"byte_end":353484,"line_start":40,"line_end":40,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2952},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353512,"byte_end":353521,"line_start":41,"line_end":41,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2982},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353536,"byte_end":353545,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2982},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353562,"byte_end":353565,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2957},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353594,"byte_end":353597,"line_start":44,"line_end":44,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2957},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353625,"byte_end":353634,"line_start":45,"line_end":45,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2986},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353649,"byte_end":353658,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2986},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":353675,"byte_end":353684,"line_start":47,"line_end":47,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2986},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":364551,"byte_end":364554,"line_start":394,"line_end":394,"column_start":20,"column_end":23},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":365491,"byte_end":365494,"line_start":438,"line_end":438,"column_start":20,"column_end":23},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":368040,"byte_end":368043,"line_start":554,"line_end":554,"column_start":20,"column_end":23},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":371743,"byte_end":371746,"line_start":711,"line_end":711,"column_start":20,"column_end":23},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":376812,"byte_end":376817,"line_start":885,"line_end":885,"column_start":20,"column_end":25},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":163},"to":{"krate":0,"index":2811}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":377878,"byte_end":377881,"line_start":934,"line_end":934,"column_start":23,"column_end":26},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6042},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dimension_trait.rs","byte_start":378063,"byte_end":378066,"line_start":941,"line_end":941,"column_start":26,"column_end":29},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6042},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":378447,"byte_end":378456,"line_start":14,"line_end":14,"column_start":19,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6190},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":378802,"byte_end":378811,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6190},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379211,"byte_end":379220,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6190},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379337,"byte_end":379346,"line_start":48,"line_end":48,"column_start":22,"column_end":31},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379648,"byte_end":379657,"line_start":60,"line_end":60,"column_start":22,"column_end":31},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":379899,"byte_end":379908,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380104,"byte_end":380113,"line_start":81,"line_end":81,"column_start":25,"column_end":34},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6190},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380321,"byte_end":380330,"line_start":90,"line_end":90,"column_start":20,"column_end":29},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6190},"to":{"krate":2,"index":2536}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380371,"byte_end":380380,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6190},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":380816,"byte_end":380825,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6190},"to":{"krate":2,"index":9168}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":381241,"byte_end":381250,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":382575,"byte_end":382584,"line_start":159,"line_end":159,"column_start":29,"column_end":38},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":382713,"byte_end":382722,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":382852,"byte_end":382861,"line_start":173,"line_end":173,"column_start":22,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383041,"byte_end":383050,"line_start":183,"line_end":183,"column_start":25,"column_end":34},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":3180}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383194,"byte_end":383203,"line_start":192,"line_end":192,"column_start":16,"column_end":25},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383318,"byte_end":383327,"line_start":200,"line_end":200,"column_start":19,"column_end":28},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383650,"byte_end":383653,"line_start":216,"line_end":216,"column_start":21,"column_end":24},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":3188}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/dynindeximpl.rs","byte_start":383829,"byte_end":383834,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384641,"byte_end":384646,"line_start":21,"line_end":21,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":8962},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":384841,"byte_end":384842,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3128},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":387028,"byte_end":387030,"line_start":100,"line_end":100,"column_start":30,"column_end":32},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3486},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/ndindex.rs","byte_start":387347,"byte_end":387349,"line_start":111,"line_end":111,"column_start":32,"column_end":34},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3486},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391810,"byte_end":391819,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2811},"to":{"krate":0,"index":3188}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":391901,"byte_end":391904,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":3188}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/remove_axis.rs","byte_start":392071,"byte_end":392074,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":3188}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/dimension/mod.rs","byte_start":313833,"byte_end":313834,"line_start":292,"line_end":292,"column_start":26,"column_end":27},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3227},"to":{"krate":0,"index":3223}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50209,"byte_end":50221,"line_start":1401,"line_end":1401,"column_start":19,"column_end":31},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6324},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":50683,"byte_end":50694,"line_start":1418,"line_end":1418,"column_start":9,"column_end":20},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51149,"byte_end":51157,"line_start":1436,"line_end":1436,"column_start":9,"column_end":17},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":51540,"byte_end":51547,"line_start":1454,"line_end":1454,"column_start":13,"column_end":20},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_clone.rs","byte_start":394998,"byte_end":395007,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_clone.rs","byte_start":395812,"byte_end":395821,"line_start":37,"line_end":37,"column_start":48,"column_end":57},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":396871,"byte_end":396880,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":401091,"byte_end":401100,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":403757,"byte_end":403766,"line_start":244,"line_end":244,"column_start":15,"column_end":24},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_constructors.rs","byte_start":412977,"byte_end":412986,"line_start":504,"line_end":504,"column_start":15,"column_end":24},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_methods.rs","byte_start":416791,"byte_end":416800,"line_start":35,"line_end":35,"column_start":15,"column_end":24},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":494085,"byte_end":494090,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_owned_array.rs","byte_start":495496,"byte_end":495501,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_special_element_types.rs","byte_start":496541,"byte_end":496550,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/lib.rs","byte_start":52131,"byte_end":52140,"line_start":1481,"line_end":1481,"column_start":15,"column_end":24},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_1d.rs","byte_start":498618,"byte_end":498627,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_2d.rs","byte_start":499459,"byte_end":499468,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_dyn.rs","byte_start":503270,"byte_end":503279,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/numeric/impl_numeric.rs","byte_start":505392,"byte_end":505401,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":517138,"byte_end":517147,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":521505,"byte_end":521514,"line_start":169,"line_end":169,"column_start":44,"column_end":53},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3488},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522138,"byte_end":522147,"line_start":190,"line_end":190,"column_start":44,"column_end":53},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3488},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":522701,"byte_end":522710,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":523976,"byte_end":523985,"line_start":253,"line_end":253,"column_start":44,"column_end":53},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3488},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":525878,"byte_end":525887,"line_start":313,"line_end":313,"column_start":44,"column_end":53},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3488},"to":{"krate":0,"index":4152}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/linalg/impl_linalg.rs","byte_start":526452,"byte_end":526461,"line_start":335,"line_end":335,"column_start":15,"column_end":24},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543375,"byte_end":543380,"line_start":32,"line_end":32,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2501},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543862,"byte_end":543869,"line_start":48,"line_end":48,"column_start":24,"column_end":31},"kind":{"Impl":{"id":345}},"from":{"krate":22,"index":523},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":543901,"byte_end":543908,"line_start":49,"line_end":49,"column_start":24,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":22,"index":523},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":551955,"byte_end":551964,"line_start":293,"line_end":293,"column_start":27,"column_end":36},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2974}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_ops.rs","byte_start":552776,"byte_end":552785,"line_start":323,"line_end":323,"column_start":27,"column_end":36},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":2999}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":557082,"byte_end":557091,"line_start":18,"line_end":18,"column_start":16,"column_end":25},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":3505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":560869,"byte_end":560881,"line_start":113,"line_end":113,"column_start":16,"column_end":28},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":564998,"byte_end":565007,"line_start":218,"line_end":218,"column_start":16,"column_end":25},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":3505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/constructors.rs","byte_start":565876,"byte_end":565888,"line_start":246,"line_end":246,"column_start":16,"column_end":28},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":567381,"byte_end":567390,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":3505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":568901,"byte_end":568910,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":3505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":569778,"byte_end":569790,"line_start":95,"line_end":95,"column_start":13,"column_end":25},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570463,"byte_end":570475,"line_start":117,"line_end":117,"column_start":16,"column_end":28},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":570774,"byte_end":570783,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":3505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/conversions.rs","byte_start":571497,"byte_end":571509,"line_start":158,"line_end":158,"column_start":16,"column_end":28},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/indexing.rs","byte_start":578025,"byte_end":578037,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":3509},"to":{"krate":0,"index":4424}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":580434,"byte_end":580443,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":3505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_views/splitting.rs","byte_start":584530,"byte_end":584542,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":586267,"byte_end":586279,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":3513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_raw_views.rs","byte_start":591665,"byte_end":591680,"line_start":145,"line_end":145,"column_start":12,"column_end":27},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":3516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":597835,"byte_end":597843,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":3501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":598199,"byte_end":598207,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":3501},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/sri/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.14.0/src/impl_cow.rs","byte_start":598516,"byte_end":598524,"line_start":45,"line_end":45,"column_start":38,"column_end":46},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":3501},"to":{"krate":2,"index":2786}}]}